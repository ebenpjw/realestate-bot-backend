{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/ConversationList.tsx"],"sourcesContent":["'use client'\n\nimport { formatDistanceToNow } from 'date-fns'\nimport clsx from 'clsx'\n\ninterface Conversation {\n  id: string\n  leadId: string\n  leadName: string\n  phoneNumber: string\n  status: 'new' | 'qualified' | 'booked' | 'lost'\n  lastMessage: string\n  lastMessageTime: string\n  unreadCount: number\n  intent?: string\n  avatar?: string\n}\n\ninterface ConversationListProps {\n  conversations: Conversation[]\n  selectedConversation: Conversation | null\n  onConversationSelect: (conversation: Conversation) => void\n}\n\nexport function ConversationList({\n  conversations,\n  selectedConversation,\n  onConversationSelect,\n}: ConversationListProps) {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'new':\n        return 'bg-blue-100 text-blue-800'\n      case 'qualified':\n        return 'bg-green-100 text-green-800'\n      case 'booked':\n        return 'bg-purple-100 text-purple-800'\n      case 'lost':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getIntentIcon = (intent?: string) => {\n    switch (intent) {\n      case 'buy':\n        return '🏠'\n      case 'rent':\n        return '🔑'\n      case 'browse':\n        return '👀'\n      case 'invest':\n        return '💰'\n      default:\n        return '💬'\n    }\n  }\n\n  const formatTime = (timeString: string) => {\n    // Handle relative time strings like \"2 minutes ago\"\n    if (timeString.includes('ago') || timeString.includes('Just now')) {\n      return timeString\n    }\n    \n    try {\n      const date = new Date(timeString)\n      return formatDistanceToNow(date, { addSuffix: true })\n    } catch {\n      return timeString\n    }\n  }\n\n  return (\n    <div className=\"divide-y divide-gray-100\">\n      {conversations.map((conversation) => (\n        <div\n          key={conversation.id}\n          onClick={() => onConversationSelect(conversation)}\n          className={clsx(\n            'p-4 cursor-pointer transition-colors hover:bg-gray-50',\n            selectedConversation?.id === conversation.id && 'bg-primary-50 border-r-2 border-primary-500'\n          )}\n        >\n          <div className=\"flex items-start space-x-3\">\n            {/* Avatar */}\n            <div className=\"flex-shrink-0\">\n              <div className=\"h-10 w-10 bg-primary-100 rounded-full flex items-center justify-center\">\n                {conversation.avatar ? (\n                  <img\n                    src={conversation.avatar}\n                    alt={conversation.leadName}\n                    className=\"h-10 w-10 rounded-full\"\n                  />\n                ) : (\n                  <span className=\"text-sm font-medium text-primary-700\">\n                    {conversation.leadName.charAt(0)}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* Content */}\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <p className=\"text-sm font-medium text-gray-900 truncate\">\n                    {conversation.leadName}\n                  </p>\n                  <span className=\"text-xs\">\n                    {getIntentIcon(conversation.intent)}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  {conversation.unreadCount > 0 && (\n                    <span className=\"bg-primary-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                      {conversation.unreadCount}\n                    </span>\n                  )}\n                  <span className={clsx(\n                    'inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium',\n                    getStatusColor(conversation.status)\n                  )}>\n                    {conversation.status}\n                  </span>\n                </div>\n              </div>\n\n              <p className=\"text-xs text-gray-500 mb-2\">\n                {conversation.phoneNumber}\n              </p>\n\n              <p className=\"text-sm text-gray-600 truncate mb-1\">\n                {conversation.lastMessage}\n              </p>\n\n              <p className=\"text-xs text-gray-400\">\n                {formatTime(conversation.lastMessageTime)}\n              </p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAwBO,SAAS,iBAAiB,KAIT;QAJS,EAC/B,aAAa,EACb,oBAAoB,EACpB,oBAAoB,EACE,GAJS;IAK/B,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,oDAAoD;QACpD,IAAI,WAAW,QAAQ,CAAC,UAAU,WAAW,QAAQ,CAAC,aAAa;YACjE,OAAO;QACT;QAEA,IAAI;YACF,MAAM,OAAO,IAAI,KAAK;YACtB,OAAO,CAAA,GAAA,sJAAA,CAAA,sBAAmB,AAAD,EAAE,MAAM;gBAAE,WAAW;YAAK;QACrD,EAAE,UAAM;YACN,OAAO;QACT;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAC,6BAClB,6LAAC;gBAEC,SAAS,IAAM,qBAAqB;gBACpC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,yDACA,CAAA,iCAAA,2CAAA,qBAAsB,EAAE,MAAK,aAAa,EAAE,IAAI;0BAGlD,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACZ,aAAa,MAAM,iBAClB,6LAAC;oCACC,KAAK,aAAa,MAAM;oCACxB,KAAK,aAAa,QAAQ;oCAC1B,WAAU;;;;;yDAGZ,6LAAC;oCAAK,WAAU;8CACb,aAAa,QAAQ,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;sCAOtC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DACV,aAAa,QAAQ;;;;;;8DAExB,6LAAC;oDAAK,WAAU;8DACb,cAAc,aAAa,MAAM;;;;;;;;;;;;sDAGtC,6LAAC;4CAAI,WAAU;;gDACZ,aAAa,WAAW,GAAG,mBAC1B,6LAAC;oDAAK,WAAU;8DACb,aAAa,WAAW;;;;;;8DAG7B,6LAAC;oDAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EAClB,yEACA,eAAe,aAAa,MAAM;8DAEjC,aAAa,MAAM;;;;;;;;;;;;;;;;;;8CAK1B,6LAAC;oCAAE,WAAU;8CACV,aAAa,WAAW;;;;;;8CAG3B,6LAAC;oCAAE,WAAU;8CACV,aAAa,WAAW;;;;;;8CAG3B,6LAAC;oCAAE,WAAU;8CACV,WAAW,aAAa,eAAe;;;;;;;;;;;;;;;;;;eA5DzC,aAAa,EAAE;;;;;;;;;;AAoE9B;KAzHgB","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/ConversationView.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef, useEffect } from 'react'\nimport { format } from 'date-fns'\nimport {\n  PaperAirplaneIcon,\n  PhoneIcon,\n  CalendarDaysIcon,\n  InformationCircleIcon,\n  EllipsisVerticalIcon,\n} from '@heroicons/react/24/outline'\nimport { Menu, Transition } from '@headlessui/react'\nimport { Fragment } from 'react'\nimport clsx from 'clsx'\n\ninterface Conversation {\n  id: string\n  leadId: string\n  leadName: string\n  phoneNumber: string\n  status: 'new' | 'qualified' | 'booked' | 'lost'\n  lastMessage: string\n  lastMessageTime: string\n  unreadCount: number\n  intent?: string\n  avatar?: string\n}\n\ninterface Message {\n  id: string\n  conversationId: string\n  sender: 'lead' | 'bot' | 'agent'\n  message: string\n  timestamp: string\n  messageType: 'text' | 'template' | 'media'\n  templateName?: string\n  status?: 'sent' | 'delivered' | 'read'\n}\n\ninterface ConversationViewProps {\n  conversation: Conversation\n  messages: Message[]\n  onSendMessage: (message: string) => void\n  connected: boolean\n}\n\nexport function ConversationView({\n  conversation,\n  messages,\n  onSendMessage,\n  connected,\n}: ConversationViewProps) {\n  const [newMessage, setNewMessage] = useState('')\n  const [isTyping, setIsTyping] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  const inputRef = useRef<HTMLTextAreaElement>(null)\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }, [messages])\n\n  // Auto-resize textarea\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto'\n      inputRef.current.style.height = `${inputRef.current.scrollHeight}px`\n    }\n  }, [newMessage])\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim() || !connected) return\n\n    onSendMessage(newMessage.trim())\n    setNewMessage('')\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  const getMessageStatusIcon = (status?: string) => {\n    switch (status) {\n      case 'sent':\n        return '✓'\n      case 'delivered':\n        return '✓✓'\n      case 'read':\n        return '✓✓'\n      default:\n        return ''\n    }\n  }\n\n  const getSenderName = (sender: string) => {\n    switch (sender) {\n      case 'lead':\n        return conversation.leadName\n      case 'bot':\n        return 'Doro (Bot)'\n      case 'agent':\n        return 'You'\n      default:\n        return sender\n    }\n  }\n\n  const getSenderColor = (sender: string) => {\n    switch (sender) {\n      case 'lead':\n        return 'text-gray-900'\n      case 'bot':\n        return 'text-primary-600'\n      case 'agent':\n        return 'text-green-600'\n      default:\n        return 'text-gray-900'\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'new':\n        return 'bg-blue-100 text-blue-800'\n      case 'qualified':\n        return 'bg-green-100 text-green-800'\n      case 'booked':\n        return 'bg-purple-100 text-purple-800'\n      case 'lost':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 bg-white\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"h-10 w-10 bg-primary-100 rounded-full flex items-center justify-center\">\n              <span className=\"text-sm font-medium text-primary-700\">\n                {conversation.leadName.charAt(0)}\n              </span>\n            </div>\n            <div>\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                {conversation.leadName}\n              </h2>\n              <div className=\"flex items-center space-x-2\">\n                <p className=\"text-sm text-gray-500\">{conversation.phoneNumber}</p>\n                <span className={clsx(\n                  'inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium',\n                  getStatusColor(conversation.status)\n                )}>\n                  {conversation.status}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <button className=\"btn-ghost p-2\">\n              <PhoneIcon className=\"h-5 w-5\" />\n            </button>\n            <button className=\"btn-ghost p-2\">\n              <CalendarDaysIcon className=\"h-5 w-5\" />\n            </button>\n            <button className=\"btn-ghost p-2\">\n              <InformationCircleIcon className=\"h-5 w-5\" />\n            </button>\n\n            <Menu as=\"div\" className=\"relative\">\n              <Menu.Button className=\"btn-ghost p-2\">\n                <EllipsisVerticalIcon className=\"h-5 w-5\" />\n              </Menu.Button>\n\n              <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-100\"\n                enterFrom=\"transform opacity-0 scale-95\"\n                enterTo=\"transform opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75\"\n                leaveFrom=\"transform opacity-100 scale-100\"\n                leaveTo=\"transform opacity-0 scale-95\"\n              >\n                <Menu.Items className=\"absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-lg bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                  <Menu.Item>\n                    {({ active }) => (\n                      <button\n                        className={clsx(\n                          active ? 'bg-gray-100' : '',\n                          'block w-full px-4 py-2 text-left text-sm text-gray-700'\n                        )}\n                      >\n                        View Lead Profile\n                      </button>\n                    )}\n                  </Menu.Item>\n                  <Menu.Item>\n                    {({ active }) => (\n                      <button\n                        className={clsx(\n                          active ? 'bg-gray-100' : '',\n                          'block w-full px-4 py-2 text-left text-sm text-gray-700'\n                        )}\n                      >\n                        Schedule Appointment\n                      </button>\n                    )}\n                  </Menu.Item>\n                  <Menu.Item>\n                    {({ active }) => (\n                      <button\n                        className={clsx(\n                          active ? 'bg-gray-100' : '',\n                          'block w-full px-4 py-2 text-left text-sm text-gray-700'\n                        )}\n                      >\n                        Export Conversation\n                      </button>\n                    )}\n                  </Menu.Item>\n                </Menu.Items>\n              </Transition>\n            </Menu>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50\">\n        {messages.map((message, index) => {\n          const isFromLead = message.sender === 'lead'\n          const isFromBot = message.sender === 'bot'\n          const previousMessage = messages[index - 1]\n          const showTimestamp = index === 0 ||\n            (previousMessage && new Date(message.timestamp).getTime() - new Date(previousMessage.timestamp).getTime() > 300000) // 5 minutes\n\n          return (\n            <div key={message.id}>\n              {showTimestamp && (\n                <div className=\"text-center text-xs text-gray-500 mb-4\">\n                  {format(new Date(message.timestamp), 'MMM d, yyyy h:mm a')}\n                </div>\n              )}\n\n              <div className={clsx(\n                'flex',\n                isFromLead ? 'justify-start' : 'justify-end'\n              )}>\n                <div className={clsx(\n                  'max-w-xs lg:max-w-md px-4 py-2 rounded-2xl',\n                  isFromLead \n                    ? 'bg-white text-gray-900 rounded-bl-sm' \n                    : isFromBot\n                    ? 'bg-primary-100 text-primary-900 rounded-br-sm'\n                    : 'bg-primary-600 text-white rounded-br-sm'\n                )}>\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <span className={clsx(\n                      'text-xs font-medium',\n                      getSenderColor(message.sender)\n                    )}>\n                      {getSenderName(message.sender)}\n                    </span>\n                    {message.templateName && (\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        Template: {message.templateName}\n                      </span>\n                    )}\n                  </div>\n                  \n                  <p className=\"text-sm whitespace-pre-wrap\">{message.message}</p>\n                  \n                  <div className=\"flex items-center justify-between mt-1\">\n                    <span className=\"text-xs opacity-70\">\n                      {format(new Date(message.timestamp), 'h:mm a')}\n                    </span>\n                    {!isFromLead && (\n                      <span className=\"text-xs opacity-70\">\n                        {getMessageStatusIcon(message.status)}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })}\n\n        {isTyping && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-white text-gray-900 px-4 py-2 rounded-2xl rounded-bl-sm\">\n              <div className=\"flex space-x-1\">\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Message Input */}\n      <div className=\"p-4 border-t border-gray-200 bg-white\">\n        <div className=\"flex items-end space-x-3\">\n          <div className=\"flex-1\">\n            <textarea\n              ref={inputRef}\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder={connected ? \"Type a message...\" : \"Disconnected - cannot send messages\"}\n              disabled={!connected}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 disabled:bg-gray-100 disabled:cursor-not-allowed\"\n              rows={1}\n              style={{ minHeight: '40px', maxHeight: '120px' }}\n            />\n          </div>\n          <button\n            onClick={handleSendMessage}\n            disabled={!newMessage.trim() || !connected}\n            className=\"btn-primary p-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <PaperAirplaneIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        {!connected && (\n          <p className=\"text-xs text-red-500 mt-2\">\n            Connection lost. Trying to reconnect...\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAEA;;;AAbA;;;;;;;AA8CO,SAAS,iBAAiB,KAKT;QALS,EAC/B,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,SAAS,EACa,GALS;;IAM/B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC9C,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAuB;IAE7C,iDAAiD;IACjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;gBACR;aAAA,0BAAA,eAAe,OAAO,cAAtB,8CAAA,wBAAwB,cAAc,CAAC;gBAAE,UAAU;YAAS;QAC9D;qCAAG;QAAC;KAAS;IAEb,uBAAuB;IACvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG;gBAChC,SAAS,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,AAAC,GAAgC,OAA9B,SAAS,OAAO,CAAC,YAAY,EAAC;YACnE;QACF;qCAAG;QAAC;KAAW;IAEf,MAAM,oBAAoB;QACxB,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW;QAEtC,cAAc,WAAW,IAAI;QAC7B,cAAc;IAChB;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,MAAM,uBAAuB,CAAC;QAC5B,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,OAAQ;YACN,KAAK;gBACH,OAAO,aAAa,QAAQ;YAC9B,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAK,WAAU;kDACb,aAAa,QAAQ,CAAC,MAAM,CAAC;;;;;;;;;;;8CAGlC,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDACX,aAAa,QAAQ;;;;;;sDAExB,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAAyB,aAAa,WAAW;;;;;;8DAC9D,6LAAC;oDAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EAClB,yEACA,eAAe,aAAa,MAAM;8DAEjC,aAAa,MAAM;;;;;;;;;;;;;;;;;;;;;;;;sCAM5B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC,oNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;8CAEvB,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC,kOAAA,CAAA,mBAAgB;wCAAC,WAAU;;;;;;;;;;;8CAE9B,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC,4OAAA,CAAA,wBAAqB;wCAAC,WAAU;;;;;;;;;;;8CAGnC,6LAAC,8KAAA,CAAA,OAAI;oCAAC,IAAG;oCAAM,WAAU;;sDACvB,6LAAC,8KAAA,CAAA,OAAI,CAAC,MAAM;4CAAC,WAAU;sDACrB,cAAA,6LAAC,0OAAA,CAAA,uBAAoB;gDAAC,WAAU;;;;;;;;;;;sDAGlC,6LAAC,0LAAA,CAAA,aAAU;4CACT,IAAI,6JAAA,CAAA,WAAQ;4CACZ,OAAM;4CACN,WAAU;4CACV,SAAQ;4CACR,OAAM;4CACN,WAAU;4CACV,SAAQ;sDAER,cAAA,6LAAC,8KAAA,CAAA,OAAI,CAAC,KAAK;gDAAC,WAAU;;kEACpB,6LAAC,8KAAA,CAAA,OAAI,CAAC,IAAI;kEACP;gEAAC,EAAE,MAAM,EAAE;iFACV,6LAAC;gEACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,SAAS,gBAAgB,IACzB;0EAEH;;;;;;;;;;;;kEAKL,6LAAC,8KAAA,CAAA,OAAI,CAAC,IAAI;kEACP;gEAAC,EAAE,MAAM,EAAE;iFACV,6LAAC;gEACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,SAAS,gBAAgB,IACzB;0EAEH;;;;;;;;;;;;kEAKL,6LAAC,8KAAA,CAAA,OAAI,CAAC,IAAI;kEACP;gEAAC,EAAE,MAAM,EAAE;iFACV,6LAAC;gEACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,SAAS,gBAAgB,IACzB;0EAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAajB,6LAAC;gBAAI,WAAU;;oBACZ,SAAS,GAAG,CAAC,CAAC,SAAS;wBACtB,MAAM,aAAa,QAAQ,MAAM,KAAK;wBACtC,MAAM,YAAY,QAAQ,MAAM,KAAK;wBACrC,MAAM,kBAAkB,QAAQ,CAAC,QAAQ,EAAE;wBAC3C,MAAM,gBAAgB,UAAU,KAC7B,mBAAmB,IAAI,KAAK,QAAQ,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,gBAAgB,SAAS,EAAE,OAAO,KAAK,OAAQ,YAAY;;wBAElI,qBACE,6LAAC;;gCACE,+BACC,6LAAC;oCAAI,WAAU;8CACZ,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,QAAQ,SAAS,GAAG;;;;;;8CAIzC,6LAAC;oCAAI,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACjB,QACA,aAAa,kBAAkB;8CAE/B,cAAA,6LAAC;wCAAI,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACjB,8CACA,aACI,yCACA,YACA,kDACA;;0DAEJ,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EAClB,uBACA,eAAe,QAAQ,MAAM;kEAE5B,cAAc,QAAQ,MAAM;;;;;;oDAE9B,QAAQ,YAAY,kBACnB,6LAAC;wDAAK,WAAU;;4DAA6B;4DAChC,QAAQ,YAAY;;;;;;;;;;;;;0DAKrC,6LAAC;gDAAE,WAAU;0DAA+B,QAAQ,OAAO;;;;;;0DAE3D,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAK,WAAU;kEACb,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,QAAQ,SAAS,GAAG;;;;;;oDAEtC,CAAC,4BACA,6LAAC;wDAAK,WAAU;kEACb,qBAAqB,QAAQ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;2BAzCtC,QAAQ,EAAE;;;;;oBAiDxB;oBAEC,0BACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAI,WAAU;wCAAkD,OAAO;4CAAE,gBAAgB;wCAAO;;;;;;kDACjG,6LAAC;wCAAI,WAAU;wCAAkD,OAAO;4CAAE,gBAAgB;wCAAO;;;;;;;;;;;;;;;;;;;;;;kCAMzG,6LAAC;wBAAI,KAAK;;;;;;;;;;;;0BAIZ,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,KAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;oCAC7C,YAAY;oCACZ,aAAa,YAAY,sBAAsB;oCAC/C,UAAU,CAAC;oCACX,WAAU;oCACV,MAAM;oCACN,OAAO;wCAAE,WAAW;wCAAQ,WAAW;oCAAQ;;;;;;;;;;;0CAGnD,6LAAC;gCACC,SAAS;gCACT,UAAU,CAAC,WAAW,IAAI,MAAM,CAAC;gCACjC,WAAU;0CAEV,cAAA,6LAAC,oOAAA,CAAA,oBAAiB;oCAAC,WAAU;;;;;;;;;;;;;;;;;oBAIhC,CAAC,2BACA,6LAAC;wBAAE,WAAU;kCAA4B;;;;;;;;;;;;;;;;;;AAOnD;GAzSgB;KAAA","debugId":null}},
    {"offset": {"line": 818, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/ConversationSearch.tsx"],"sourcesContent":["'use client'\n\nimport { MagnifyingGlassIcon } from '@heroicons/react/24/outline'\n\ninterface ConversationSearchProps {\n  searchQuery: string\n  onSearchChange: (query: string) => void\n  statusFilter: string\n  onStatusFilterChange: (status: string) => void\n}\n\nexport function ConversationSearch({\n  searchQuery,\n  onSearchChange,\n  statusFilter,\n  onStatusFilterChange,\n}: ConversationSearchProps) {\n  const statusOptions = [\n    { value: 'all', label: 'All Status', count: 0 },\n    { value: 'new', label: 'New', count: 0 },\n    { value: 'qualified', label: 'Qualified', count: 0 },\n    { value: 'booked', label: 'Booked', count: 0 },\n    { value: 'lost', label: 'Lost', count: 0 },\n  ]\n\n  return (\n    <div className=\"space-y-3 mb-4\">\n      {/* Search Input */}\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <MagnifyingGlassIcon className=\"h-4 w-4 text-gray-400\" />\n        </div>\n        <input\n          type=\"text\"\n          className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg text-sm placeholder-gray-500 focus:outline-none focus:ring-1 focus:ring-primary-500 focus:border-primary-500\"\n          placeholder=\"Search conversations...\"\n          value={searchQuery}\n          onChange={(e) => onSearchChange(e.target.value)}\n        />\n      </div>\n\n      {/* Status Filter */}\n      <div className=\"flex flex-wrap gap-1\">\n        {statusOptions.map((option) => (\n          <button\n            key={option.value}\n            onClick={() => onStatusFilterChange(option.value)}\n            className={`px-3 py-1 text-xs font-medium rounded-full transition-colors ${\n              statusFilter === option.value\n                ? 'bg-primary-100 text-primary-700'\n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            }`}\n          >\n            {option.label}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWO,SAAS,mBAAmB,KAKT;QALS,EACjC,WAAW,EACX,cAAc,EACd,YAAY,EACZ,oBAAoB,EACI,GALS;IAMjC,MAAM,gBAAgB;QACpB;YAAE,OAAO;YAAO,OAAO;YAAc,OAAO;QAAE;QAC9C;YAAE,OAAO;YAAO,OAAO;YAAO,OAAO;QAAE;QACvC;YAAE,OAAO;YAAa,OAAO;YAAa,OAAO;QAAE;QACnD;YAAE,OAAO;YAAU,OAAO;YAAU,OAAO;QAAE;QAC7C;YAAE,OAAO;YAAQ,OAAO;YAAQ,OAAO;QAAE;KAC1C;IAED,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,wOAAA,CAAA,sBAAmB;4BAAC,WAAU;;;;;;;;;;;kCAEjC,6LAAC;wBACC,MAAK;wBACL,WAAU;wBACV,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0BAKlD,6LAAC;gBAAI,WAAU;0BACZ,cAAc,GAAG,CAAC,CAAC,uBAClB,6LAAC;wBAEC,SAAS,IAAM,qBAAqB,OAAO,KAAK;wBAChD,WAAW,AAAC,gEAIX,OAHC,iBAAiB,OAAO,KAAK,GACzB,oCACA;kCAGL,OAAO,KAAK;uBARR,OAAO,KAAK;;;;;;;;;;;;;;;;AAc7B;KAhDgB","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/resizable.tsx"],"sourcesContent":["import { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,sBAAsB;QAAC,EAC3B,SAAS,EACT,GAAG,OACwD;yBAC3D,6LAAC,wNAAA,CAAA,aAA6B;QAC5B,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qEACA;QAED,GAAG,KAAK;;;;;;;KATP;AAaN,MAAM,iBAAiB,wNAAA,CAAA,QAAwB;AAE/C,MAAM,kBAAkB;QAAC,EACvB,UAAU,EACV,SAAS,EACT,GAAG,OAGJ;yBACC,6LAAC,wNAAA,CAAA,oBAAoC;QACnC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2oBACA;QAED,GAAG,KAAK;kBAER,4BACC,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,yNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;;;;;;MAhB1B","debugId":null}},
    {"offset": {"line": 1041, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/app/agent/conversations/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { useAuth } from '@/lib/auth/AuthContext'\r\nimport { useSocket } from '@/lib/socket/SocketContext'\r\nimport { conversationsApi, type Conversation, type ConversationDetails } from '@/lib/api/services'\r\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner'\r\nimport { ConversationList } from '@/components/agent/ConversationList'\r\nimport { ConversationView } from '@/components/agent/ConversationView'\r\nimport { ConversationSearch } from '@/components/agent/ConversationSearch'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { ResizablePanelGroup, ResizablePanel, ResizableHandle } from '@/components/ui/resizable'\r\nimport {\r\n  Search,\r\n  Filter,\r\n  MessageSquare,\r\n  Circle,\r\n} from 'lucide-react'\r\n\r\n// Use the API types instead of local interfaces\r\n\r\n\r\nexport default function ConversationsPage() {\r\n  const { user } = useAuth()\r\n  const { socket, connected } = useSocket()\r\n  const [conversations, setConversations] = useState<Conversation[]>([])\r\n  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null)\r\n  const [conversationDetails, setConversationDetails] = useState<ConversationDetails | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [loadingMessages, setLoadingMessages] = useState(false)\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [statusFilter, setStatusFilter] = useState<string>('all')\r\n  const [showSearch, setShowSearch] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  // Filter conversations based on search and status\r\n  const filteredConversations = conversations.filter(conv => {\r\n    const matchesSearch = !searchQuery || \r\n      conv.leadName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      conv.phoneNumber.includes(searchQuery) ||\r\n      conv.lastMessage.toLowerCase().includes(searchQuery.toLowerCase())\r\n    \r\n    const matchesStatus = statusFilter === 'all' || conv.status === statusFilter\r\n    \r\n    return matchesSearch && matchesStatus\r\n  })\r\n\r\n  // Real-time message handling\r\n  useEffect(() => {\r\n    if (!socket || !connected) return\r\n\r\n    const handleNewMessage = (data: any) => {\r\n      // Update conversation list\r\n      setConversations(prev => prev.map(conv => \r\n        conv.id === data.conversationId \r\n          ? {\r\n              ...conv,\r\n              lastMessage: data.message,\r\n              lastMessageTime: 'Just now',\r\n              unreadCount: conv.unreadCount + 1\r\n            }\r\n          : conv\r\n      ))\r\n\r\n      // Add message to current conversation\r\n      if (selectedConversation?.id === data.conversationId) {\r\n        setMessages(prev => [...prev, {\r\n          id: data.messageId,\r\n          conversationId: data.conversationId,\r\n          sender: data.sender,\r\n          message: data.message,\r\n          timestamp: data.timestamp,\r\n          messageType: data.messageType || 'text',\r\n          status: 'delivered'\r\n        }])\r\n      }\r\n    }\r\n\r\n    socket.on('new_message', handleNewMessage)\r\n    socket.on('message_status_update', (data: any) => {\r\n      setMessages(prev => prev.map(msg => \r\n        msg.id === data.messageId \r\n          ? { ...msg, status: data.status }\r\n          : msg\r\n      ))\r\n    })\r\n\r\n    return () => {\r\n      socket.off('new_message', handleNewMessage)\r\n      socket.off('message_status_update')\r\n    }\r\n  }, [socket, connected, selectedConversation])\r\n\r\n  const handleConversationSelect = (conversation: Conversation) => {\r\n    setSelectedConversation(conversation)\r\n    \r\n    // Mark as read\r\n    setConversations(prev => prev.map(conv => \r\n      conv.id === conversation.id \r\n        ? { ...conv, unreadCount: 0 }\r\n        : conv\r\n    ))\r\n\r\n    // Load messages for this conversation\r\n    // In real app, this would be an API call\r\n    const conversationMessages = mockMessages.filter(msg => msg.conversationId === conversation.id)\r\n    setMessages(conversationMessages)\r\n  }\r\n\r\n  const handleSendMessage = (message: string) => {\r\n    if (!selectedConversation) return\r\n\r\n    const newMessage: Message = {\r\n      id: Date.now().toString(),\r\n      conversationId: selectedConversation.id,\r\n      sender: 'agent',\r\n      message,\r\n      timestamp: new Date().toISOString(),\r\n      messageType: 'text',\r\n      status: 'sent'\r\n    }\r\n\r\n    setMessages(prev => [...prev, newMessage])\r\n    \r\n    // Update conversation list\r\n    setConversations(prev => prev.map(conv => \r\n      conv.id === selectedConversation.id \r\n        ? {\r\n            ...conv,\r\n            lastMessage: message,\r\n            lastMessageTime: 'Just now'\r\n          }\r\n        : conv\r\n    ))\r\n\r\n    // Send via socket\r\n    if (socket && connected) {\r\n      socket.emit('send_message', {\r\n        conversationId: selectedConversation.id,\r\n        leadId: selectedConversation.leadId,\r\n        message,\r\n        agentId: user?.id\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className=\"h-full overflow-hidden\">\r\n      <ResizablePanelGroup direction=\"horizontal\" className=\"h-full\">\r\n        {/* Conversations List Panel */}\r\n        <ResizablePanel defaultSize={30} minSize={25} maxSize={50}>\r\n          <div className=\"h-full flex flex-col\">\r\n            {/* Header */}\r\n            <CardHeader className=\"pb-3\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <MessageSquare className=\"h-5 w-5\" />\r\n                  Conversations\r\n                </CardTitle>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    onClick={() => setShowSearch(!showSearch)}\r\n                  >\r\n                    <Search className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button variant=\"ghost\" size=\"sm\">\r\n                    <Filter className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Search */}\r\n              {showSearch && (\r\n                <ConversationSearch\r\n                  searchQuery={searchQuery}\r\n                  onSearchChange={setSearchQuery}\r\n                  statusFilter={statusFilter}\r\n                  onStatusFilterChange={setStatusFilter}\r\n                />\r\n              )}\r\n\r\n              {/* Stats */}\r\n              <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\r\n                <span>{filteredConversations.length} conversations</span>\r\n                <div className=\"flex items-center gap-1\">\r\n                  <Circle className={`w-2 h-2 ${connected ? 'fill-green-500 text-green-500' : 'fill-red-500 text-red-500'}`} />\r\n                  <Badge variant=\"outline\" className=\"text-xs\">\r\n                    {connected ? 'Online' : 'Offline'}\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n\r\n            {/* Conversation List */}\r\n            <CardContent className=\"flex-1 overflow-y-auto p-0\">\r\n              {loading ? (\r\n                <div className=\"flex items-center justify-center h-32\">\r\n                  <LoadingSpinner />\r\n                </div>\r\n              ) : filteredConversations.length > 0 ? (\r\n                <ConversationList\r\n                  conversations={filteredConversations}\r\n                  selectedConversation={selectedConversation}\r\n                  onConversationSelect={handleConversationSelect}\r\n                />\r\n              ) : (\r\n                <div className=\"flex flex-col items-center justify-center h-32 text-muted-foreground p-6\">\r\n                  <MessageSquare className=\"h-8 w-8 mb-2\" />\r\n                  <p className=\"text-sm\">No conversations found</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </div>\r\n        </ResizablePanel>\r\n\r\n        <ResizableHandle withHandle />\r\n\r\n        {/* Conversation View Panel */}\r\n        <ResizablePanel defaultSize={70}>\r\n          <div className=\"h-full flex flex-col\">\r\n            {selectedConversation ? (\r\n              <ConversationView\r\n                conversation={selectedConversation}\r\n                messages={messages}\r\n                onSendMessage={handleSendMessage}\r\n                connected={connected}\r\n              />\r\n            ) : (\r\n              <div className=\"flex-1 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                  <MessageSquare className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground/50\" />\r\n                  <h3 className=\"text-lg font-medium mb-2\">Select a conversation</h3>\r\n                  <p className=\"text-sm text-muted-foreground\">Choose a conversation from the list to start messaging</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ResizablePanel>\r\n      </ResizablePanelGroup>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}