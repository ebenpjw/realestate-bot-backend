{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/PerformanceMetrics.tsx"],"sourcesContent":["'use client'\n\nimport {\n  UserGroupIcon,\n  ChatBubbleLeftRightIcon,\n  CalendarDaysIcon,\n  CheckCircleIcon,\n} from '@heroicons/react/24/outline'\n\ninterface PerformanceData {\n  totalLeads: number\n  qualifiedLeads: number\n  appointmentsBooked: number\n  conversionRate: number\n  avgResponseTime: number\n  totalMessages: number\n  activeConversations: number\n  completedAppointments: number\n}\n\ninterface PerformanceMetricsProps {\n  data: PerformanceData\n}\n\nexport function PerformanceMetrics({ data }: PerformanceMetricsProps) {\n  const metrics = [\n    {\n      name: 'Lead Qualification Rate',\n      value: `${Math.round((data.qualifiedLeads / data.totalLeads) * 100)}%`,\n      description: `${data.qualifiedLeads} of ${data.totalLeads} leads qualified`,\n      icon: UserGroupIcon,\n      color: 'blue',\n    },\n    {\n      name: 'Booking Conversion Rate',\n      value: `${Math.round((data.appointmentsBooked / data.qualifiedLeads) * 100)}%`,\n      description: `${data.appointmentsBooked} appointments from ${data.qualifiedLeads} qualified leads`,\n      icon: CalendarDaysIcon,\n      color: 'green',\n    },\n    {\n      name: 'Message Efficiency',\n      value: `${Math.round(data.totalMessages / data.totalLeads)}`,\n      description: `Average messages per lead`,\n      icon: ChatBubbleLeftRightIcon,\n      color: 'purple',\n    },\n    {\n      name: 'Completion Rate',\n      value: `${Math.round((data.completedAppointments / data.appointmentsBooked) * 100)}%`,\n      description: `${data.completedAppointments} of ${data.appointmentsBooked} appointments completed`,\n      icon: CheckCircleIcon,\n      color: 'emerald',\n    },\n  ]\n\n  return (\n    <div className=\"card\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Performance Overview</h3>\n        <p className=\"text-sm text-gray-500 mt-1\">\n          Key performance indicators for your lead management\n        </p>\n      </div>\n      \n      <div className=\"p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {metrics.map((metric) => {\n            const Icon = metric.icon\n            return (\n              <div key={metric.name} className=\"text-center\">\n                <div className={`mx-auto h-12 w-12 bg-${metric.color}-100 rounded-lg flex items-center justify-center mb-3`}>\n                  <Icon className={`h-6 w-6 text-${metric.color}-600`} />\n                </div>\n                <div className=\"text-2xl font-bold text-gray-900 mb-1\">\n                  {metric.value}\n                </div>\n                <div className=\"text-sm font-medium text-gray-900 mb-1\">\n                  {metric.name}\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  {metric.description}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\n        {/* Progress Bars */}\n        <div className=\"mt-8 space-y-4\">\n          <div>\n            <div className=\"flex justify-between text-sm font-medium text-gray-900 mb-1\">\n              <span>Lead to Qualified</span>\n              <span>{Math.round((data.qualifiedLeads / data.totalLeads) * 100)}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${(data.qualifiedLeads / data.totalLeads) * 100}%` }}\n              />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"flex justify-between text-sm font-medium text-gray-900 mb-1\">\n              <span>Qualified to Booked</span>\n              <span>{Math.round((data.appointmentsBooked / data.qualifiedLeads) * 100)}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${(data.appointmentsBooked / data.qualifiedLeads) * 100}%` }}\n              />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"flex justify-between text-sm font-medium text-gray-900 mb-1\">\n              <span>Booked to Completed</span>\n              <span>{Math.round((data.completedAppointments / data.appointmentsBooked) * 100)}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className=\"bg-emerald-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${(data.completedAppointments / data.appointmentsBooked) * 100}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/ConversionChart.tsx"],"sourcesContent":["'use client'\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\n\ninterface ConversionData {\n  name: string\n  leads: number\n  qualified: number\n  booked: number\n}\n\ninterface ConversionChartProps {\n  data: ConversionData[]\n}\n\nexport function ConversionChart({ data }: ConversionChartProps) {\n  return (\n    <div className=\"card\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Conversion Funnel Trends</h3>\n        <p className=\"text-sm text-gray-500 mt-1\">\n          Track how leads progress through your sales funnel over time\n        </p>\n      </div>\n      \n      <div className=\"p-6\">\n        <div className=\"h-80\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis \n                dataKey=\"name\" \n                stroke=\"#6b7280\"\n                fontSize={12}\n              />\n              <YAxis \n                stroke=\"#6b7280\"\n                fontSize={12}\n              />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#fff',\n                  border: '1px solid #e5e7eb',\n                  borderRadius: '8px',\n                  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n                }}\n              />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"leads\"\n                stroke=\"#3b82f6\"\n                strokeWidth={2}\n                dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\n                activeDot={{ r: 6, stroke: '#3b82f6', strokeWidth: 2 }}\n                name=\"Total Leads\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"qualified\"\n                stroke=\"#10b981\"\n                strokeWidth={2}\n                dot={{ fill: '#10b981', strokeWidth: 2, r: 4 }}\n                activeDot={{ r: 6, stroke: '#10b981', strokeWidth: 2 }}\n                name=\"Qualified Leads\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"booked\"\n                stroke=\"#8b5cf6\"\n                strokeWidth={2}\n                dot={{ fill: '#8b5cf6', strokeWidth: 2, r: 4 }}\n                activeDot={{ r: 6, stroke: '#8b5cf6', strokeWidth: 2 }}\n                name=\"Appointments Booked\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Summary Stats */}\n        <div className=\"mt-6 grid grid-cols-3 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {data.reduce((sum, item) => sum + item.leads, 0)}\n            </div>\n            <div className=\"text-sm text-gray-500\">Total Leads</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {data.reduce((sum, item) => sum + item.qualified, 0)}\n            </div>\n            <div className=\"text-sm text-gray-500\">Qualified</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {data.reduce((sum, item) => sum + item.booked, 0)}\n            </div>\n            <div className=\"text-sm text-gray-500\">Booked</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ConversionChart\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAeO,SAAS,gBAAgB,KAA8B;QAA9B,EAAE,IAAI,EAAwB,GAA9B;IAC9B,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,6LAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;0BAK5C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;4BAAC,OAAM;4BAAO,QAAO;sCACvC,cAAA,6LAAC,wJAAA,CAAA,YAAS;gCAAC,MAAM;gCAAM,QAAQ;oCAAE,KAAK;oCAAG,OAAO;oCAAI,MAAM;oCAAI,QAAQ;gCAAE;;kDACtE,6LAAC,gKAAA,CAAA,gBAAa;wCAAC,iBAAgB;wCAAM,QAAO;;;;;;kDAC5C,6LAAC,wJAAA,CAAA,QAAK;wCACJ,SAAQ;wCACR,QAAO;wCACP,UAAU;;;;;;kDAEZ,6LAAC,wJAAA,CAAA,QAAK;wCACJ,QAAO;wCACP,UAAU;;;;;;kDAEZ,6LAAC,0JAAA,CAAA,UAAO;wCACN,cAAc;4CACZ,iBAAiB;4CACjB,QAAQ;4CACR,cAAc;4CACd,WAAW;wCACb;;;;;;kDAEF,6LAAC,yJAAA,CAAA,SAAM;;;;;kDACP,6LAAC,uJAAA,CAAA,OAAI;wCACH,MAAK;wCACL,SAAQ;wCACR,QAAO;wCACP,aAAa;wCACb,KAAK;4CAAE,MAAM;4CAAW,aAAa;4CAAG,GAAG;wCAAE;wCAC7C,WAAW;4CAAE,GAAG;4CAAG,QAAQ;4CAAW,aAAa;wCAAE;wCACrD,MAAK;;;;;;kDAEP,6LAAC,uJAAA,CAAA,OAAI;wCACH,MAAK;wCACL,SAAQ;wCACR,QAAO;wCACP,aAAa;wCACb,KAAK;4CAAE,MAAM;4CAAW,aAAa;4CAAG,GAAG;wCAAE;wCAC7C,WAAW;4CAAE,GAAG;4CAAG,QAAQ;4CAAW,aAAa;wCAAE;wCACrD,MAAK;;;;;;kDAEP,6LAAC,uJAAA,CAAA,OAAI;wCACH,MAAK;wCACL,SAAQ;wCACR,QAAO;wCACP,aAAa;wCACb,KAAK;4CAAE,MAAM;4CAAW,aAAa;4CAAG,GAAG;wCAAE;wCAC7C,WAAW;4CAAE,GAAG;4CAAG,QAAQ;4CAAW,aAAa;wCAAE;wCACrD,MAAK;;;;;;;;;;;;;;;;;;;;;;kCAOb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACZ,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE;;;;;;kDAEhD,6LAAC;wCAAI,WAAU;kDAAwB;;;;;;;;;;;;0CAEzC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACZ,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,SAAS,EAAE;;;;;;kDAEpD,6LAAC;wCAAI,WAAU;kDAAwB;;;;;;;;;;;;0CAEzC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACZ,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,MAAM,EAAE;;;;;;kDAEjD,6LAAC;wCAAI,WAAU;kDAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMnD;KAxFgB;uCA0FD","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/ResponseTimeChart.tsx"],"sourcesContent":["'use client'\n\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine } from 'recharts'\n\ninterface ResponseTimeData {\n  name: string\n  avgTime: number\n  target: number\n}\n\ninterface ResponseTimeChartProps {\n  data: ResponseTimeData[]\n}\n\nexport function ResponseTimeChart({ data }: ResponseTimeChartProps) {\n  const averageResponseTime = data.reduce((sum, item) => sum + item.avgTime, 0) / data.length\n  const targetTime = data[0]?.target || 3.0\n\n  return (\n    <div className=\"card\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Response Time Performance</h3>\n        <p className=\"text-sm text-gray-500 mt-1\">\n          Average response time by day with target benchmark\n        </p>\n      </div>\n      \n      <div className=\"p-6\">\n        <div className=\"h-80\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis \n                dataKey=\"name\" \n                stroke=\"#6b7280\"\n                fontSize={12}\n              />\n              <YAxis \n                stroke=\"#6b7280\"\n                fontSize={12}\n                label={{ value: 'Seconds', angle: -90, position: 'insideLeft' }}\n              />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#fff',\n                  border: '1px solid #e5e7eb',\n                  borderRadius: '8px',\n                  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n                }}\n                formatter={(value: number) => [`${value}s`, 'Response Time']}\n              />\n              <ReferenceLine \n                y={targetTime} \n                stroke=\"#ef4444\" \n                strokeDasharray=\"5 5\"\n                label={{ value: \"Target\", position: \"top\" }}\n              />\n              <Bar\n                dataKey=\"avgTime\"\n                fill=\"#3b82f6\"\n                radius={[4, 4, 0, 0]}\n                name=\"Average Response Time\"\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Performance Summary */}\n        <div className=\"mt-6 grid grid-cols-2 gap-6\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {averageResponseTime.toFixed(1)}s\n            </div>\n            <div className=\"text-sm text-gray-500\">Average Response Time</div>\n            <div className={`text-xs mt-1 ${\n              averageResponseTime <= targetTime ? 'text-green-600' : 'text-red-600'\n            }`}>\n              {averageResponseTime <= targetTime ? 'Meeting target' : 'Above target'}\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-gray-900\">\n              {targetTime.toFixed(1)}s\n            </div>\n            <div className=\"text-sm text-gray-500\">Target Response Time</div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Company benchmark\n            </div>\n          </div>\n        </div>\n\n        {/* Performance Indicator */}\n        <div className=\"mt-4\">\n          <div className=\"flex justify-between text-sm font-medium text-gray-900 mb-2\">\n            <span>Performance vs Target</span>\n            <span>\n              {averageResponseTime <= targetTime ? 'On Track' : 'Needs Improvement'}\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className={`h-2 rounded-full transition-all duration-300 ${\n                averageResponseTime <= targetTime ? 'bg-green-600' : 'bg-red-600'\n              }`}\n              style={{ \n                width: `${Math.min((targetTime / averageResponseTime) * 100, 100)}%` \n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ResponseTimeChart\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAcO,SAAS,kBAAkB,KAAgC;QAAhC,EAAE,IAAI,EAA0B,GAAhC;QAEb;IADnB,MAAM,sBAAsB,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,OAAO,EAAE,KAAK,KAAK,MAAM;IAC3F,MAAM,aAAa,EAAA,SAAA,IAAI,CAAC,EAAE,cAAP,6BAAA,OAAS,MAAM,KAAI;IAEtC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,6LAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;0BAK5C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;4BAAC,OAAM;4BAAO,QAAO;sCACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;gCAAC,MAAM;gCAAM,QAAQ;oCAAE,KAAK;oCAAI,OAAO;oCAAI,MAAM;oCAAI,QAAQ;gCAAE;;kDACtE,6LAAC,gKAAA,CAAA,gBAAa;wCAAC,iBAAgB;wCAAM,QAAO;;;;;;kDAC5C,6LAAC,wJAAA,CAAA,QAAK;wCACJ,SAAQ;wCACR,QAAO;wCACP,UAAU;;;;;;kDAEZ,6LAAC,wJAAA,CAAA,QAAK;wCACJ,QAAO;wCACP,UAAU;wCACV,OAAO;4CAAE,OAAO;4CAAW,OAAO,CAAC;4CAAI,UAAU;wCAAa;;;;;;kDAEhE,6LAAC,0JAAA,CAAA,UAAO;wCACN,cAAc;4CACZ,iBAAiB;4CACjB,QAAQ;4CACR,cAAc;4CACd,WAAW;wCACb;wCACA,WAAW,CAAC,QAAkB;gDAAE,GAAQ,OAAN,OAAM;gDAAI;6CAAgB;;;;;;kDAE9D,6LAAC,gKAAA,CAAA,gBAAa;wCACZ,GAAG;wCACH,QAAO;wCACP,iBAAgB;wCAChB,OAAO;4CAAE,OAAO;4CAAU,UAAU;wCAAM;;;;;;kDAE5C,6LAAC,sJAAA,CAAA,MAAG;wCACF,SAAQ;wCACR,MAAK;wCACL,QAAQ;4CAAC;4CAAG;4CAAG;4CAAG;yCAAE;wCACpB,MAAK;;;;;;;;;;;;;;;;;;;;;;kCAOb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;4CACZ,oBAAoB,OAAO,CAAC;4CAAG;;;;;;;kDAElC,6LAAC;wCAAI,WAAU;kDAAwB;;;;;;kDACvC,6LAAC;wCAAI,WAAW,AAAC,gBAEhB,OADC,uBAAuB,aAAa,mBAAmB;kDAEtD,uBAAuB,aAAa,mBAAmB;;;;;;;;;;;;0CAG5D,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;4CACZ,WAAW,OAAO,CAAC;4CAAG;;;;;;;kDAEzB,6LAAC;wCAAI,WAAU;kDAAwB;;;;;;kDACvC,6LAAC;wCAAI,WAAU;kDAA6B;;;;;;;;;;;;;;;;;;kCAOhD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;kDAAK;;;;;;kDACN,6LAAC;kDACE,uBAAuB,aAAa,aAAa;;;;;;;;;;;;0CAGtD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,WAAW,AAAC,gDAEX,OADC,uBAAuB,aAAa,iBAAiB;oCAEvD,OAAO;wCACL,OAAO,AAAC,GAA0D,OAAxD,KAAK,GAAG,CAAC,AAAC,aAAa,sBAAuB,KAAK,MAAK;oCACpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOd;KAnGgB;uCAqGD","debugId":null}},
    {"offset": {"line": 931, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/LeadSourceChart.tsx"],"sourcesContent":["'use client'\n\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts'\n\ninterface LeadSourceData {\n  name: string\n  value: number\n  color: string\n}\n\ninterface LeadSourceChartProps {\n  data: LeadSourceData[]\n}\n\nexport function LeadSourceChart({ data }: LeadSourceChartProps) {\n  const total = data.reduce((sum, item) => sum + item.value, 0)\n\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }: any) => {\n    if (percent < 0.05) return null // Don't show labels for slices smaller than 5%\n    \n    const RADIAN = Math.PI / 180\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5\n    const x = cx + radius * Math.cos(-midAngle * RADIAN)\n    const y = cy + radius * Math.sin(-midAngle * RADIAN)\n\n    return (\n      <text \n        x={x} \n        y={y} \n        fill=\"white\" \n        textAnchor={x > cx ? 'start' : 'end'} \n        dominantBaseline=\"central\"\n        fontSize={12}\n        fontWeight=\"medium\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    )\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Lead Sources</h3>\n        <p className=\"text-sm text-gray-500 mt-1\">\n          Distribution of leads by acquisition channel\n        </p>\n      </div>\n      \n      <div className=\"p-6\">\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={data}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                label={renderCustomizedLabel}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Pie>\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#fff',\n                  border: '1px solid #e5e7eb',\n                  borderRadius: '8px',\n                  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n                }}\n                formatter={(value: number) => [value, 'Leads']}\n              />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Legend */}\n        <div className=\"mt-4 space-y-2\">\n          {data.map((item, index) => (\n            <div key={index} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div \n                  className=\"w-3 h-3 rounded-full mr-3\"\n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-sm text-gray-900\">{item.name}</span>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-sm font-medium text-gray-900\">{item.value}</div>\n                <div className=\"text-xs text-gray-500\">\n                  {((item.value / total) * 100).toFixed(1)}%\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Total */}\n        <div className=\"mt-4 pt-4 border-t border-gray-200\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-sm font-medium text-gray-900\">Total Leads</span>\n            <span className=\"text-lg font-bold text-gray-900\">{total}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LeadSourceChart\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAcO,SAAS,gBAAgB,KAA8B;QAA9B,EAAE,IAAI,EAAwB,GAA9B;IAC9B,MAAM,QAAQ,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE;IAE3D,MAAM,wBAAwB;YAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAO;QACzF,IAAI,UAAU,MAAM,OAAO,KAAK,+CAA+C;;QAE/E,MAAM,SAAS,KAAK,EAAE,GAAG;QACzB,MAAM,SAAS,cAAc,CAAC,cAAc,WAAW,IAAI;QAC3D,MAAM,IAAI,KAAK,SAAS,KAAK,GAAG,CAAC,CAAC,WAAW;QAC7C,MAAM,IAAI,KAAK,SAAS,KAAK,GAAG,CAAC,CAAC,WAAW;QAE7C,qBACE,6LAAC;YACC,GAAG;YACH,GAAG;YACH,MAAK;YACL,YAAY,IAAI,KAAK,UAAU;YAC/B,kBAAiB;YACjB,UAAU;YACV,YAAW;sBAEV,AAAC,GAA6B,OAA3B,CAAC,UAAU,GAAG,EAAE,OAAO,CAAC,IAAG;;;;;;IAGrC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,6LAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;0BAK5C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;4BAAC,OAAM;4BAAO,QAAO;sCACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;;kDACP,6LAAC,kJAAA,CAAA,MAAG;wCACF,MAAM;wCACN,IAAG;wCACH,IAAG;wCACH,WAAW;wCACX,OAAO;wCACP,aAAa;wCACb,MAAK;wCACL,SAAQ;kDAEP,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,6LAAC,uJAAA,CAAA,OAAI;gDAAuB,MAAM,MAAM,KAAK;+CAAlC,AAAC,QAAa,OAAN;;;;;;;;;;kDAGvB,6LAAC,0JAAA,CAAA,UAAO;wCACN,cAAc;4CACZ,iBAAiB;4CACjB,QAAQ;4CACR,cAAc;4CACd,WAAW;wCACb;wCACA,WAAW,CAAC,QAAkB;gDAAC;gDAAO;6CAAQ;;;;;;;;;;;;;;;;;;;;;;kCAOtD,6LAAC;wBAAI,WAAU;kCACZ,KAAK,GAAG,CAAC,CAAC,MAAM,sBACf,6LAAC;gCAAgB,WAAU;;kDACzB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDACC,WAAU;gDACV,OAAO;oDAAE,iBAAiB,KAAK,KAAK;gDAAC;;;;;;0DAEvC,6LAAC;gDAAK,WAAU;0DAAyB,KAAK,IAAI;;;;;;;;;;;;kDAEpD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DAAqC,KAAK,KAAK;;;;;;0DAC9D,6LAAC;gDAAI,WAAU;;oDACZ,CAAC,AAAC,KAAK,KAAK,GAAG,QAAS,GAAG,EAAE,OAAO,CAAC;oDAAG;;;;;;;;;;;;;;+BAXrC;;;;;;;;;;kCAmBd,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAK,WAAU;8CAAoC;;;;;;8CACpD,6LAAC;oCAAK,WAAU;8CAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM/D;KAjGgB;uCAmGD","debugId":null}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/agent/AIInsights.tsx"],"sourcesContent":["'use client'\n\nimport {\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  MinusIcon,\n  LightBulbIcon,\n  ChartBarIcon,\n} from '@heroicons/react/24/outline'\n\ninterface Strategy {\n  strategy: string\n  successRate: number\n  usage: number\n  trend: 'up' | 'down' | 'stable'\n}\n\ninterface Optimization {\n  date: string\n  optimization: string\n  impact: string\n}\n\ninterface AIInsightsData {\n  topPerformingStrategies: Strategy[]\n  recentOptimizations: Optimization[]\n}\n\ninterface AIInsightsProps {\n  data: AIInsightsData\n}\n\nexport function AIInsights({ data }: AIInsightsProps) {\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case 'up':\n        return <ArrowTrendingUpIcon className=\"h-4 w-4 text-green-500\" />\n      case 'down':\n        return <ArrowTrendingDownIcon className=\"h-4 w-4 text-red-500\" />\n      case 'stable':\n        return <MinusIcon className=\"h-4 w-4 text-gray-500\" />\n      default:\n        return <MinusIcon className=\"h-4 w-4 text-gray-500\" />\n    }\n  }\n\n  const getTrendColor = (trend: string) => {\n    switch (trend) {\n      case 'up':\n        return 'text-green-600'\n      case 'down':\n        return 'text-red-600'\n      case 'stable':\n        return 'text-gray-600'\n      default:\n        return 'text-gray-600'\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center\">\n          <LightBulbIcon className=\"h-5 w-5 text-yellow-500 mr-2\" />\n          <h3 className=\"text-lg font-medium text-gray-900\">AI Performance Insights</h3>\n        </div>\n        <p className=\"text-sm text-gray-500 mt-1\">\n          AI-powered analysis of your conversation strategies and optimizations\n        </p>\n      </div>\n      \n      <div className=\"p-6 space-y-6\">\n        {/* Top Performing Strategies */}\n        <div>\n          <h4 className=\"text-sm font-medium text-gray-900 mb-4 flex items-center\">\n            <ChartBarIcon className=\"h-4 w-4 mr-2\" />\n            Top Performing Strategies\n          </h4>\n          <div className=\"space-y-3\">\n            {data.topPerformingStrategies.map((strategy, index) => (\n              <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {strategy.strategy}\n                    </span>\n                    <div className=\"flex items-center space-x-2\">\n                      {getTrendIcon(strategy.trend)}\n                      <span className={`text-sm font-medium ${getTrendColor(strategy.trend)}`}>\n                        {strategy.successRate}%\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">\n                      Used {strategy.usage} times\n                    </span>\n                    <div className=\"w-24 bg-gray-200 rounded-full h-1.5\">\n                      <div \n                        className=\"bg-primary-600 h-1.5 rounded-full transition-all duration-300\"\n                        style={{ width: `${strategy.successRate}%` }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Recent Optimizations */}\n        <div>\n          <h4 className=\"text-sm font-medium text-gray-900 mb-4\">Recent AI Optimizations</h4>\n          <div className=\"space-y-3\">\n            {data.recentOptimizations.map((optimization, index) => (\n              <div key={index} className=\"border-l-4 border-primary-500 pl-4 py-2\">\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"text-sm font-medium text-gray-900\">\n                    {optimization.optimization}\n                  </span>\n                  <span className=\"text-xs text-gray-500\">\n                    {new Date(optimization.date).toLocaleDateString()}\n                  </span>\n                </div>\n                <div className=\"text-sm text-green-600 font-medium\">\n                  {optimization.impact}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* AI Recommendations */}\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h4 className=\"text-sm font-medium text-blue-900 mb-2\">\n            💡 AI Recommendations\n          </h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Focus on \"Appointment Urgency\" strategy - showing highest conversion</li>\n            <li>• Consider A/B testing property matching variations</li>\n            <li>• Response time optimization could improve conversion by ~5%</li>\n          </ul>\n        </div>\n\n        {/* Performance Score */}\n        <div className=\"text-center\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary-100 rounded-full mb-2\">\n            <span className=\"text-xl font-bold text-primary-600\">A+</span>\n          </div>\n          <div className=\"text-sm font-medium text-gray-900\">AI Performance Score</div>\n          <div className=\"text-xs text-gray-500\">Based on strategy effectiveness and optimization rate</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1600, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/app/agent/analytics/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useAuth } from '@/lib/auth/AuthContext'\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner'\nimport { PerformanceMetrics } from '@/components/agent/PerformanceMetrics'\nimport { ConversionChart } from '@/components/agent/ConversionChart'\nimport { ResponseTimeChart } from '@/components/agent/ResponseTimeChart'\nimport { LeadSourceChart } from '@/components/agent/LeadSourceChart'\nimport { AIInsights } from '@/components/agent/AIInsights'\nimport {\n  CalendarDaysIcon,\n  ChartBarIcon,\n  ClockIcon,\n  ArrowTrendingUpIcon,\n} from '@heroicons/react/24/outline'\n\n// Mock analytics data\nconst mockAnalyticsData = {\n  overview: {\n    totalLeads: 127,\n    qualifiedLeads: 89,\n    appointmentsBooked: 34,\n    conversionRate: 26.8,\n    avgResponseTime: 2.3,\n    totalMessages: 1456,\n    activeConversations: 12,\n    completedAppointments: 28,\n  },\n  trends: {\n    leadsGrowth: 12.5,\n    conversionGrowth: 3.2,\n    responseTimeImprovement: -15.6,\n    appointmentGrowth: 8.9,\n  },\n  conversionData: [\n    { name: 'Jan', leads: 45, qualified: 32, booked: 12 },\n    { name: 'Feb', leads: 52, qualified: 38, booked: 15 },\n    { name: 'Mar', leads: 48, qualified: 35, booked: 14 },\n    { name: 'Apr', leads: 61, qualified: 42, booked: 18 },\n    { name: 'May', leads: 55, qualified: 39, booked: 16 },\n    { name: 'Jun', leads: 67, qualified: 48, booked: 21 },\n  ],\n  responseTimeData: [\n    { name: 'Mon', avgTime: 2.1, target: 3.0 },\n    { name: 'Tue', avgTime: 1.8, target: 3.0 },\n    { name: 'Wed', avgTime: 2.4, target: 3.0 },\n    { name: 'Thu', avgTime: 2.0, target: 3.0 },\n    { name: 'Fri', avgTime: 2.6, target: 3.0 },\n    { name: 'Sat', avgTime: 3.2, target: 3.0 },\n    { name: 'Sun', avgTime: 2.9, target: 3.0 },\n  ],\n  leadSources: [\n    { name: 'Facebook Lead Ads', value: 45, color: '#3b82f6' },\n    { name: 'WhatsApp Direct', value: 28, color: '#10b981' },\n    { name: 'Property Portals', value: 18, color: '#f59e0b' },\n    { name: 'Referrals', value: 9, color: '#8b5cf6' },\n  ],\n  aiInsights: {\n    topPerformingStrategies: [\n      {\n        strategy: 'Appointment Urgency',\n        successRate: 78.5,\n        usage: 156,\n        trend: 'up' as const,\n      },\n      {\n        strategy: 'Property Matching',\n        successRate: 72.3,\n        usage: 203,\n        trend: 'up' as const,\n      },\n      {\n        strategy: 'Budget Qualification',\n        successRate: 68.9,\n        usage: 189,\n        trend: 'stable' as const,\n      },\n    ],\n    recentOptimizations: [\n      {\n        date: '2024-01-15',\n        optimization: 'Improved response timing for price inquiries',\n        impact: '+12% conversion rate',\n      },\n      {\n        date: '2024-01-12',\n        optimization: 'Enhanced property recommendation logic',\n        impact: '+8% engagement rate',\n      },\n    ],\n  },\n}\n\nexport default function AnalyticsPage() {\n  const { user } = useAuth()\n  const [analyticsData, setAnalyticsData] = useState(mockAnalyticsData)\n  const [loading, setLoading] = useState(false)\n  const [timeframe, setTimeframe] = useState<'7d' | '30d' | '90d'>('30d')\n\n  const timeframeOptions = [\n    { value: '7d', label: 'Last 7 days' },\n    { value: '30d', label: 'Last 30 days' },\n    { value: '90d', label: 'Last 90 days' },\n  ]\n\n  // Load analytics data\n  useEffect(() => {\n    const loadAnalytics = async () => {\n      setLoading(true)\n      try {\n        // In real app, this would be an API call\n        // const response = await apiClient.get(`/dashboard/agent/${user?.id}/analytics?timeframe=${timeframe}`)\n        // setAnalyticsData(response.data)\n        \n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000))\n      } catch (error) {\n        console.error('Failed to load analytics:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    if (user) {\n      loadAnalytics()\n    }\n  }, [user, timeframe])\n\n  const keyMetrics = [\n    {\n      name: 'Total Leads',\n      value: analyticsData.overview.totalLeads,\n      change: analyticsData.trends.leadsGrowth,\n      changeType: 'positive' as const,\n      icon: ChartBarIcon,\n      color: 'blue',\n    },\n    {\n      name: 'Conversion Rate',\n      value: `${analyticsData.overview.conversionRate}%`,\n      change: analyticsData.trends.conversionGrowth,\n      changeType: 'positive' as const,\n      icon: ArrowTrendingUpIcon,\n      color: 'green',\n    },\n    {\n      name: 'Avg Response Time',\n      value: `${analyticsData.overview.avgResponseTime}s`,\n      change: analyticsData.trends.responseTimeImprovement,\n      changeType: 'positive' as const,\n      icon: ClockIcon,\n      color: 'orange',\n    },\n    {\n      name: 'Appointments Booked',\n      value: analyticsData.overview.appointmentsBooked,\n      change: analyticsData.trends.appointmentGrowth,\n      changeType: 'positive' as const,\n      icon: CalendarDaysIcon,\n      color: 'purple',\n    },\n  ]\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Analytics Dashboard</h1>\n          <p className=\"text-gray-600\">\n            Track your performance and AI-powered insights\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <select\n            value={timeframe}\n            onChange={(e) => setTimeframe(e.target.value as any)}\n            className=\"input-field\"\n          >\n            {timeframeOptions.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {keyMetrics.map((metric) => {\n          const Icon = metric.icon\n          return (\n            <div key={metric.name} className=\"metric-card\">\n              <div className=\"flex items-center\">\n                <div className={`p-2 rounded-lg bg-${metric.color}-100`}>\n                  <Icon className={`h-6 w-6 text-${metric.color}-600`} />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">{metric.name}</p>\n                  <p className=\"metric-value\">{metric.value}</p>\n                </div>\n              </div>\n              <div className=\"mt-4\">\n                <span className={`metric-change ${\n                  metric.changeType === 'positive' ? 'metric-change-positive' : 'metric-change-negative'\n                }`}>\n                  {metric.change > 0 ? '+' : ''}{metric.change}%\n                </span>\n                <span className=\"text-xs text-gray-500 ml-1\">vs last period</span>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n\n      {/* Performance Overview */}\n      <PerformanceMetrics data={analyticsData.overview} />\n\n      {/* Charts Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Conversion Funnel */}\n        <ConversionChart data={analyticsData.conversionData} />\n        \n        {/* Response Time Trends */}\n        <ResponseTimeChart data={analyticsData.responseTimeData} />\n      </div>\n\n      {/* Lead Sources and AI Insights */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Lead Sources */}\n        <LeadSourceChart data={analyticsData.leadSources} />\n        \n        {/* AI Insights */}\n        <div className=\"lg:col-span-2\">\n          <AIInsights data={analyticsData.aiInsights} />\n        </div>\n      </div>\n\n      {/* Detailed Performance Table */}\n      <div className=\"card\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Detailed Performance</h3>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Metric\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Current Period\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Previous Period\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Change\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                  Total Messages Sent\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {analyticsData.overview.totalMessages}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  1,234\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-green-600\">\n                  +18.0%\n                </td>\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                  Active Conversations\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {analyticsData.overview.activeConversations}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  8\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-green-600\">\n                  +50.0%\n                </td>\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                  Completed Appointments\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {analyticsData.overview.completedAppointments}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  22\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-green-600\">\n                  +27.3%\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}