{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/scroll-area.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,2BAAa,6JAAA,CAAA,aAAgB,MAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,6JAAA,CAAA,aAAgB,CAGhC,QAAoD;QAAnD,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO;yBAClD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/layout/Sidebar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Home, MessageSquare, Users, Settings,\n  BarChart3, DollarSign, Phone, ChevronRight, ChevronLeft,\n  Building2, UserCheck\n} from 'lucide-react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { useAuth } from '@/lib/auth/AuthContext';\n\ninterface SidebarProps {\n  isCollapsed: boolean;\n  onToggle: () => void;\n  className?: string;\n}\n\ninterface NavItem {\n  title: string;\n  icon: React.ElementType;\n  href: string;\n  permission?: string;\n}\n\nexport function Sidebar({ isCollapsed, onToggle, className }: SidebarProps) {\n  const pathname = usePathname();\n  const { user, hasPermission } = useAuth();\n  \n  // Agent navigation items\n  const agentNavItems: NavItem[] = [\n    {\n      title: 'Dashboard',\n      icon: Home,\n      href: '/agent/dashboard',\n    },\n    {\n      title: 'Conversations',\n      icon: MessageSquare,\n      href: '/agent/conversations',\n    },\n    {\n      title: 'Leads',\n      icon: Users,\n      href: '/agent/leads',\n    },\n    {\n      title: 'Settings',\n      icon: Settings,\n      href: '/agent/settings',\n    }\n  ];\n\n  // Admin navigation items\n  const adminNavItems: NavItem[] = [\n    {\n      title: 'Dashboard',\n      icon: BarChart3,\n      href: '/admin/dashboard',\n    },\n    {\n      title: 'Agents',\n      icon: UserCheck,\n      href: '/admin/agents',\n    },\n    {\n      title: 'Costs',\n      icon: DollarSign,\n      href: '/admin/costs',\n    },\n    {\n      title: 'WABA',\n      icon: Phone,\n      href: '/admin/waba',\n    }\n  ];\n\n  // Determine which navigation items to show based on user role\n  const navItems = user?.role === 'admin' ? adminNavItems : agentNavItems;\n\n  // Filter items based on permissions\n  const filteredNavItems = navItems.filter(item => {\n    if (!item.permission) return true;\n    return hasPermission(item.permission);\n  });\n\n  return (\n    <aside className={cn(\n      \"bg-sidebar text-sidebar-foreground relative transition-all duration-300 ease-in-out flex flex-col border-r border-sidebar-border\",\n      isCollapsed ? \"w-16\" : \"w-64\",\n      className\n    )}>\n      <div className=\"flex h-16 items-center justify-center border-b border-sidebar-border\">\n        <div className=\"flex items-center gap-2\">\n          <Building2 className={cn(\n            \"h-6 w-6 text-sidebar-primary transition-opacity duration-200\",\n            isCollapsed ? \"opacity-100\" : \"opacity-100\"\n          )} />\n          <h2 className={cn(\n            \"font-semibold tracking-tight transition-opacity duration-200 text-sidebar-foreground\",\n            isCollapsed ? \"opacity-0 w-0\" : \"opacity-100\"\n          )}>\n            Outpaced\n          </h2>\n        </div>\n        \n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={onToggle}\n          className={cn(\n            \"absolute right-2 text-sidebar-foreground h-8 w-8 hover:bg-sidebar-accent\",\n            isCollapsed ? \"right-2\" : \"right-4\"\n          )}\n        >\n          {isCollapsed ? <ChevronRight className=\"h-4 w-4\" /> : <ChevronLeft className=\"h-4 w-4\" />}\n        </Button>\n      </div>\n      \n      <ScrollArea className=\"flex-1 py-4\">\n        <nav className=\"grid gap-1 px-2\">\n          {filteredNavItems.map((item, index) => {\n            const isActive = pathname === item.href;\n            return (\n              <Link\n                key={index}\n                href={item.href}\n                className={cn(\n                  \"flex items-center gap-3 rounded-md px-3 py-2 transition-colors hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n                  isActive ? \"bg-sidebar-accent text-sidebar-accent-foreground font-medium\" : \"text-sidebar-foreground\",\n                  isCollapsed && \"justify-center px-0\"\n                )}\n              >\n                <item.icon className={cn(\"h-5 w-5 shrink-0\")} />\n                <span className={cn(\n                  \"text-sm font-medium transition-opacity duration-200\",\n                  isCollapsed ? \"opacity-0 w-0\" : \"opacity-100\"\n                )}>\n                  {item.title}\n                </span>\n              </Link>\n            );\n          })}\n        </nav>\n      </ScrollArea>\n      \n      <div className=\"p-4 border-t border-sidebar-border\">\n        <div className={cn(\n          \"transition-opacity duration-200 rounded-md bg-sidebar-accent/50 p-2 text-xs text-sidebar-accent-foreground\",\n          isCollapsed ? \"opacity-0\" : \"opacity-100\"\n        )}>\n          <p className=\"font-medium\">System Status</p>\n          <p className=\"text-green-400\">All systems operational</p>\n          <p className=\"text-[10px] text-sidebar-foreground/70\">\n            {user?.role === 'admin' ? 'Admin Panel' : 'Agent Dashboard'}\n          </p>\n        </div>\n      </div>\n    </aside>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/admin/AdminSidebar.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Sidebar } from '@/components/layout/Sidebar'\n\nexport function AdminSidebar() {\n  const [collapsed, setCollapsed] = useState(false)\n\n  return (\n    <Sidebar\n      isCollapsed={collapsed}\n      onToggle={() => setCollapsed(!collapsed)}\n      className=\"h-screen\"\n    />\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKO,SAAS;;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE,6LAAC,mIAAA,CAAA,UAAO;QACN,aAAa;QACb,UAAU,IAAM,aAAa,CAAC;QAC9B,WAAU;;;;;;AAGhB;GAVgB;KAAA","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/hooks/useRealTimeNotifications.ts"],"sourcesContent":["'use client'\n\nimport { useEffect, useState, useCallback } from 'react'\nimport { useSocket } from '@/lib/socket/SocketContext'\nimport { useAuth } from '@/lib/auth/AuthContext'\nimport { toast } from 'sonner'\n\nexport interface Notification {\n  id: string\n  type: 'info' | 'warning' | 'error' | 'success'\n  title: string\n  message: string\n  timestamp: Date\n  read: boolean\n  actionUrl?: string\n  data?: any\n}\n\nexport interface RealTimeMetrics {\n  activeConversations: number\n  newLeads: number\n  pendingAppointments: number\n  systemAlerts: number\n  apiUsage: {\n    whatsapp: number\n    openai: number\n    total: number\n  }\n}\n\nexport function useRealTimeNotifications() {\n  const { socket, connected } = useSocket()\n  const { user } = useAuth()\n  const [notifications, setNotifications] = useState<Notification[]>([])\n  const [metrics, setMetrics] = useState<RealTimeMetrics>({\n    activeConversations: 0,\n    newLeads: 0,\n    pendingAppointments: 0,\n    systemAlerts: 0,\n    apiUsage: {\n      whatsapp: 0,\n      openai: 0,\n      total: 0\n    }\n  })\n\n  const addNotification = useCallback((notification: Omit<Notification, 'id' | 'timestamp' | 'read'>) => {\n    const newNotification: Notification = {\n      ...notification,\n      id: Date.now().toString(),\n      timestamp: new Date(),\n      read: false\n    }\n    \n    setNotifications(prev => [newNotification, ...prev.slice(0, 49)]) // Keep last 50 notifications\n    \n    // Show toast notification\n    switch (notification.type) {\n      case 'success':\n        toast.success(notification.title, { description: notification.message })\n        break\n      case 'error':\n        toast.error(notification.title, { description: notification.message })\n        break\n      case 'warning':\n        toast.warning(notification.title, { description: notification.message })\n        break\n      default:\n        toast.info(notification.title, { description: notification.message })\n    }\n  }, [])\n\n  const markAsRead = useCallback((notificationId: string) => {\n    setNotifications(prev => \n      prev.map(n => n.id === notificationId ? { ...n, read: true } : n)\n    )\n  }, [])\n\n  const markAllAsRead = useCallback(() => {\n    setNotifications(prev => prev.map(n => ({ ...n, read: true })))\n  }, [])\n\n  const clearNotifications = useCallback(() => {\n    setNotifications([])\n  }, [])\n\n  useEffect(() => {\n    if (!socket || !connected || !user) return\n\n    // Real-time conversation events\n    socket.on('new_message', (data) => {\n      addNotification({\n        type: 'info',\n        title: 'New Message',\n        message: `Message from ${data.leadName || data.phoneNumber}`,\n        actionUrl: `/agent/conversations/${data.conversationId}`,\n        data\n      })\n      \n      setMetrics(prev => ({\n        ...prev,\n        activeConversations: prev.activeConversations + 1\n      }))\n    })\n\n    socket.on('new_lead', (data) => {\n      addNotification({\n        type: 'success',\n        title: 'New Lead',\n        message: `New lead: ${data.leadName || data.phoneNumber}`,\n        actionUrl: `/agent/leads/${data.leadId}`,\n        data\n      })\n      \n      setMetrics(prev => ({\n        ...prev,\n        newLeads: prev.newLeads + 1\n      }))\n    })\n\n    socket.on('appointment_booked', (data) => {\n      addNotification({\n        type: 'success',\n        title: 'Appointment Booked',\n        message: `Appointment scheduled with ${data.leadName}`,\n        actionUrl: `/agent/conversations/${data.conversationId}`,\n        data\n      })\n      \n      setMetrics(prev => ({\n        ...prev,\n        pendingAppointments: prev.pendingAppointments + 1\n      }))\n    })\n\n    socket.on('lead_status_changed', (data) => {\n      addNotification({\n        type: 'info',\n        title: 'Lead Status Updated',\n        message: `${data.leadName} status changed to ${data.status}`,\n        actionUrl: `/agent/leads/${data.leadId}`,\n        data\n      })\n    })\n\n    socket.on('conversation_ended', (data) => {\n      setMetrics(prev => ({\n        ...prev,\n        activeConversations: Math.max(0, prev.activeConversations - 1)\n      }))\n    })\n\n    // System notifications\n    socket.on('system_alert', (data) => {\n      addNotification({\n        type: data.severity || 'warning',\n        title: 'System Alert',\n        message: data.message,\n        data\n      })\n      \n      setMetrics(prev => ({\n        ...prev,\n        systemAlerts: prev.systemAlerts + 1\n      }))\n    })\n\n    socket.on('api_usage_update', (data) => {\n      setMetrics(prev => ({\n        ...prev,\n        apiUsage: {\n          whatsapp: data.whatsapp || prev.apiUsage.whatsapp,\n          openai: data.openai || prev.apiUsage.openai,\n          total: data.total || prev.apiUsage.total\n        }\n      }))\n    })\n\n    // Admin-specific events\n    if (user.role === 'admin') {\n      socket.on('agent_status_changed', (data) => {\n        addNotification({\n          type: 'info',\n          title: 'Agent Status Changed',\n          message: `${data.agentName} is now ${data.status}`,\n          actionUrl: `/admin/agents/${data.agentId}`,\n          data\n        })\n      })\n\n      socket.on('cost_alert', (data) => {\n        addNotification({\n          type: 'warning',\n          title: 'Cost Alert',\n          message: `${data.service} costs are at ${data.percentage}% of budget`,\n          actionUrl: '/admin/costs',\n          data\n        })\n      })\n\n      socket.on('waba_status_changed', (data) => {\n        addNotification({\n          type: data.status === 'connected' ? 'success' : 'error',\n          title: 'WABA Status Changed',\n          message: `${data.agentName}'s WhatsApp Business account is ${data.status}`,\n          actionUrl: '/admin/waba',\n          data\n        })\n      })\n    }\n\n    // Metrics updates\n    socket.on('metrics_update', (data) => {\n      setMetrics(prev => ({\n        ...prev,\n        ...data\n      }))\n    })\n\n    // Cleanup listeners\n    return () => {\n      socket.off('new_message')\n      socket.off('new_lead')\n      socket.off('appointment_booked')\n      socket.off('lead_status_changed')\n      socket.off('conversation_ended')\n      socket.off('system_alert')\n      socket.off('api_usage_update')\n      socket.off('agent_status_changed')\n      socket.off('cost_alert')\n      socket.off('waba_status_changed')\n      socket.off('metrics_update')\n    }\n  }, [socket, connected, user, addNotification])\n\n  // Request initial metrics on connection\n  useEffect(() => {\n    if (socket && connected && user) {\n      socket.emit('request_metrics', { userId: user.id, role: user.role })\n    }\n  }, [socket, connected, user])\n\n  const unreadCount = notifications.filter(n => !n.read).length\n\n  return {\n    notifications,\n    metrics,\n    unreadCount,\n    addNotification,\n    markAsRead,\n    markAllAsRead,\n    clearNotifications,\n    connected\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react'\nimport { cn } from '@/lib/utils'\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = 'Input'\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,6JAAA,CAAA,aAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/RealTimeStatus.tsx"],"sourcesContent":["'use client'\n\nimport { useSocket } from '@/lib/socket/SocketContext'\nimport { useRealTimeNotifications } from '@/lib/hooks/useRealTimeNotifications'\nimport { \n  WifiIcon, \n  ExclamationTriangleIcon,\n  CheckCircleIcon \n} from '@heroicons/react/24/outline'\nimport clsx from 'clsx'\n\ninterface RealTimeStatusProps {\n  showText?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  className?: string\n}\n\nexport function RealTimeStatus({ \n  showText = true, \n  size = 'md',\n  className \n}: RealTimeStatusProps) {\n  const { connected } = useSocket()\n  const { metrics } = useRealTimeNotifications()\n\n  const sizeClasses = {\n    sm: 'h-3 w-3',\n    md: 'h-4 w-4', \n    lg: 'h-5 w-5'\n  }\n\n  const textSizeClasses = {\n    sm: 'text-xs',\n    md: 'text-sm',\n    lg: 'text-base'\n  }\n\n  const getStatusInfo = () => {\n    if (!connected) {\n      return {\n        icon: ExclamationTriangleIcon,\n        color: 'text-red-500',\n        bgColor: 'bg-red-100',\n        text: 'Disconnected',\n        description: 'Real-time features unavailable'\n      }\n    }\n\n    if (metrics.systemAlerts > 0) {\n      return {\n        icon: ExclamationTriangleIcon,\n        color: 'text-yellow-500',\n        bgColor: 'bg-yellow-100',\n        text: 'Connected',\n        description: `${metrics.systemAlerts} system alert${metrics.systemAlerts > 1 ? 's' : ''}`\n      }\n    }\n\n    return {\n      icon: CheckCircleIcon,\n      color: 'text-green-500',\n      bgColor: 'bg-green-100',\n      text: 'Connected',\n      description: 'All systems operational'\n    }\n  }\n\n  const status = getStatusInfo()\n  const Icon = status.icon\n\n  return (\n    <div className={clsx('flex items-center space-x-2', className)}>\n      {/* Status Indicator */}\n      <div className={clsx(\n        'flex items-center justify-center rounded-full p-1',\n        status.bgColor\n      )}>\n        <Icon className={clsx(sizeClasses[size], status.color)} />\n      </div>\n\n      {/* Status Text */}\n      {showText && (\n        <div className=\"flex flex-col\">\n          <span className={clsx(\n            'font-medium',\n            textSizeClasses[size],\n            status.color\n          )}>\n            {status.text}\n          </span>\n          {status.description && (\n            <span className={clsx(\n              'text-gray-500',\n              size === 'sm' ? 'text-xs' : 'text-xs'\n            )}>\n              {status.description}\n            </span>\n          )}\n        </div>\n      )}\n\n      {/* Connection Pulse Animation */}\n      {connected && (\n        <div className=\"relative\">\n          <div className={clsx(\n            'absolute rounded-full animate-ping',\n            status.bgColor,\n            sizeClasses[size]\n          )}></div>\n          <div className={clsx(\n            'relative rounded-full',\n            status.bgColor,\n            sizeClasses[size]\n          )}></div>\n        </div>\n      )}\n    </div>\n  )\n}\n\n// Real-time metrics display component\ninterface RealTimeMetricsProps {\n  className?: string\n}\n\nexport function RealTimeMetrics({ className }: RealTimeMetricsProps) {\n  const { metrics, connected } = useRealTimeNotifications()\n\n  if (!connected) {\n    return (\n      <div className={clsx('text-center py-4', className)}>\n        <WifiIcon className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n        <p className=\"text-sm text-gray-500\">Real-time data unavailable</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className={clsx('grid grid-cols-2 md:grid-cols-4 gap-4', className)}>\n      <div className=\"text-center\">\n        <div className=\"text-2xl font-semibold text-gray-900\">\n          {metrics.activeConversations}\n        </div>\n        <div className=\"text-sm text-gray-600\">Active Chats</div>\n      </div>\n      \n      <div className=\"text-center\">\n        <div className=\"text-2xl font-semibold text-gray-900\">\n          {metrics.newLeads}\n        </div>\n        <div className=\"text-sm text-gray-600\">New Leads</div>\n      </div>\n      \n      <div className=\"text-center\">\n        <div className=\"text-2xl font-semibold text-gray-900\">\n          {metrics.pendingAppointments}\n        </div>\n        <div className=\"text-sm text-gray-600\">Appointments</div>\n      </div>\n      \n      <div className=\"text-center\">\n        <div className=\"text-2xl font-semibold text-gray-900\">\n          {Math.round(metrics.apiUsage.total)}%\n        </div>\n        <div className=\"text-sm text-gray-600\">API Usage</div>\n      </div>\n    </div>\n  )\n}\n\n// Live activity feed component\nexport function LiveActivityFeed({ className }: { className?: string }) {\n  const { notifications } = useRealTimeNotifications()\n  const recentNotifications = notifications.slice(0, 5)\n\n  return (\n    <div className={clsx('space-y-3', className)}>\n      <h3 className=\"text-sm font-medium text-gray-900\">Live Activity</h3>\n      \n      {recentNotifications.length > 0 ? (\n        <div className=\"space-y-2\">\n          {recentNotifications.map((notification) => (\n            <div\n              key={notification.id}\n              className=\"flex items-start space-x-3 p-2 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors\"\n            >\n              <div className={clsx(\n                'flex-shrink-0 w-2 h-2 rounded-full mt-2',\n                notification.type === 'success' && 'bg-green-400',\n                notification.type === 'error' && 'bg-red-400',\n                notification.type === 'warning' && 'bg-yellow-400',\n                notification.type === 'info' && 'bg-blue-400'\n              )}></div>\n              \n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">\n                  {notification.title}\n                </p>\n                <p className=\"text-xs text-gray-600 truncate\">\n                  {notification.message}\n                </p>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  {notification.timestamp.toLocaleTimeString()}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-sm text-gray-500\">No recent activity</p>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/admin/AdminHeader.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useAuth } from '@/lib/auth/AuthContext'\nimport { useRealTimeNotifications } from '@/lib/hooks/useRealTimeNotifications'\nimport {\n  BellIcon,\n  MagnifyingGlassIcon,\n  Cog6ToothIcon,\n  ArrowRightOnRectangleIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  InformationCircleIcon,\n} from '@heroicons/react/24/outline'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { RealTimeStatus } from '@/components/ui/RealTimeStatus'\n\ninterface Notification {\n  id: string\n  type: 'info' | 'warning' | 'success' | 'error'\n  title: string\n  message: string\n  timestamp: string\n  read: boolean\n}\n\nconst mockNotifications: Notification[] = [\n  {\n    id: '1',\n    type: 'warning',\n    title: 'High API Usage',\n    message: 'WhatsApp API usage is at 85% of monthly limit',\n    timestamp: '5 minutes ago',\n    read: false\n  },\n  {\n    id: '2',\n    type: 'success',\n    title: 'Agent Onboarded',\n    message: 'New agent Sarah Chen has been successfully onboarded',\n    timestamp: '1 hour ago',\n    read: false\n  },\n  {\n    id: '3',\n    type: 'info',\n    title: 'System Update',\n    message: 'Scheduled maintenance completed successfully',\n    timestamp: '2 hours ago',\n    read: true\n  }\n]\n\nexport function AdminHeader() {\n  const { user, logout } = useAuth()\n  const { notifications, unreadCount, markAsRead } = useRealTimeNotifications()\n  const [showNotifications, setShowNotifications] = useState(false)\n\n\n\n  const getNotificationIcon = (type: Notification['type']) => {\n    switch (type) {\n      case 'warning':\n        return <ExclamationTriangleIcon className=\"h-5 w-5 text-yellow-500\" />\n      case 'success':\n        return <CheckCircleIcon className=\"h-5 w-5 text-green-500\" />\n      case 'error':\n        return <ExclamationTriangleIcon className=\"h-5 w-5 text-red-500\" />\n      default:\n        return <InformationCircleIcon className=\"h-5 w-5 text-blue-500\" />\n    }\n  }\n\n  return (\n    <header className=\"bg-white border-b border-gray-200 px-6 py-4\">\n      <div className=\"flex items-center justify-between\">\n        {/* Search */}\n        <div className=\"flex-1 max-w-lg\">\n          <div className=\"relative\">\n            <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <Input\n              type=\"text\"\n              placeholder=\"Search agents, costs, logs...\"\n              className=\"pl-10 pr-4\"\n            />\n          </div>\n        </div>\n\n        {/* Right side actions */}\n        <div className=\"flex items-center space-x-4\">\n          {/* System Health Indicator */}\n          <RealTimeStatus size=\"sm\" />\n\n          {/* Notifications */}\n          <div className=\"relative\">\n            <button\n              onClick={() => setShowNotifications(!showNotifications)}\n              className=\"relative p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <BellIcon className=\"h-6 w-6\" />\n              {unreadCount > 0 && (\n                <span className=\"absolute -top-1 -right-1 h-5 w-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                  {unreadCount}\n                </span>\n              )}\n            </button>\n\n            {/* Notifications Dropdown */}\n            {showNotifications && (\n              <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                <div className=\"p-4 border-b border-gray-200\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">Notifications</h3>\n                </div>\n                <div className=\"max-h-96 overflow-y-auto\">\n                  {notifications.length > 0 ? (\n                    notifications.map((notification) => (\n                      <div\n                        key={notification.id}\n                        className={`p-4 border-b border-gray-100 hover:bg-gray-50 ${\n                          !notification.read ? 'bg-blue-50' : ''\n                        }`}\n                      >\n                        <div className=\"flex items-start space-x-3\">\n                          {getNotificationIcon(notification.type)}\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"text-sm font-medium text-gray-900\">\n                              {notification.title}\n                            </p>\n                            <p className=\"text-sm text-gray-600 mt-1\">\n                              {notification.message}\n                            </p>\n                            <p className=\"text-xs text-gray-500 mt-2\">\n                              {new Date(notification.timestamp).toLocaleString()}\n                            </p>\n                          </div>\n                          {!notification.read && (\n                            <div className=\"h-2 w-2 bg-blue-500 rounded-full\"></div>\n                          )}\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"p-4 text-center text-gray-500\">\n                      No notifications\n                    </div>\n                  )}\n                </div>\n                <div className=\"p-4 border-t border-gray-200\">\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                    View All Notifications\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Settings */}\n          <button className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\">\n            <Cog6ToothIcon className=\"h-6 w-6\" />\n          </button>\n\n          {/* User Menu */}\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"text-right\">\n              <p className=\"text-sm font-medium text-gray-900\">\n                {user?.full_name || 'Administrator'}\n              </p>\n              <p className=\"text-xs text-gray-500\">System Admin</p>\n            </div>\n            <div className=\"h-8 w-8 bg-red-100 rounded-full flex items-center justify-center\">\n              <span className=\"text-sm font-medium text-red-700\">\n                {user?.full_name?.charAt(0) || 'A'}\n              </span>\n            </div>\n            <button\n              onClick={logout}\n              className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n              title=\"Logout\"\n            >\n              <ArrowRightOnRectangleIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1531, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/LoadingSpinner.tsx"],"sourcesContent":["import * as React from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from '@/lib/utils'\n\nconst spinnerVariants = cva(\n  'animate-spin',\n  {\n    variants: {\n      size: {\n        sm: 'h-4 w-4',\n        md: 'h-6 w-6',\n        lg: 'h-8 w-8',\n        xl: 'h-12 w-12',\n      },\n      variant: {\n        default: 'text-primary',\n        muted: 'text-muted-foreground',\n        destructive: 'text-destructive',\n      },\n    },\n    defaultVariants: {\n      size: 'md',\n      variant: 'default',\n    },\n  }\n)\n\ninterface LoadingSpinnerProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof spinnerVariants> {\n  label?: string\n}\n\nexport function LoadingSpinner({\n  size,\n  variant,\n  className,\n  label = 'Loading...',\n  ...props\n}: LoadingSpinnerProps) {\n  return (\n    <div\n      className={cn('flex items-center justify-center', className)}\n      role=\"status\"\n      aria-label={label}\n      {...props}\n    >\n      <svg\n        className={cn(spinnerVariants({ size, variant }))}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        />\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n      <span className=\"sr-only\">{label}</span>\n    </div>\n  )\n}\n\n// Skeleton loading component\ninterface SkeletonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport function Skeleton({ className, ...props }: SkeletonProps) {\n  return (\n    <div\n      className={cn('animate-pulse rounded-md bg-muted', className)}\n      {...props}\n    />\n  )\n}\n\n// Loading states for different components\nexport function LoadingCard() {\n  return (\n    <div className=\"space-y-3\">\n      <Skeleton className=\"h-4 w-[250px]\" />\n      <Skeleton className=\"h-4 w-[200px]\" />\n      <Skeleton className=\"h-4 w-[150px]\" />\n    </div>\n  )\n}\n\nexport function LoadingTable() {\n  return (\n    <div className=\"space-y-2\">\n      {Array.from({ length: 5 }).map((_, i) => (\n        <div key={i} className=\"flex space-x-4\">\n          <Skeleton className=\"h-4 w-[100px]\" />\n          <Skeleton className=\"h-4 w-[150px]\" />\n          <Skeleton className=\"h-4 w-[100px]\" />\n          <Skeleton className=\"h-4 w-[80px]\" />\n        </div>\n      ))}\n    </div>\n  )\n}\n\n// Suspense fallback components\nexport function PageLoadingFallback() {\n  return (\n    <div className=\"flex items-center justify-center min-h-[400px]\">\n      <div className=\"text-center space-y-4\">\n        <LoadingSpinner size=\"lg\" />\n        <p className=\"text-sm text-muted-foreground\">Loading page...</p>\n      </div>\n    </div>\n  )\n}\n\nexport function ComponentLoadingFallback() {\n  return (\n    <div className=\"flex items-center justify-center p-8\">\n      <LoadingSpinner />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;AACA;AACA;;;;AAEA,MAAM,kBAAkB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACxB,gBACA;IACE,UAAU;QACR,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;QACA,SAAS;YACP,SAAS;YACT,OAAO;YACP,aAAa;QACf;IACF;IACA,iBAAiB;QACf,MAAM;QACN,SAAS;IACX;AACF;AASK,SAAS,eAAe,KAMT;QANS,EAC7B,IAAI,EACJ,OAAO,EACP,SAAS,EACT,QAAQ,YAAY,EACpB,GAAG,OACiB,GANS;IAO7B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,oCAAoC;QAClD,MAAK;QACL,cAAY;QACX,GAAG,KAAK;;0BAET,6LAAC;gBACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;oBAAE;oBAAM;gBAAQ;gBAC9C,OAAM;gBACN,MAAK;gBACL,SAAQ;gBACR,eAAY;;kCAEZ,6LAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;0BAGN,6LAAC;gBAAK,WAAU;0BAAW;;;;;;;;;;;;AAGjC;KAtCgB;AA2CT,SAAS,SAAS,KAAsC;QAAtC,EAAE,SAAS,EAAE,GAAG,OAAsB,GAAtC;IACvB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;MAPgB;AAUT,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAS,WAAU;;;;;;0BACpB,6LAAC;gBAAS,WAAU;;;;;;0BACpB,6LAAC;gBAAS,WAAU;;;;;;;;;;;;AAG1B;MARgB;AAUT,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;kBACZ,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,6LAAC;gBAAY,WAAU;;kCACrB,6LAAC;wBAAS,WAAU;;;;;;kCACpB,6LAAC;wBAAS,WAAU;;;;;;kCACpB,6LAAC;wBAAS,WAAU;;;;;;kCACpB,6LAAC;wBAAS,WAAU;;;;;;;eAJZ;;;;;;;;;;AASlB;MAbgB;AAgBT,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAe,MAAK;;;;;;8BACrB,6LAAC;oBAAE,WAAU;8BAAgC;;;;;;;;;;;;;;;;;AAIrD;MATgB;AAWT,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;;;;;;;;;;AAGP;MANgB","debugId":null}},
    {"offset": {"line": 1784, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/app/admin/layout.tsx"],"sourcesContent":["'use client'\n\nimport { useAuth } from '@/lib/auth/AuthContext'\nimport { useRouter } from 'next/navigation'\nimport { useEffect } from 'react'\nimport { AdminSidebar } from '@/components/admin/AdminSidebar'\nimport { AdminHeader } from '@/components/admin/AdminHeader'\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner'\n\nexport default function AdminLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const { user, loading, isAuthenticated, isAdmin } = useAuth()\n  const router = useRouter()\n\n  useEffect(() => {\n    if (!loading) {\n      if (!isAuthenticated) {\n        router.push('/auth/login')\n        return\n      }\n      \n      if (!isAdmin) {\n        router.push('/agent/dashboard')\n        return\n      }\n    }\n  }, [loading, isAuthenticated, isAdmin, router])\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    )\n  }\n\n  if (!isAuthenticated || !isAdmin) {\n    return null\n  }\n\n  return (\n    <div className=\"h-screen flex bg-gray-50\">\n      {/* Sidebar */}\n      <AdminSidebar />\n      \n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Header */}\n        <AdminHeader />\n        \n        {/* Page Content */}\n        <main className=\"flex-1 overflow-y-auto\">\n          <div className=\"p-6\">\n            {children}\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS,YAAY,KAInC;QAJmC,EAClC,QAAQ,EAGT,GAJmC;;IAKlC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IAC1D,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,CAAC,SAAS;gBACZ,IAAI,CAAC,iBAAiB;oBACpB,OAAO,IAAI,CAAC;oBACZ;gBACF;gBAEA,IAAI,CAAC,SAAS;oBACZ,OAAO,IAAI,CAAC;oBACZ;gBACF;YACF;QACF;gCAAG;QAAC;QAAS;QAAiB;QAAS;KAAO;IAE9C,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,MAAK;;;;;;;;;;;IAG3B;IAEA,IAAI,CAAC,mBAAmB,CAAC,SAAS;QAChC,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,uIAAA,CAAA,eAAY;;;;;0BAGb,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC,sIAAA,CAAA,cAAW;;;;;kCAGZ,6LAAC;wBAAK,WAAU;kCACd,cAAA,6LAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAMb;GArDwB;;QAK8B,8HAAA,CAAA,UAAO;QAC5C,qIAAA,CAAA,YAAS;;;KANF","debugId":null}}]
}