{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/hooks/useCostTracking.ts"],"sourcesContent":["'use client'\n\nimport { useQuery } from '@tanstack/react-query'\nimport { apiClient } from '@/lib/api/client'\n\nexport interface CostBreakdown {\n  category: string\n  service_provider: string\n  total_cost: number\n  quantity_used: number\n  percentage: number\n  operations: {\n    operation_type: string\n    cost: number\n    quantity: number\n  }[]\n}\n\nexport interface CostSummary {\n  total_cost: number\n  total_quantity: number\n  period_start: string\n  period_end: string\n  breakdown: CostBreakdown[]\n}\n\nexport interface CostAlert {\n  id: string\n  alert_type: 'warning' | 'critical' | 'exceeded'\n  message: string\n  current_amount: number\n  threshold_amount: number\n  created_at: string\n}\n\nexport interface UsageReport {\n  agentId: string\n  dateRange: {\n    startDate: string\n    endDate: string\n  }\n  groupBy: string\n  data: {\n    period: string\n    total_cost: number\n    total_quantity: number\n    breakdown: CostBreakdown[]\n  }[]\n}\n\nexport interface DashboardData {\n  summary: {\n    totalCost: number\n    totalOperations: number\n    avgCostPerOperation: number\n  }\n  breakdown: CostBreakdown[]\n  recentActivity: {\n    operation_type: string\n    cost: number\n    quantity: number\n    timestamp: string\n    service_provider: string\n  }[]\n  period: string\n}\n\n// Query keys for React Query\nexport const costTrackingKeys = {\n  all: ['costTracking'] as const,\n  summary: (agentId: string, startDate?: string, endDate?: string) => \n    [...costTrackingKeys.all, 'summary', agentId, startDate, endDate] as const,\n  usage: (agentId: string, params: any) => \n    [...costTrackingKeys.all, 'usage', agentId, params] as const,\n  dashboard: (agentId: string, period: string) => \n    [...costTrackingKeys.all, 'dashboard', agentId, period] as const,\n  alerts: (agentId: string) => \n    [...costTrackingKeys.all, 'alerts', agentId] as const,\n}\n\n// Hook to get cost summary for an agent\nexport function useCostSummary(agentId: string, startDate?: string, endDate?: string) {\n  return useQuery({\n    queryKey: costTrackingKeys.summary(agentId, startDate, endDate),\n    queryFn: async (): Promise<CostSummary> => {\n      const params = new URLSearchParams()\n      if (startDate) params.append('startDate', startDate)\n      if (endDate) params.append('endDate', endDate)\n\n      const response = await apiClient.get(`/api/cost-tracking/summary/${agentId}?${params}`)\n      return response.data.data\n    },\n    enabled: !!agentId,\n    staleTime: 10 * 60 * 1000, // 10 minutes\n    refetchInterval: false, // Disable automatic refetching to prevent rate limiting\n    retry: (failureCount, error: any) => {\n      // Don't retry on rate limiting errors\n      if (error?.response?.status === 429) {\n        return false\n      }\n      return failureCount < 2\n    },\n  })\n}\n\n// Hook to get usage report for an agent\nexport function useUsageReport(\n  agentId: string, \n  params: {\n    startDate?: string\n    endDate?: string\n    costCategories?: string[]\n    operationTypes?: string[]\n    groupBy?: 'day' | 'week' | 'month' | 'category' | 'operation'\n  }\n) {\n  return useQuery({\n    queryKey: costTrackingKeys.usage(agentId, params),\n    queryFn: async (): Promise<UsageReport> => {\n      const searchParams = new URLSearchParams()\n      if (params.startDate) searchParams.append('startDate', params.startDate)\n      if (params.endDate) searchParams.append('endDate', params.endDate)\n      if (params.groupBy) searchParams.append('groupBy', params.groupBy)\n      if (params.costCategories) {\n        params.costCategories.forEach(cat => searchParams.append('costCategories', cat))\n      }\n      if (params.operationTypes) {\n        params.operationTypes.forEach(op => searchParams.append('operationTypes', op))\n      }\n      \n      const response = await apiClient.get(`/cost-tracking/usage/${agentId}?${searchParams}`)\n      return response.data\n    },\n    enabled: !!agentId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}\n\n// Hook to get dashboard data for an agent\nexport function useCostDashboard(agentId: string, period: string = 'today') {\n  return useQuery({\n    queryKey: costTrackingKeys.dashboard(agentId, period),\n    queryFn: async (): Promise<DashboardData> => {\n      const response = await apiClient.get(`/cost-tracking/dashboard/${agentId}?period=${period}`)\n      return response.data.data\n    },\n    enabled: !!agentId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    refetchInterval: false, // Disable automatic refetching to prevent rate limiting\n    retry: (failureCount, error: any) => {\n      // Don't retry on rate limiting errors\n      if (error?.response?.status === 429) {\n        return false\n      }\n      return failureCount < 2\n    },\n  })\n}\n\n// Hook to get cost alerts for an agent\nexport function useCostAlerts(agentId: string) {\n  return useQuery({\n    queryKey: costTrackingKeys.alerts(agentId),\n    queryFn: async (): Promise<CostAlert[]> => {\n      const response = await apiClient.get(`/api/cost-tracking-dashboard/alerts/${agentId}`)\n      return response.data.data.alerts || []\n    },\n    enabled: !!agentId,\n    staleTime: 1 * 60 * 1000, // 1 minute\n    refetchInterval: 2 * 60 * 1000, // Refresh every 2 minutes\n  })\n}\n\n// Hook to get real-time metrics for an agent\nexport function useRealTimeCostMetrics(agentId: string) {\n  return useQuery({\n    queryKey: [...costTrackingKeys.all, 'realtime', agentId],\n    queryFn: async () => {\n      const response = await apiClient.get(`/cost-monitoring/metrics/${agentId}`)\n      return response.data.data\n    },\n    enabled: !!agentId,\n    staleTime: 2 * 60 * 1000, // 2 minutes\n    refetchInterval: false, // Disable automatic refetching to prevent rate limiting\n    retry: (failureCount, error: any) => {\n      // Don't retry on rate limiting errors\n      if (error?.response?.status === 429) {\n        return false\n      }\n      return failureCount < 2\n    },\n  })\n}\n\n// Hook to get system-wide cost summary for admin dashboard\nexport function useSystemWideCostSummary(startDate?: string, endDate?: string) {\n  return useQuery({\n    queryKey: [...costTrackingKeys.all, 'system-wide', startDate, endDate],\n    queryFn: async () => {\n      const params = new URLSearchParams()\n      if (startDate) params.append('startDate', startDate)\n      if (endDate) params.append('endDate', endDate)\n\n      const response = await apiClient.get(`/api/cost-tracking/system-wide-summary?${params}`)\n      return response.data.data\n    },\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    refetchInterval: false, // Disable automatic refetching to prevent rate limiting\n    retry: (failureCount, error: any) => {\n      // Don't retry on rate limiting errors\n      if (error?.response?.status === 429) {\n        return false\n      }\n      return failureCount < 2\n    },\n  })\n}\n\n// Utility function to format cost periods\nexport function formatCostPeriod(period: string): { startDate: string; endDate: string } {\n  const now = new Date()\n  let startDate: string, endDate: string = now.toISOString()\n\n  switch (period) {\n    case 'current-month':\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1).toISOString()\n      break\n    case 'last-month':\n      const lastMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1)\n      startDate = lastMonth.toISOString()\n      endDate = new Date(now.getFullYear(), now.getMonth(), 0).toISOString()\n      break\n    case 'last-3-months':\n      startDate = new Date(now.getFullYear(), now.getMonth() - 3, 1).toISOString()\n      break\n    case 'last-6-months':\n      startDate = new Date(now.getFullYear(), now.getMonth() - 6, 1).toISOString()\n      break\n    case 'current-year':\n      startDate = new Date(now.getFullYear(), 0, 1).toISOString()\n      break\n    case 'today':\n      startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate()).toISOString()\n      break\n    case 'week':\n      const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000)\n      startDate = weekAgo.toISOString()\n      break\n    default:\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1).toISOString()\n  }\n\n  return { startDate, endDate }\n}\n\n// Utility function to format currency\nexport function formatCurrency(amount: number): string {\n  return new Intl.NumberFormat('en-SG', {\n    style: 'currency',\n    currency: 'SGD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 4,\n  }).format(amount)\n}\n\n// Utility function to format large numbers\nexport function formatNumber(num: number): string {\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1) + 'M'\n  } else if (num >= 1000) {\n    return (num / 1000).toFixed(1) + 'K'\n  }\n  return num.toLocaleString()\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/select.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-white text-gray-950 shadow-lg backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm text-gray-900 outline-none focus:bg-blue-50 focus:text-blue-900 hover:bg-gray-50 data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4 text-blue-600\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/app/admin/costs/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useMemo } from 'react'\nimport { useAuth } from '@/lib/auth/AuthContext'\nimport { useSystemWideCostSummary, formatCostPeriod } from '@/lib/hooks/useCostTracking'\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner'\nimport {\n  DollarSign,\n  Calendar,\n  Download,\n  PieChart,\n  Users,\n  RefreshCw,\n} from 'lucide-react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\n\ninterface AgentSummary {\n  agentId: string\n  agentName: string\n  agentEmail: string\n  totalCost: number\n  totalQuantity: number\n  breakdown: {\n    category: string\n    serviceProvider: string\n    totalCost: number\n    totalQuantity: number\n  }[]\n}\n\ninterface CostBreakdown {\n  category: string\n  serviceProvider: string\n  totalCost: number\n  totalQuantity: number\n  percentage: number\n}\n\n// Color mapping for different service providers\nconst getServiceProviderColor = (serviceProvider: string): string => {\n  const colorMap: { [key: string]: string } = {\n    'openai': 'bg-green-500',\n    'gupshup': 'bg-blue-500',\n    'google': 'bg-yellow-500',\n    'zoom': 'bg-purple-500',\n    'infrastructure': 'bg-red-500',\n    'default': 'bg-gray-500'\n  }\n  return colorMap[serviceProvider.toLowerCase()] || colorMap.default\n}\n\nexport default function CostsPage() {\n  const { user, hasPermission } = useAuth()\n  const [selectedPeriod, setSelectedPeriod] = useState('current-month')\n\n  // Calculate date range for selected period (memoized to prevent infinite re-renders)\n  const { startDate, endDate } = useMemo(() => formatCostPeriod(selectedPeriod), [selectedPeriod])\n\n  // Fetch system-wide cost data\n  const { data: costData, isLoading, error, refetch } = useSystemWideCostSummary(startDate, endDate)\n\n  // Check admin permission\n  if (!hasPermission('manage_system')) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <Card>\n          <CardContent className=\"p-6 text-center\">\n            <h2 className=\"text-lg font-semibold mb-2\">Access Denied</h2>\n            <p className=\"text-muted-foreground\">You don't have permission to access cost tracking.</p>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    )\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <Card>\n          <CardContent className=\"p-6 text-center\">\n            <h2 className=\"text-lg font-semibold mb-2\">Error Loading Data</h2>\n            <p className=\"text-muted-foreground mb-4\">Failed to load cost tracking data</p>\n            <Button onClick={() => refetch()}>Try Again</Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  const totalCost = costData?.totalCost || 0\n  const agentCount = costData?.agentCount || 0\n  const breakdown = costData?.breakdown || []\n  const agentSummaries = costData?.agentSummaries || []\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-semibold flex items-center gap-2\">\n            <DollarSign className=\"h-6 w-6\" />\n            Cost Tracking\n          </h1>\n          <p className=\"text-muted-foreground mt-1\">\n            Monitor and analyze API usage costs across all agents\n          </p>\n        </div>\n        <div className=\"flex space-x-3\">\n          <Select value={selectedPeriod} onValueChange={setSelectedPeriod}>\n            <SelectTrigger className=\"w-48\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"current-month\">Current Month</SelectItem>\n              <SelectItem value=\"last-month\">Last Month</SelectItem>\n              <SelectItem value=\"last-3-months\">Last 3 Months</SelectItem>\n              <SelectItem value=\"last-6-months\">Last 6 Months</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button variant=\"outline\" onClick={() => refetch()}>\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Total Cost Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <Card className=\"md:col-span-1\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Total Cost</p>\n                <p className=\"text-3xl font-semibold mt-2\">\n                  S${totalCost.toFixed(2)}\n                </p>\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  {selectedPeriod.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                </p>\n              </div>\n              <div className=\"h-12 w-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <DollarSign className=\"h-6 w-6 text-blue-600\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"md:col-span-1\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Active Agents</p>\n                <p className=\"text-3xl font-semibold mt-2\">\n                  {agentCount}\n                </p>\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  Agents with usage\n                </p>\n              </div>\n              <div className=\"h-12 w-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                <Users className=\"h-6 w-6 text-green-600\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"md:col-span-1\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <PieChart className=\"h-5 w-5\" />\n              Service Breakdown\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {breakdown.length > 0 ? (\n                breakdown.map((item) => (\n                  <div key={`${item.serviceProvider}_${item.category}`} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-3 h-3 rounded-full ${getServiceProviderColor(item.serviceProvider)}`}></div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-sm font-medium\">\n                          {item.serviceProvider}\n                        </span>\n                        <span className=\"text-xs text-muted-foreground\">\n                          {item.category}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col items-end\">\n                      <span className=\"text-sm font-medium\">\n                        S${item.totalCost.toFixed(2)}\n                      </span>\n                      <span className=\"text-xs text-muted-foreground\">\n                        {item.percentage.toFixed(1)}%\n                      </span>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <p className=\"text-sm text-muted-foreground text-center py-4\">\n                  No cost data available for this period\n                </p>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Agent Cost Summaries */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Users className=\"h-5 w-5\" />\n            Agent Cost Breakdown\n          </CardTitle>\n          <CardDescription>\n            Individual agent costs and usage within the selected time period\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {agentSummaries.length > 0 ? (\n            <div className=\"space-y-4\">\n              {agentSummaries.map((agent) => (\n                <div key={agent.agentId} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div>\n                      <h4 className=\"font-medium\">{agent.agentName}</h4>\n                      <p className=\"text-sm text-muted-foreground\">{agent.agentEmail}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-semibold\">S${agent.totalCost.toFixed(2)}</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {agent.totalQuantity.toFixed(0)} units\n                      </p>\n                    </div>\n                  </div>\n\n                  {agent.breakdown.length > 0 && (\n                    <div className=\"space-y-2\">\n                      <p className=\"text-sm font-medium text-muted-foreground\">Service Breakdown:</p>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\n                        {agent.breakdown.map((service) => (\n                          <div\n                            key={`${service.serviceProvider}_${service.category}`}\n                            className=\"flex items-center justify-between bg-muted/50 rounded px-3 py-2\"\n                          >\n                            <div className=\"flex items-center space-x-2\">\n                              <div className={`w-2 h-2 rounded-full ${getServiceProviderColor(service.serviceProvider)}`}></div>\n                              <span className=\"text-xs font-medium\">\n                                {service.serviceProvider}\n                              </span>\n                            </div>\n                            <span className=\"text-xs font-medium\">\n                              S${service.totalCost.toFixed(2)}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground\">No agent cost data available for this period</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}