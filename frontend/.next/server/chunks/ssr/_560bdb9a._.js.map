{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/hooks/useIntegrations.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport { integrationsApi, IntegrationStatus, WABAIntegration, GoogleIntegration, ZoomIntegration, MetaBusinessIntegration, ConnectWABARequest, UpdateWABARequest } from '@/lib/api/services/integrationsApi'\nimport { useAuth } from '@/lib/auth/AuthContext'\nimport { toast } from 'sonner'\n\n// Query Keys\nexport const integrationKeys = {\n  all: ['integrations'] as const,\n  status: (agentId?: string) => [...integrationKeys.all, 'status', agentId] as const,\n  waba: (agentId?: string) => [...integrationKeys.all, 'waba', agentId] as const,\n  google: (agentId?: string) => [...integrationKeys.all, 'google', agentId] as const,\n  zoom: (agentId?: string) => [...integrationKeys.all, 'zoom', agentId] as const,\n  meta: (agentId?: string) => [...integrationKeys.all, 'meta', agentId] as const,\n  health: (agentId?: string) => [...integrationKeys.all, 'health', agentId] as const,\n  wabaQR: () => [...integrationKeys.all, 'waba-qr'] as const,\n}\n\n// Integration Status Hook\nexport function useIntegrationStatus(agentId?: string) {\n  return useQuery({\n    queryKey: integrationKeys.status(agentId),\n    queryFn: () => integrationsApi.getIntegrationStatus(agentId),\n    staleTime: 1 * 60 * 1000, // 1 minute\n    refetchInterval: 2 * 60 * 1000, // Refresh every 2 minutes\n  })\n}\n\n// WABA Integration Hooks\nexport function useWABAIntegration(agentId?: string) {\n  return useQuery({\n    queryKey: integrationKeys.waba(agentId),\n    queryFn: () => integrationsApi.getWABAIntegration(agentId),\n    staleTime: 30 * 1000, // 30 seconds\n    refetchInterval: 60 * 1000, // Refresh every minute\n  })\n}\n\nexport function useWABAQRCode() {\n  return useQuery({\n    queryKey: integrationKeys.wabaQR(),\n    queryFn: () => integrationsApi.getWABAQRCode(),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    enabled: false, // Only fetch when explicitly requested\n  })\n}\n\n// Google Integration Hook\nexport function useGoogleIntegration(agentId?: string) {\n  return useQuery({\n    queryKey: integrationKeys.google(agentId),\n    queryFn: () => integrationsApi.getGoogleIntegration(agentId),\n    staleTime: 1 * 60 * 1000, // 1 minute\n  })\n}\n\n// Zoom Integration Hook\nexport function useZoomIntegration(agentId?: string) {\n  return useQuery({\n    queryKey: integrationKeys.zoom(agentId),\n    queryFn: () => integrationsApi.getZoomIntegration(agentId),\n    staleTime: 1 * 60 * 1000, // 1 minute\n  })\n}\n\n// Meta Business Integration Hook\nexport function useMetaBusinessIntegration(agentId?: string) {\n  return useQuery({\n    queryKey: integrationKeys.meta(agentId),\n    queryFn: () => integrationsApi.getMetaBusinessIntegration(agentId),\n    staleTime: 1 * 60 * 1000, // 1 minute\n  })\n}\n\n// Integration Health Check Hook\nexport function useIntegrationHealth(agentId?: string) {\n  return useQuery({\n    queryKey: integrationKeys.health(agentId),\n    queryFn: () => integrationsApi.getHealthCheck(agentId),\n    staleTime: 2 * 60 * 1000, // 2 minutes\n    refetchInterval: 5 * 60 * 1000, // Refresh every 5 minutes\n  })\n}\n\n// Connect WABA Mutation\nexport function useConnectWABA() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: (request: ConnectWABARequest) => integrationsApi.connectWABA(request),\n    onSuccess: (data) => {\n      // Invalidate all WABA-related queries\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.waba()\n      })\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.status()\n      })\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.health()\n      })\n\n      toast.success('WABA Connected Successfully', {\n        description: `WhatsApp Business API connected for ${data.phoneNumber}`,\n      })\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Connect WABA', {\n        description: error.message || 'Please check your credentials and try again',\n      })\n    },\n  })\n}\n\n// Update WABA Mutation\nexport function useUpdateWABA() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: (request: UpdateWABARequest) => integrationsApi.updateWABA(request),\n    onSuccess: (data) => {\n      // Invalidate WABA-related queries\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.waba()\n      })\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.status()\n      })\n\n      toast.success('WABA Configuration Updated')\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Update WABA', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Disconnect WABA Mutation\nexport function useDisconnectWABA() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: () => integrationsApi.disconnectWABA(),\n    onSuccess: () => {\n      // Invalidate all integration queries\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.all\n      })\n\n      toast.success('WABA Disconnected', {\n        description: 'WhatsApp Business API has been disconnected',\n      })\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Disconnect WABA', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Test WABA Connection Mutation\nexport function useTestWABAConnection() {\n  return useMutation({\n    mutationFn: (agentId?: string) => integrationsApi.testWABAConnection(agentId),\n    onSuccess: (data) => {\n      if (data.success) {\n        toast.success('WABA Connection Test Successful', {\n          description: data.message,\n        })\n      } else {\n        toast.error('WABA Connection Test Failed', {\n          description: data.message,\n        })\n      }\n    },\n    onError: (error: any) => {\n      toast.error('WABA Connection Test Failed', {\n        description: error.message || 'Unable to test connection',\n      })\n    },\n  })\n}\n\n// Get Google Auth URL Mutation\nexport function useGetGoogleAuthUrl() {\n  return useMutation({\n    mutationFn: (agentId?: string) => integrationsApi.getGoogleAuthUrl(agentId),\n    onSuccess: (data) => {\n      // Open auth URL in new window\n      window.open(data.authUrl, 'google-auth', 'width=500,height=600')\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Get Google Auth URL', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Disconnect Google Mutation\nexport function useDisconnectGoogle() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: () => integrationsApi.disconnectGoogle(),\n    onSuccess: () => {\n      // Invalidate Google integration queries\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.google()\n      })\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.status()\n      })\n\n      toast.success('Google Calendar Disconnected')\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Disconnect Google Calendar', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Test Google Connection Mutation\nexport function useTestGoogleConnection() {\n  return useMutation({\n    mutationFn: (agentId?: string) => integrationsApi.testGoogleConnection(agentId),\n    onSuccess: (data) => {\n      if (data.success) {\n        toast.success('Google Calendar Test Successful', {\n          description: data.message,\n        })\n      } else {\n        toast.error('Google Calendar Test Failed', {\n          description: data.message,\n        })\n      }\n    },\n    onError: (error: any) => {\n      toast.error('Google Calendar Test Failed', {\n        description: error.message || 'Unable to test connection',\n      })\n    },\n  })\n}\n\n// Get Zoom Auth URL Mutation\nexport function useGetZoomAuthUrl() {\n  return useMutation({\n    mutationFn: (agentId?: string) => integrationsApi.getZoomAuthUrl(agentId),\n    onSuccess: (data) => {\n      // Open auth URL in new window\n      window.open(data.authUrl, 'zoom-auth', 'width=500,height=600')\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Get Zoom Auth URL', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Disconnect Zoom Mutation\nexport function useDisconnectZoom() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: () => integrationsApi.disconnectZoom(),\n    onSuccess: () => {\n      // Invalidate Zoom integration queries\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.zoom()\n      })\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.status()\n      })\n\n      toast.success('Zoom Disconnected')\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Disconnect Zoom', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Test Zoom Connection Mutation\nexport function useTestZoomConnection() {\n  return useMutation({\n    mutationFn: (agentId?: string) => integrationsApi.testZoomConnection(agentId),\n    onSuccess: (data) => {\n      if (data.success) {\n        toast.success('Zoom Test Successful', {\n          description: data.message,\n        })\n      } else {\n        toast.error('Zoom Test Failed', {\n          description: data.message,\n        })\n      }\n    },\n    onError: (error: any) => {\n      toast.error('Zoom Test Failed', {\n        description: error.message || 'Unable to test connection',\n      })\n    },\n  })\n}\n\n// Update Zoom Settings Mutation\nexport function useUpdateZoomSettings() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: (settings: {\n      autoRecord?: boolean\n      waitingRoom?: boolean\n      joinBeforeHost?: boolean\n    }) => integrationsApi.updateZoomSettings(settings),\n    onSuccess: () => {\n      // Invalidate Zoom integration queries\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.zoom()\n      })\n\n      toast.success('Zoom Settings Updated')\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Update Zoom Settings', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Sync All Integrations Mutation\nexport function useSyncAllIntegrations() {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: (agentId?: string) => integrationsApi.syncAllIntegrations(agentId),\n    onSuccess: (data) => {\n      // Invalidate all integration queries\n      queryClient.invalidateQueries({\n        queryKey: integrationKeys.all\n      })\n\n      const successCount = Object.values(data).filter(result => result.success).length\n      const totalCount = Object.keys(data).length\n\n      toast.success('Integration Sync Complete', {\n        description: `${successCount}/${totalCount} integrations synced successfully`,\n      })\n    },\n    onError: (error: any) => {\n      toast.error('Failed to Sync Integrations', {\n        description: error.message || 'Please try again',\n      })\n    },\n  })\n}\n\n// Combined Integrations Hook for Dashboard\nexport function useIntegrationsOverview(agentId?: string) {\n  const { user } = useAuth()\n  const effectiveAgentId = agentId || user?.id\n\n  const statusQuery = useIntegrationStatus(effectiveAgentId)\n  const healthQuery = useIntegrationHealth(effectiveAgentId)\n\n  return {\n    integrations: statusQuery.data,\n    health: healthQuery.data,\n    loading: statusQuery.isLoading || healthQuery.isLoading,\n    error: statusQuery.error || healthQuery.error,\n    refetch: () => {\n      statusQuery.refetch()\n      healthQuery.refetch()\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react'\nimport { cn } from '@/lib/utils'\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = 'Input'\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,qMAAA,CAAA,aAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/switch.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as SwitchPrimitives from '@radix-ui/react-switch'\nimport { clsx } from 'clsx'\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={clsx(\n      'peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-500 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary-600 data-[state=unchecked]:bg-gray-200',\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={clsx(\n        'pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0'\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,uBAAS,qMAAA,CAAA,aAAgB,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACZ,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACZ;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,qMAAA,CAAA,aAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,qMAAA,CAAA,aAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/hooks/usePWA.ts"],"sourcesContent":["'use client'\n\nimport { useEffect, useState, useCallback } from 'react'\nimport { toast } from 'sonner'\n\ninterface PWAInstallPrompt {\n  prompt: () => Promise<void>\n  userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>\n}\n\ninterface PWAState {\n  isInstallable: boolean\n  isInstalled: boolean\n  isOffline: boolean\n  isUpdateAvailable: boolean\n  notificationPermission: NotificationPermission\n  pushSubscription: PushSubscription | null\n}\n\nexport function usePWA() {\n  const [pwaState, setPWAState] = useState<PWAState>({\n    isInstallable: false,\n    isInstalled: false,\n    isOffline: false,\n    isUpdateAvailable: false,\n    notificationPermission: 'default',\n    pushSubscription: null\n  })\n\n  const [installPrompt, setInstallPrompt] = useState<PWAInstallPrompt | null>(null)\n  const [serviceWorkerRegistration, setServiceWorkerRegistration] = useState<ServiceWorkerRegistration | null>(null)\n\n  // Register service worker\n  const registerServiceWorker = useCallback(async () => {\n    if ('serviceWorker' in navigator) {\n      try {\n        const registration = await navigator.serviceWorker.register('/sw.js', {\n          scope: '/'\n        })\n\n        setServiceWorkerRegistration(registration)\n\n        // Check for updates\n        registration.addEventListener('updatefound', () => {\n          const newWorker = registration.installing\n          if (newWorker) {\n            newWorker.addEventListener('statechange', () => {\n              if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n                setPWAState(prev => ({ ...prev, isUpdateAvailable: true }))\n                toast.info('App Update Available', {\n                  description: 'A new version is ready. Refresh to update.',\n                  action: {\n                    label: 'Refresh',\n                    onClick: () => window.location.reload()\n                  }\n                })\n              }\n            })\n          }\n        })\n\n        console.log('Service Worker registered successfully')\n        return registration\n      } catch (error) {\n        console.error('Service Worker registration failed:', error)\n        return null\n      }\n    }\n    return null\n  }, [])\n\n  // Install PWA\n  const installPWA = useCallback(async () => {\n    if (installPrompt) {\n      try {\n        await installPrompt.prompt()\n        const choiceResult = await installPrompt.userChoice\n        \n        if (choiceResult.outcome === 'accepted') {\n          setPWAState(prev => ({ ...prev, isInstalled: true, isInstallable: false }))\n          setInstallPrompt(null)\n          toast.success('App Installed', {\n            description: 'PropertyHub has been added to your home screen!'\n          })\n        }\n      } catch (error) {\n        console.error('PWA installation failed:', error)\n        toast.error('Installation Failed', {\n          description: 'Unable to install the app. Please try again.'\n        })\n      }\n    }\n  }, [installPrompt])\n\n  // Request notification permission\n  const requestNotificationPermission = useCallback(async () => {\n    if ('Notification' in window) {\n      try {\n        const permission = await Notification.requestPermission()\n        setPWAState(prev => ({ ...prev, notificationPermission: permission }))\n        \n        if (permission === 'granted') {\n          toast.success('Notifications Enabled', {\n            description: 'You will now receive push notifications.'\n          })\n        } else {\n          toast.error('Notifications Denied', {\n            description: 'You can enable notifications in your browser settings.'\n          })\n        }\n        \n        return permission\n      } catch (error) {\n        console.error('Notification permission request failed:', error)\n        return 'denied'\n      }\n    }\n    return 'denied'\n  }, [])\n\n  // Subscribe to push notifications\n  const subscribeToPush = useCallback(async () => {\n    if (!serviceWorkerRegistration) {\n      console.error('Service Worker not registered')\n      return null\n    }\n\n    try {\n      const subscription = await serviceWorkerRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: process.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY\n      })\n\n      setPWAState(prev => ({ ...prev, pushSubscription: subscription }))\n      \n      // Send subscription to server\n      await fetch('/api/push/subscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(subscription)\n      })\n\n      toast.success('Push Notifications Enabled', {\n        description: 'You will receive real-time updates.'\n      })\n\n      return subscription\n    } catch (error) {\n      console.error('Push subscription failed:', error)\n      toast.error('Push Notifications Failed', {\n        description: 'Unable to enable push notifications.'\n      })\n      return null\n    }\n  }, [serviceWorkerRegistration])\n\n  // Unsubscribe from push notifications\n  const unsubscribeFromPush = useCallback(async () => {\n    if (pwaState.pushSubscription) {\n      try {\n        await pwaState.pushSubscription.unsubscribe()\n        setPWAState(prev => ({ ...prev, pushSubscription: null }))\n        \n        // Notify server\n        await fetch('/api/push/unsubscribe', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n          }\n        })\n\n        toast.success('Push Notifications Disabled')\n      } catch (error) {\n        console.error('Push unsubscription failed:', error)\n      }\n    }\n  }, [pwaState.pushSubscription])\n\n  // Check if app is running in standalone mode (installed)\n  const checkIfInstalled = useCallback(() => {\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches ||\n                        (window.navigator as any).standalone ||\n                        document.referrer.includes('android-app://')\n    \n    setPWAState(prev => ({ ...prev, isInstalled: isStandalone }))\n  }, [])\n\n  // Initialize PWA features\n  useEffect(() => {\n    // Register service worker\n    registerServiceWorker()\n\n    // Check if installed\n    checkIfInstalled()\n\n    // Check initial notification permission\n    if ('Notification' in window) {\n      setPWAState(prev => ({ \n        ...prev, \n        notificationPermission: Notification.permission \n      }))\n    }\n\n    // Listen for install prompt\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault()\n      setInstallPrompt(e as any)\n      setPWAState(prev => ({ ...prev, isInstallable: true }))\n    }\n\n    // Listen for app installed\n    const handleAppInstalled = () => {\n      setPWAState(prev => ({ ...prev, isInstalled: true, isInstallable: false }))\n      setInstallPrompt(null)\n      toast.success('App Installed Successfully!')\n    }\n\n    // Listen for online/offline status\n    const handleOnline = () => {\n      setPWAState(prev => ({ ...prev, isOffline: false }))\n      toast.success('Back Online', {\n        description: 'Connection restored. Syncing data...'\n      })\n    }\n\n    const handleOffline = () => {\n      setPWAState(prev => ({ ...prev, isOffline: true }))\n      toast.warning('You\\'re Offline', {\n        description: 'Some features may be limited.'\n      })\n    }\n\n    // Add event listeners\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt)\n    window.addEventListener('appinstalled', handleAppInstalled)\n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n\n    // Set initial offline state\n    setPWAState(prev => ({ ...prev, isOffline: !navigator.onLine }))\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt)\n      window.removeEventListener('appinstalled', handleAppInstalled)\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [registerServiceWorker, checkIfInstalled])\n\n  // Get push subscription on service worker registration\n  useEffect(() => {\n    if (serviceWorkerRegistration) {\n      serviceWorkerRegistration.pushManager.getSubscription()\n        .then(subscription => {\n          setPWAState(prev => ({ ...prev, pushSubscription: subscription }))\n        })\n        .catch(console.error)\n    }\n  }, [serviceWorkerRegistration])\n\n  return {\n    ...pwaState,\n    installPWA,\n    requestNotificationPermission,\n    subscribeToPush,\n    unsubscribeFromPush,\n    serviceWorkerRegistration\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/PWAInstallPrompt.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { usePWA } from '@/lib/hooks/usePWA'\nimport {\n  XMarkIcon,\n  DevicePhoneMobileIcon,\n  ArrowDownTrayIcon,\n  BellIcon,\n  WifiIcon,\n} from '@heroicons/react/24/outline'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\n\ninterface PWAInstallPromptProps {\n  onDismiss?: () => void\n}\n\nexport function PWAInstallPrompt({ onDismiss }: PWAInstallPromptProps) {\n  const {\n    isInstallable,\n    isInstalled,\n    isOffline,\n    notificationPermission,\n    installPWA,\n    requestNotificationPermission,\n    subscribeToPush\n  } = usePWA()\n\n  const [dismissed, setDismissed] = useState(false)\n  const [currentStep, setCurrentStep] = useState<'install' | 'notifications' | 'complete'>('install')\n\n  const handleDismiss = () => {\n    setDismissed(true)\n    onDismiss?.()\n  }\n\n  const handleInstall = async () => {\n    await installPWA()\n    setCurrentStep('notifications')\n  }\n\n  const handleEnableNotifications = async () => {\n    const permission = await requestNotificationPermission()\n    if (permission === 'granted') {\n      await subscribeToPush()\n    }\n    setCurrentStep('complete')\n  }\n\n  const handleSkipNotifications = () => {\n    setCurrentStep('complete')\n  }\n\n  if (dismissed || isInstalled || !isInstallable) {\n    return null\n  }\n\n  return (\n    <div className=\"fixed bottom-4 left-4 right-4 z-50 md:left-auto md:right-4 md:w-96\">\n      <Card className=\"p-6 shadow-lg border-2 border-primary-200 bg-gradient-to-br from-primary-50 to-blue-50\">\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-primary-100 rounded-lg\">\n              <DevicePhoneMobileIcon className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {currentStep === 'install' && 'Install PropertyHub'}\n                {currentStep === 'notifications' && 'Enable Notifications'}\n                {currentStep === 'complete' && 'Setup Complete!'}\n              </h3>\n              <p className=\"text-sm text-gray-600\">\n                {currentStep === 'install' && 'Get the full app experience'}\n                {currentStep === 'notifications' && 'Stay updated with real-time alerts'}\n                {currentStep === 'complete' && 'You\\'re all set to go!'}\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={handleDismiss}\n            className=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        {currentStep === 'install' && (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-3 gap-3 text-center\">\n              <div className=\"p-3 bg-white rounded-lg\">\n                <WifiIcon className=\"h-6 w-6 text-green-500 mx-auto mb-1\" />\n                <p className=\"text-xs text-gray-600\">Works Offline</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-lg\">\n                <BellIcon className=\"h-6 w-6 text-blue-500 mx-auto mb-1\" />\n                <p className=\"text-xs text-gray-600\">Push Notifications</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-lg\">\n                <DevicePhoneMobileIcon className=\"h-6 w-6 text-purple-500 mx-auto mb-1\" />\n                <p className=\"text-xs text-gray-600\">Native Feel</p>\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3\">\n              <Button\n                variant=\"default\"\n                onClick={handleInstall}\n                className=\"flex-1\"\n              >\n                <ArrowDownTrayIcon className=\"h-4 w-4 mr-2\" />\n                Install App\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={handleDismiss}\n                className=\"px-4\"\n              >\n                Later\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {currentStep === 'notifications' && (\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-white rounded-lg border border-gray-200\">\n              <div className=\"flex items-center space-x-3\">\n                <BellIcon className=\"h-8 w-8 text-blue-500\" />\n                <div>\n                  <h4 className=\"font-medium text-gray-900\">Real-time Updates</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Get notified about new leads, messages, and appointments instantly.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <Button\n                variant=\"default\"\n                onClick={handleEnableNotifications}\n                className=\"flex-1\"\n                disabled={notificationPermission === 'denied'}\n              >\n                <BellIcon className=\"h-4 w-4 mr-2\" />\n                Enable Notifications\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={handleSkipNotifications}\n                className=\"px-4\"\n              >\n                Skip\n              </Button>\n            </div>\n\n            {notificationPermission === 'denied' && (\n              <p className=\"text-xs text-red-600 text-center\">\n                Notifications are blocked. You can enable them in your browser settings.\n              </p>\n            )}\n          </div>\n        )}\n\n        {currentStep === 'complete' && (\n          <div className=\"space-y-4\">\n            <div className=\"text-center py-4\">\n              <div className=\"h-16 w-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                <svg className=\"h-8 w-8 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              </div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">You're all set!</h4>\n              <p className=\"text-sm text-gray-600\">\n                PropertyHub is now installed and ready to use. Enjoy the enhanced experience!\n              </p>\n            </div>\n\n            <Button\n              variant=\"default\"\n              onClick={handleDismiss}\n              className=\"w-full\"\n            >\n              Get Started\n            </Button>\n          </div>\n        )}\n\n        {/* Offline indicator */}\n        {isOffline && (\n          <div className=\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-2 w-2 bg-yellow-400 rounded-full\"></div>\n              <p className=\"text-sm text-yellow-800\">\n                You're currently offline. The app will sync when connection is restored.\n              </p>\n            </div>\n          </div>\n        )}\n      </Card>\n    </div>\n  )\n}\n\n// Offline indicator component\nexport function OfflineIndicator() {\n  const { isOffline } = usePWA()\n\n  if (!isOffline) return null\n\n  return (\n    <div className=\"fixed top-0 left-0 right-0 z-50 bg-yellow-500 text-white text-center py-2 text-sm font-medium\">\n      <div className=\"flex items-center justify-center space-x-2\">\n        <div className=\"h-2 w-2 bg-white rounded-full animate-pulse\"></div>\n        <span>You're offline - Some features may be limited</span>\n      </div>\n    </div>\n  )\n}\n\n// PWA status component for settings\nexport function PWAStatus() {\n  const {\n    isInstalled,\n    isOffline,\n    notificationPermission,\n    pushSubscription,\n    requestNotificationPermission,\n    subscribeToPush,\n    unsubscribeFromPush\n  } = usePWA()\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-medium text-gray-900\">App Status</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"p-4 border border-gray-200 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"font-medium text-gray-900\">Installation</p>\n              <p className=\"text-sm text-gray-600\">\n                {isInstalled ? 'App is installed' : 'Running in browser'}\n              </p>\n            </div>\n            <div className={`h-3 w-3 rounded-full ${\n              isInstalled ? 'bg-green-400' : 'bg-gray-400'\n            }`}></div>\n          </div>\n        </div>\n\n        <div className=\"p-4 border border-gray-200 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"font-medium text-gray-900\">Connection</p>\n              <p className=\"text-sm text-gray-600\">\n                {isOffline ? 'Offline' : 'Online'}\n              </p>\n            </div>\n            <div className={`h-3 w-3 rounded-full ${\n              isOffline ? 'bg-red-400' : 'bg-green-400'\n            }`}></div>\n          </div>\n        </div>\n\n        <div className=\"p-4 border border-gray-200 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"font-medium text-gray-900\">Notifications</p>\n              <p className=\"text-sm text-gray-600\">\n                {notificationPermission === 'granted' ? 'Enabled' : \n                 notificationPermission === 'denied' ? 'Blocked' : 'Not set'}\n              </p>\n            </div>\n            <div className={`h-3 w-3 rounded-full ${\n              notificationPermission === 'granted' ? 'bg-green-400' : \n              notificationPermission === 'denied' ? 'bg-red-400' : 'bg-yellow-400'\n            }`}></div>\n          </div>\n        </div>\n\n        <div className=\"p-4 border border-gray-200 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"font-medium text-gray-900\">Push Notifications</p>\n              <p className=\"text-sm text-gray-600\">\n                {pushSubscription ? 'Active' : 'Inactive'}\n              </p>\n            </div>\n            <div className={`h-3 w-3 rounded-full ${\n              pushSubscription ? 'bg-green-400' : 'bg-gray-400'\n            }`}></div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex space-x-3\">\n        {notificationPermission !== 'granted' && (\n          <Button\n            variant=\"outline\"\n            onClick={requestNotificationPermission}\n            size=\"sm\"\n          >\n            Enable Notifications\n          </Button>\n        )}\n        \n        {notificationPermission === 'granted' && !pushSubscription && (\n          <Button\n            variant=\"outline\"\n            onClick={subscribeToPush}\n            size=\"sm\"\n          >\n            Enable Push Notifications\n          </Button>\n        )}\n        \n        {pushSubscription && (\n          <Button\n            variant=\"outline\"\n            onClick={unsubscribeFromPush}\n            size=\"sm\"\n          >\n            Disable Push Notifications\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1579, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/app/agent/settings/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useAuth } from '@/lib/auth/AuthContext'\nimport { useGoogleIntegration } from '@/lib/hooks/useIntegrations'\nimport { toast } from 'sonner'\nimport {\n  User,\n  Bell,\n  Shield,\n  MessageSquare,\n  Clock,\n  Globe,\n  Smartphone,\n  Key,\n  Settings as SettingsIcon,\n  Calendar,\n  Save,\n  CheckCircle,\n  ExternalLink,\n} from 'lucide-react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Switch } from '@/components/ui/switch'\nimport { Label } from '@/components/ui/label'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner'\nimport { PWAStatus } from '@/components/ui/PWAInstallPrompt'\n\ninterface SettingsSection {\n  id: string\n  title: string\n  description: string\n  icon: React.ComponentType<any>\n}\n\nconst settingsSections: SettingsSection[] = [\n  {\n    id: 'profile',\n    title: 'Profile Settings',\n    description: 'Manage your personal information and preferences',\n    icon: User\n  },\n  {\n    id: 'notifications',\n    title: 'Notifications',\n    description: 'Configure how and when you receive notifications',\n    icon: Bell\n  },\n  {\n    id: 'security',\n    title: 'Security & Privacy',\n    description: 'Manage your account security and privacy settings',\n    icon: Shield\n  },\n  {\n    id: 'bot',\n    title: 'Bot Configuration',\n    description: 'Customize your AI assistant behavior and responses',\n    icon: MessageSquare\n  },\n  {\n    id: 'availability',\n    title: 'Availability',\n    description: 'Set your working hours and availability preferences',\n    icon: Clock\n  },\n  {\n    id: 'integrations',\n    title: 'Integrations',\n    description: 'Connect Google Calendar, Zoom, and other services',\n    icon: Globe\n  },\n  {\n    id: 'app',\n    title: 'App Settings',\n    description: 'Manage PWA features, offline mode, and app preferences',\n    icon: Smartphone\n  }\n]\n\nexport default function SettingsPage() {\n  const { user } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [activeSection, setActiveSection] = useState('profile')\n\n  // Use React Query hook for Google Calendar integration status\n  const { data: googleIntegration, isLoading: googleLoading, refetch: refetchGoogle } = useGoogleIntegration(user?.id)\n  const [formData, setFormData] = useState({\n    fullName: user?.full_name || 'Agent',\n    email: user?.email || '',\n    phone: '+65 9123 4567',\n    timezone: 'Asia/Singapore',\n    language: 'en',\n    notifications: {\n      email: true,\n      push: true,\n      sms: false,\n      newLeads: true,\n      appointments: true,\n      systemUpdates: false\n    },\n    availability: {\n      monday: { enabled: true, start: '09:00', end: '18:00' },\n      tuesday: { enabled: true, start: '09:00', end: '18:00' },\n      wednesday: { enabled: true, start: '09:00', end: '18:00' },\n      thursday: { enabled: true, start: '09:00', end: '18:00' },\n      friday: { enabled: true, start: '09:00', end: '18:00' },\n      saturday: { enabled: false, start: '10:00', end: '16:00' },\n      sunday: { enabled: false, start: '10:00', end: '16:00' }\n    },\n    botSettings: {\n      responseStyle: 'professional',\n      aggressiveness: 'medium',\n      followUpEnabled: true,\n      autoScheduling: true\n    }\n  })\n\n  const handleSave = async () => {\n    setLoading(true)\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500))\n    setLoading(false)\n  }\n\n  // Integration handlers\n  const handleGoogleConnect = async () => {\n    if (!user?.id) {\n      toast.error('User not authenticated')\n      return\n    }\n\n    try {\n      // Directly open the Google OAuth URL since the endpoint returns a redirect\n      const authUrl = `${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080'}/api/auth/google?agentId=${user.id}`\n      const authWindow = window.open(authUrl, 'google-auth', 'width=500,height=600,scrollbars=yes,resizable=yes')\n\n      if (!authWindow) {\n        toast.error('Popup blocked', {\n          description: 'Please allow popups for this site and try again'\n        })\n        return\n      }\n\n      toast.success('Google Calendar authentication initiated', {\n        description: 'Complete the authentication in the popup window'\n      })\n\n      // Listen for messages from the OAuth popup\n      const handleMessage = (event: MessageEvent) => {\n        if (event.origin !== window.location.origin) return\n\n        if (event.data.type === 'GOOGLE_AUTH_SUCCESS') {\n          toast.success('Google Calendar connected successfully!')\n          refetchGoogle() // Refresh the integration status\n          window.removeEventListener('message', handleMessage)\n        } else if (event.data.type === 'GOOGLE_AUTH_ERROR') {\n          toast.error('Google Calendar authentication failed', {\n            description: event.data.error || 'Please try again'\n          })\n          window.removeEventListener('message', handleMessage)\n        }\n      }\n\n      window.addEventListener('message', handleMessage)\n\n      // Fallback: Listen for the popup to close and refresh integration status\n      const checkClosed = setInterval(() => {\n        if (authWindow.closed) {\n          clearInterval(checkClosed)\n          window.removeEventListener('message', handleMessage)\n\n          // Refresh status after popup closes (in case message wasn't received)\n          setTimeout(() => {\n            refetchGoogle()\n          }, 1000)\n\n          toast.info('Authentication window closed', {\n            description: 'Checking connection status...'\n          })\n        }\n      }, 1000)\n\n    } catch (error) {\n      console.error('Google auth error:', error)\n      toast.error('Failed to initiate Google Calendar authentication')\n    }\n  }\n\n\n\n  const renderProfileSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium mb-4\">Personal Information</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"fullName\">Full Name</Label>\n            <Input\n              id=\"fullName\"\n              value={formData.fullName}\n              onChange={(e) => setFormData(prev => ({ ...prev, fullName: e.target.value }))}\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\">Email Address</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              value={formData.email}\n              onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"phone\">Phone Number</Label>\n            <Input\n              id=\"phone\"\n              value={formData.phone}\n              onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"timezone\">Timezone</Label>\n            <select\n              id=\"timezone\"\n              className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n              value={formData.timezone}\n              onChange={(e) => setFormData(prev => ({ ...prev, timezone: e.target.value }))}\n            >\n              <option value=\"Asia/Singapore\">Singapore (GMT+8)</option>\n              <option value=\"Asia/Kuala_Lumpur\">Kuala Lumpur (GMT+8)</option>\n              <option value=\"Asia/Bangkok\">Bangkok (GMT+7)</option>\n              <option value=\"Asia/Jakarta\">Jakarta (GMT+7)</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <h3 className=\"text-lg font-medium mb-4\">Profile Picture</h3>\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"h-16 w-16 bg-primary/10 rounded-full flex items-center justify-center\">\n            <span className=\"text-xl font-medium text-primary\">\n              {formData.fullName.charAt(0)}\n            </span>\n          </div>\n          <div>\n            <Button variant=\"outline\" size=\"sm\">\n              Change Photo\n            </Button>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              JPG, PNG or GIF. Max size 2MB.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderNotificationSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Notification Preferences</h3>\n        <div className=\"space-y-4\">\n          {Object.entries(formData.notifications).map(([key, value]) => (\n            <div key={key} className=\"flex items-center justify-between\">\n              <div>\n                <label className=\"text-sm font-medium text-gray-700\">\n                  {key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}\n                </label>\n                <p className=\"text-xs text-gray-500\">\n                  {key === 'email' && 'Receive notifications via email'}\n                  {key === 'push' && 'Browser and mobile push notifications'}\n                  {key === 'sms' && 'SMS notifications for urgent matters'}\n                  {key === 'newLeads' && 'Notify when new leads are received'}\n                  {key === 'appointments' && 'Appointment reminders and updates'}\n                  {key === 'systemUpdates' && 'System maintenance and updates'}\n                </p>\n              </div>\n              <Switch\n                checked={value}\n                onCheckedChange={(checked) => setFormData(prev => ({\n                  ...prev,\n                  notifications: { ...prev.notifications, [key]: checked }\n                }))}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderSecuritySettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Password & Authentication</h3>\n        <div className=\"space-y-4\">\n          <Button variant=\"outline\" className=\"w-full justify-start\">\n            <Key className=\"h-4 w-4 mr-2\" />\n            Change Password\n          </Button>\n          <Button variant=\"outline\" className=\"w-full justify-start\">\n            <Smartphone className=\"h-4 w-4 mr-2\" />\n            Enable Two-Factor Authentication\n          </Button>\n        </div>\n      </div>\n\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Active Sessions</h3>\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-900\">Current Session</p>\n              <p className=\"text-xs text-gray-500\">Chrome on Windows • Singapore</p>\n            </div>\n            <span className=\"text-xs text-green-600 font-medium\">Active</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'profile':\n        return renderProfileSettings()\n      case 'notifications':\n        return renderNotificationSettings()\n      case 'security':\n        return renderSecuritySettings()\n      case 'app':\n        return <PWAStatus />\n      default:\n        return (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-500\">Settings section coming soon...</p>\n          </div>\n        )\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-semibold flex items-center gap-2\">\n            <SettingsIcon className=\"h-6 w-6\" />\n            Settings\n          </h1>\n          <p className=\"text-muted-foreground mt-1\">\n            Manage your account settings and preferences\n          </p>\n        </div>\n        <Button onClick={handleSave} disabled={loading}>\n          {loading ? (\n            <>\n              <LoadingSpinner size=\"sm\" className=\"mr-2\" />\n              Saving...\n            </>\n          ) : (\n            <>\n              <Save className=\"h-4 w-4 mr-2\" />\n              Save Changes\n            </>\n          )}\n        </Button>\n      </div>\n\n      <Tabs defaultValue=\"profile\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"profile\" className=\"flex items-center gap-2\">\n            <User className=\"h-4 w-4\" />\n            Profile\n          </TabsTrigger>\n          <TabsTrigger value=\"notifications\" className=\"flex items-center gap-2\">\n            <Bell className=\"h-4 w-4\" />\n            Notifications\n          </TabsTrigger>\n          <TabsTrigger value=\"security\" className=\"flex items-center gap-2\">\n            <Shield className=\"h-4 w-4\" />\n            Security\n          </TabsTrigger>\n          <TabsTrigger value=\"bot\" className=\"flex items-center gap-2\">\n            <MessageSquare className=\"h-4 w-4\" />\n            Bot\n          </TabsTrigger>\n          <TabsTrigger value=\"availability\" className=\"flex items-center gap-2\">\n            <Clock className=\"h-4 w-4\" />\n            Availability\n          </TabsTrigger>\n          <TabsTrigger value=\"integrations\" className=\"flex items-center gap-2\">\n            <Globe className=\"h-4 w-4\" />\n            Integrations\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"profile\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Profile Settings</CardTitle>\n              <CardDescription>\n                Manage your personal information and preferences\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {renderProfileSettings()}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"integrations\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Integrations</CardTitle>\n              <CardDescription>\n                Connect your Google Calendar for seamless appointment booking\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 gap-6\">\n                <Card>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-3\">\n                        <Calendar className=\"h-8 w-8 text-blue-600\" />\n                        <div>\n                          <h3 className=\"font-medium\">Google Calendar</h3>\n                          <p className=\"text-sm text-muted-foreground\">Sync appointments and availability</p>\n                          {googleIntegration?.status === 'connected' && googleIntegration?.email && (\n                            <div className=\"flex items-center gap-1 mt-1\">\n                              <CheckCircle className=\"h-3 w-3 text-green-600\" />\n                              <span className=\"text-xs text-green-600\">{googleIntegration.email}</span>\n                            </div>\n                          )}\n                          {googleIntegration?.status === 'error' && googleIntegration?.errorMessage && (\n                            <div className=\"flex items-center gap-1 mt-1\">\n                              <ExternalLink className=\"h-3 w-3 text-red-600\" />\n                              <span className=\"text-xs text-red-600\">Connection error</span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"outline\"\n                        onClick={handleGoogleConnect}\n                        disabled={googleLoading}\n                      >\n                        {googleLoading ? (\n                          <>\n                            <LoadingSpinner size=\"sm\" className=\"mr-2\" />\n                            Loading...\n                          </>\n                        ) : googleIntegration?.status === 'connected' ? (\n                          <>\n                            <CheckCircle className=\"h-4 w-4 mr-2 text-green-600\" />\n                            Connected\n                          </>\n                        ) : (\n                          <>\n                            <ExternalLink className=\"h-4 w-4 mr-2\" />\n                            Connect\n                          </>\n                        )}\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Other tabs would have similar structure */}\n        <TabsContent value=\"notifications\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Notification Settings</CardTitle>\n              <CardDescription>\n                Configure how and when you receive notifications\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground\">Notification settings coming soon...</p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"security\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Security & Privacy</CardTitle>\n              <CardDescription>\n                Manage your account security and privacy settings\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground\">Security settings coming soon...</p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"bot\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Bot Configuration</CardTitle>\n              <CardDescription>\n                Customize your AI assistant behavior and responses\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground\">Bot settings coming soon...</p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"availability\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Availability Settings</CardTitle>\n              <CardDescription>\n                Set your working hours and availability preferences\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground\">Availability settings coming soon...</p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}