{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/utils/errorHandling.ts"],"sourcesContent":["import { toast } from 'sonner'\n\nexport interface ApiError {\n  message: string\n  code?: string\n  status?: number\n  details?: any\n}\n\nexport class AppError extends Error {\n  public readonly code: string\n  public readonly status: number\n  public readonly details?: any\n\n  constructor(message: string, code = 'UNKNOWN_ERROR', status = 500, details?: any) {\n    super(message)\n    this.name = 'AppError'\n    this.code = code\n    this.status = status\n    this.details = details\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, 'VALIDATION_ERROR', 400, details)\n    this.name = 'ValidationError'\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message = 'Authentication required') {\n    super(message, 'AUTHENTICATION_ERROR', 401)\n    this.name = 'AuthenticationError'\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message = 'Access denied') {\n    super(message, 'AUTHORIZATION_ERROR', 403)\n    this.name = 'AuthorizationError'\n  }\n}\n\nexport class NetworkError extends AppError {\n  constructor(message = 'Network error occurred') {\n    super(message, 'NETWORK_ERROR', 0)\n    this.name = 'NetworkError'\n  }\n}\n\nexport class WABAError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, 'WABA_ERROR', 500, details)\n    this.name = 'WABAError'\n  }\n}\n\nexport class IntegrationError extends AppError {\n  constructor(service: string, message: string, details?: any) {\n    super(`${service} integration error: ${message}`, 'INTEGRATION_ERROR', 500, details)\n    this.name = 'IntegrationError'\n  }\n}\n\n// Error handling utilities\nexport function handleApiError(error: any): AppError {\n  // Handle Axios errors\n  if (error.response) {\n    const { status, data } = error.response\n    const message = data?.error || data?.message || 'An error occurred'\n    const code = data?.code || `HTTP_${status}`\n    return new AppError(message, code, status, data)\n  }\n\n  // Handle network errors\n  if (error.request) {\n    return new NetworkError('Unable to connect to server')\n  }\n\n  // Handle custom app errors\n  if (error instanceof AppError) {\n    return error\n  }\n\n  // Handle generic errors\n  return new AppError(error.message || 'An unexpected error occurred')\n}\n\nexport function getErrorMessage(error: any): string {\n  if (error instanceof AppError) {\n    return error.message\n  }\n\n  if (error?.response?.data?.error) {\n    return error.response.data.error\n  }\n\n  if (error?.response?.data?.message) {\n    return error.response.data.message\n  }\n\n  if (error?.message) {\n    return error.message\n  }\n\n  return 'An unexpected error occurred'\n}\n\nexport function showErrorToast(error: any, title = 'Error') {\n  const message = getErrorMessage(error)\n  \n  toast.error(title, {\n    description: message,\n    duration: 5000,\n  })\n}\n\nexport function showSuccessToast(title: string, description?: string) {\n  toast.success(title, {\n    description,\n    duration: 3000,\n  })\n}\n\nexport function showWarningToast(title: string, description?: string) {\n  toast.warning(title, {\n    description,\n    duration: 4000,\n  })\n}\n\nexport function showInfoToast(title: string, description?: string) {\n  toast.info(title, {\n    description,\n    duration: 3000,\n  })\n}\n\n// Retry utilities\nexport async function withRetry<T>(\n  fn: () => Promise<T>,\n  maxRetries = 3,\n  delay = 1000\n): Promise<T> {\n  let lastError: any\n\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      return await fn()\n    } catch (error) {\n      lastError = error\n      \n      if (attempt === maxRetries) {\n        break\n      }\n\n      // Don't retry on authentication/authorization errors\n      if (error instanceof AuthenticationError || error instanceof AuthorizationError) {\n        break\n      }\n\n      // Don't retry on validation errors\n      if (error instanceof ValidationError) {\n        break\n      }\n\n      // Wait before retrying\n      await new Promise(resolve => setTimeout(resolve, delay * attempt))\n    }\n  }\n\n  throw lastError\n}\n\n// Form validation utilities\nexport function validateRequired(value: any, fieldName: string): void {\n  if (!value || (typeof value === 'string' && value.trim() === '')) {\n    throw new ValidationError(`${fieldName} is required`)\n  }\n}\n\nexport function validateEmail(email: string): void {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  if (!emailRegex.test(email)) {\n    throw new ValidationError('Please enter a valid email address')\n  }\n}\n\nexport function validatePhoneNumber(phone: string): void {\n  // Singapore phone number validation\n  const phoneRegex = /^(\\+65)?[689]\\d{7}$/\n  if (!phoneRegex.test(phone.replace(/\\s/g, ''))) {\n    throw new ValidationError('Please enter a valid Singapore phone number')\n  }\n}\n\nexport function validatePassword(password: string): void {\n  if (password.length < 8) {\n    throw new ValidationError('Password must be at least 8 characters long')\n  }\n  \n  if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(password)) {\n    throw new ValidationError('Password must contain at least one uppercase letter, one lowercase letter, and one number')\n  }\n}\n\n// Connection status utilities\nexport function isOnline(): boolean {\n  return navigator.onLine\n}\n\nexport function onConnectionChange(callback: (online: boolean) => void): () => void {\n  const handleOnline = () => callback(true)\n  const handleOffline = () => callback(false)\n\n  window.addEventListener('online', handleOnline)\n  window.addEventListener('offline', handleOffline)\n\n  return () => {\n    window.removeEventListener('online', handleOnline)\n    window.removeEventListener('offline', handleOffline)\n  }\n}\n\n// Error boundary utilities\nexport function logError(error: any, context?: string) {\n  console.error(`[${context || 'App'}] Error:`, error)\n  \n  // In production, you might want to send this to an error tracking service\n  if (process.env.NODE_ENV === 'production') {\n    // Example: Sentry.captureException(error, { tags: { context } })\n  }\n}\n\nexport function createErrorBoundaryHandler(context: string) {\n  return (error: any, errorInfo: any) => {\n    logError(error, context)\n    \n    // Show user-friendly error message\n    showErrorToast(error, 'Something went wrong')\n  }\n}\n\n// Multi-tenant error handling\nexport function handleMultiTenantError(error: any, agentId?: string): AppError {\n  const appError = handleApiError(error)\n  \n  // Add agent context to error\n  if (agentId) {\n    appError.details = {\n      ...appError.details,\n      agentId,\n      timestamp: new Date().toISOString()\n    }\n  }\n  \n  // Handle specific multi-tenant errors\n  if (appError.code === 'AGENT_ACCESS_DENIED') {\n    return new AuthorizationError('You can only access your own data')\n  }\n  \n  if (appError.code === 'WABA_NOT_CONFIGURED') {\n    return new WABAError('WhatsApp Business API is not configured for this agent')\n  }\n  \n  return appError\n}\n\n// WABA specific error handling\nexport function handleWABAError(error: any): WABAError {\n  const message = getErrorMessage(error)\n  \n  if (message.includes('invalid credentials')) {\n    return new WABAError('Invalid WABA credentials. Please check your API key and App ID.')\n  }\n  \n  if (message.includes('rate limit')) {\n    return new WABAError('WABA rate limit exceeded. Please try again later.')\n  }\n  \n  if (message.includes('template not approved')) {\n    return new WABAError('Message template is not approved. Please use an approved template.')\n  }\n  \n  return new WABAError(message)\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/api/client.ts"],"sourcesContent":["import axios, { type AxiosInstance, type AxiosRequestConfig, type AxiosResponse, type AxiosError } from 'axios'\nimport { toast } from 'sonner'\nimport { handleApiError, AuthenticationError, NetworkError, showErrorToast } from '@/lib/utils/errorHandling'\n\n// Environment-based API configuration\nconst getApiBaseUrl = () => {\n  if (typeof window !== 'undefined') {\n    // Client-side: use environment variable or detect from window location\n    return process.env.NEXT_PUBLIC_API_URL ||\n           (window.location.hostname === 'localhost'\n             ? 'http://localhost:8080'\n             : `${window.location.protocol}//${window.location.hostname}:8080`)\n  }\n  // Server-side: use environment variable or default\n  return process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080'\n}\n\nconst API_BASE_URL = getApiBaseUrl()\n\ninterface ApiError {\n  message: string\n  status?: number\n  code?: string\n  details?: any\n}\n\nclass ApiClient {\n  private client: AxiosInstance\n  private refreshPromise: Promise<string> | null = null\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      withCredentials: false,\n    })\n\n    this.setupInterceptors()\n  }\n\n  private setupInterceptors() {\n    // Request interceptor to add auth token and request ID\n    this.client.interceptors.request.use(\n      (config) => {\n        // Add auth token\n        const token = localStorage.getItem('auth_token')\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`\n        }\n\n        // Add request ID for tracing\n        config.headers['X-Request-ID'] = crypto.randomUUID()\n\n        // Add timestamp\n        config.headers['X-Request-Time'] = new Date().toISOString()\n\n        return config\n      },\n      (error) => {\n        return Promise.reject(this.normalizeError(error))\n      }\n    )\n\n    // Response interceptor for error handling and token refresh\n    this.client.interceptors.response.use(\n      (response: AxiosResponse) => {\n        // Log successful responses in development\n        if (process.env.NODE_ENV === 'development') {\n          console.log(`✅ ${response.config.method?.toUpperCase()} ${response.config.url}`, {\n            status: response.status,\n            data: response.data,\n          })\n        }\n        return response\n      },\n      async (error: AxiosError) => {\n        const originalRequest = error.config as AxiosRequestConfig & { _retry?: boolean }\n\n        // Handle 401 errors (unauthorized) with token refresh\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true\n\n          try {\n            // Prevent multiple refresh requests\n            if (!this.refreshPromise) {\n              this.refreshPromise = this.refreshToken()\n            }\n\n            const newToken = await this.refreshPromise\n            this.refreshPromise = null\n\n            if (newToken && originalRequest.headers) {\n              originalRequest.headers.Authorization = `Bearer ${newToken}`\n              return this.client(originalRequest)\n            }\n          } catch (refreshError) {\n            this.refreshPromise = null\n            this.handleAuthFailure()\n            return Promise.reject(this.normalizeError(refreshError as AxiosError))\n          }\n        }\n\n        // Handle network errors\n        if (!error.response) {\n          const networkError = this.createNetworkError(error)\n          this.showErrorToast(networkError, originalRequest)\n          return Promise.reject(networkError)\n        }\n\n        // Handle other errors\n        const normalizedError = this.normalizeError(error)\n        this.showErrorToast(normalizedError, originalRequest)\n\n        return Promise.reject(normalizedError)\n      }\n    )\n  }\n\n  private async refreshToken(): Promise<string> {\n    try {\n      const response = await this.client.post('/api/frontend-auth/refresh')\n      const newToken = response.data.token\n      localStorage.setItem('auth_token', newToken)\n      return newToken\n    } catch (error) {\n      throw error\n    }\n  }\n\n  private handleAuthFailure(): void {\n    localStorage.removeItem('auth_token')\n\n    // Only redirect if we're in the browser and not already on login page\n    if (typeof window !== 'undefined' && !window.location.pathname.includes('/auth/login')) {\n      window.location.href = '/auth/login'\n    }\n  }\n\n  private normalizeError(error: AxiosError): ApiError {\n    // Use the enhanced error handling utility\n    const appError = handleApiError(error)\n\n    return {\n      message: appError.message,\n      status: appError.status,\n      code: appError.code,\n      details: appError.details,\n    }\n  }\n\n  private createNetworkError(error: AxiosError): ApiError {\n    return {\n      message: 'Network error. Please check your connection and try again.',\n      code: 'NETWORK_ERROR',\n    }\n  }\n\n  private showErrorToast(error: ApiError, originalRequest?: AxiosRequestConfig): void {\n    // Don't show toast for certain endpoints\n    const silentEndpoints = ['/auth/me', '/auth/refresh', '/frontend-auth/refresh']\n    const isSilentEndpoint = silentEndpoints.some(endpoint =>\n      originalRequest?.url?.includes(endpoint)\n    )\n\n    if (!isSilentEndpoint && error.status && error.status >= 400) {\n      toast.error(error.message, {\n        id: `error-${error.status}-${originalRequest?.url}`, // Prevent duplicate toasts\n      })\n    }\n  }\n\n  private getErrorMessage(error: AxiosError): string {\n    const response = error.response\n\n    // Try to get message from response data\n    if (response?.data && typeof response.data === 'object') {\n      const data = response.data as any\n      if (data.message) return data.message\n      if (data.error) return data.error\n      if (data.detail) return data.detail\n    }\n\n    // Fallback to status-based messages\n    switch (response?.status) {\n      case 400:\n        return 'Bad request. Please check your input.'\n      case 401:\n        return 'Authentication required. Please log in.'\n      case 403:\n        return 'Access denied. You don\\'t have permission for this action.'\n      case 404:\n        return 'Resource not found.'\n      case 409:\n        return 'Conflict. The resource already exists or is in use.'\n      case 422:\n        return 'Validation error. Please check your input.'\n      case 429:\n        return 'Too many requests. Please try again later.'\n      case 500:\n        return 'Server error. Please try again later.'\n      case 502:\n        return 'Bad gateway. The server is temporarily unavailable.'\n      case 503:\n        return 'Service unavailable. Please try again later.'\n      case 504:\n        return 'Gateway timeout. The request took too long to process.'\n      default:\n        return error.message || 'An unexpected error occurred.'\n    }\n  }\n\n  // HTTP methods\n  async get<T = any>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\n    return this.client.get(url, config)\n  }\n\n  async post<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\n    return this.client.post(url, data, config)\n  }\n\n  async put<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\n    return this.client.put(url, data, config)\n  }\n\n  async patch<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\n    return this.client.patch(url, data, config)\n  }\n\n  async delete<T = any>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\n    return this.client.delete(url, config)\n  }\n\n  // File upload helper\n  async uploadFile(url: string, file: File, onProgress?: (progress: number) => void): Promise<AxiosResponse> {\n    const formData = new FormData()\n    formData.append('file', file)\n\n    return this.client.post(url, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: (progressEvent) => {\n        if (onProgress && progressEvent.total) {\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n          onProgress(progress)\n        }\n      },\n    })\n  }\n}\n\nexport const apiClient = new ApiClient()\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/auth/authApi.ts"],"sourcesContent":["import { apiClient } from '@/lib/api/client'\nimport type { User } from './AuthContext'\n\nexport interface LoginResponse {\n  token: string\n  user: User\n  expires_at: string\n}\n\nexport interface LoginRequest {\n  email: string\n  password: string\n}\n\nclass AuthApi {\n  async login(email: string, password: string): Promise<LoginResponse> {\n    const response = await apiClient.post('/api/frontend-auth/login', { email, password })\n    return response.data\n  }\n\n  async logout(): Promise<void> {\n    await apiClient.post('/api/frontend-auth/logout')\n  }\n\n  async getCurrentUser(): Promise<User> {\n    const response = await apiClient.get('/api/frontend-auth/me')\n    return response.data.data\n  }\n\n  async refreshToken(): Promise<LoginResponse> {\n    const response = await apiClient.post('/api/frontend-auth/refresh')\n    return response.data\n  }\n\n  async requestPasswordReset(email: string): Promise<void> {\n    await apiClient.post('/api/auth/forgot-password', { email })\n  }\n\n  async resetPassword(token: string, password: string): Promise<void> {\n    await apiClient.post('/api/auth/reset-password', { token, password })\n  }\n\n  async changePassword(currentPassword: string, newPassword: string): Promise<void> {\n    await apiClient.post('/api/frontend-auth/change-password', {\n      current_password: currentPassword,\n      new_password: newPassword\n    })\n  }\n\n  async updateProfile(data: Partial<User>): Promise<User> {\n    const response = await apiClient.patch('/api/frontend-auth/profile', data)\n    return response.data.data\n  }\n\n  // OAuth integration endpoints\n  async initiateGoogleAuth(agentId: string): Promise<{ auth_url: string }> {\n    const response = await apiClient.get(`/api/auth/google?agentId=${agentId}`)\n    return response.data\n  }\n\n  async initiateZoomAuth(agentId: string): Promise<{ auth_url: string }> {\n    const response = await apiClient.get(`/api/auth/zoom?agentId=${agentId}`)\n    return response.data\n  }\n\n  async getOAuthStatus(agentId: string): Promise<{\n    google_connected: boolean\n    zoom_connected: boolean\n    google_email?: string\n    zoom_user_id?: string\n  }> {\n    const response = await apiClient.get(`/api/auth/oauth-status/${agentId}`)\n    return response.data\n  }\n}\n\nexport const authApi = new AuthApi()\n"],"names":[],"mappings":";;;AAAA;;AAcA,MAAM;IACJ,MAAM,MAAM,KAAa,EAAE,QAAgB,EAA0B;QACnE,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,IAAI,CAAC,4BAA4B;YAAE;YAAO;QAAS;QACpF,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,SAAwB;QAC5B,MAAM,oHAAA,CAAA,YAAS,CAAC,IAAI,CAAC;IACvB;IAEA,MAAM,iBAAgC;QACpC,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,GAAG,CAAC;QACrC,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B;IAEA,MAAM,eAAuC;QAC3C,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,IAAI,CAAC;QACtC,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,qBAAqB,KAAa,EAAiB;QACvD,MAAM,oHAAA,CAAA,YAAS,CAAC,IAAI,CAAC,6BAA6B;YAAE;QAAM;IAC5D;IAEA,MAAM,cAAc,KAAa,EAAE,QAAgB,EAAiB;QAClE,MAAM,oHAAA,CAAA,YAAS,CAAC,IAAI,CAAC,4BAA4B;YAAE;YAAO;QAAS;IACrE;IAEA,MAAM,eAAe,eAAuB,EAAE,WAAmB,EAAiB;QAChF,MAAM,oHAAA,CAAA,YAAS,CAAC,IAAI,CAAC,sCAAsC;YACzD,kBAAkB;YAClB,cAAc;QAChB;IACF;IAEA,MAAM,cAAc,IAAmB,EAAiB;QACtD,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,KAAK,CAAC,8BAA8B;QACrE,OAAO,SAAS,IAAI,CAAC,IAAI;IAC3B;IAEA,8BAA8B;IAC9B,MAAM,mBAAmB,OAAe,EAAiC;QACvE,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,yBAAyB,EAAE,SAAS;QAC1E,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,iBAAiB,OAAe,EAAiC;QACrE,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,uBAAuB,EAAE,SAAS;QACxE,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,eAAe,OAAe,EAKjC;QACD,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,uBAAuB,EAAE,SAAS;QACxE,OAAO,SAAS,IAAI;IACtB;AACF;AAEO,MAAM,UAAU,IAAI","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/auth/AuthContext.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { createContext, useContext, useEffect, useState, useCallback, useMemo, type ReactNode } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { authApi } from './authApi'\r\nimport { toast } from 'sonner'\r\n\r\nexport interface User {\r\n  id: string\r\n  email: string\r\n  full_name: string\r\n  role: 'agent' | 'admin'\r\n  organization_id?: string\r\n  status: 'active' | 'inactive' | 'busy'\r\n  avatar_url?: string\r\n  waba_phone_number?: string\r\n  permissions: string[]\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n  login: (email: string, password: string) => Promise<void>\r\n  logout: () => Promise<void>\r\n  refreshUser: () => Promise<void>\r\n  isAuthenticated: boolean\r\n  hasPermission: (permission: string) => boolean\r\n  isAgent: boolean\r\n  isAdmin: boolean\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport function AuthProvider({ children }: AuthProviderProps) {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [tokenRefreshTimer, setTokenRefreshTimer] = useState<NodeJS.Timeout | null>(null)\r\n  const router = useRouter()\r\n\r\n  // Check for existing session on mount\r\n  useEffect(() => {\r\n    checkAuthStatus()\r\n  }, [])\r\n\r\n  // Cleanup timer on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (tokenRefreshTimer) {\r\n        clearTimeout(tokenRefreshTimer)\r\n      }\r\n    }\r\n  }, [tokenRefreshTimer])\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      // Check if we're on the client side\r\n      if (typeof window === 'undefined') {\r\n        setLoading(false)\r\n        return\r\n      }\r\n\r\n      const token = localStorage.getItem('auth_token')\r\n      if (!token) {\r\n        setLoading(false)\r\n        return\r\n      }\r\n\r\n      // Check if token is expired\r\n      if (isTokenExpired(token)) {\r\n        try {\r\n          await refreshToken()\r\n        } catch (refreshError) {\r\n          console.error('Token refresh failed:', refreshError)\r\n          await logout()\r\n          return\r\n        }\r\n      }\r\n\r\n      const userData = await authApi.getCurrentUser()\r\n      setUser(userData)\r\n      setupTokenRefresh(token)\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error)\r\n      localStorage.removeItem('auth_token')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const isTokenExpired = (token: string): boolean => {\r\n    try {\r\n      const parts = token.split('.')\r\n      if (parts.length !== 3) return true\r\n      const payload = JSON.parse(atob(parts[1]))\r\n      const currentTime = Date.now() / 1000\r\n      // Check if token expires within 5 minutes\r\n      return payload.exp < (currentTime + 300)\r\n    } catch {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const setupTokenRefresh = (token: string) => {\r\n    try {\r\n      const parts = token.split('.')\r\n      if (parts.length !== 3) return\r\n      const payload = JSON.parse(atob(parts[1]))\r\n      const currentTime = Date.now() / 1000\r\n      const timeUntilRefresh = (payload.exp - currentTime - 300) * 1000 // Refresh 5 minutes before expiry\r\n\r\n      if (timeUntilRefresh > 0) {\r\n        if (tokenRefreshTimer) {\r\n          clearTimeout(tokenRefreshTimer)\r\n        }\r\n\r\n        const timer = setTimeout(async () => {\r\n          try {\r\n            await refreshToken()\r\n          } catch (error) {\r\n            console.error('Automatic token refresh failed:', error)\r\n            await logout()\r\n          }\r\n        }, timeUntilRefresh)\r\n\r\n        setTokenRefreshTimer(timer)\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to setup token refresh:', error)\r\n    }\r\n  }\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await authApi.refreshToken()\r\n      localStorage.setItem('auth_token', response.token)\r\n      setUser(response.user)\r\n      setupTokenRefresh(response.token)\r\n      return response.token\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  const login = useCallback(async (email: string, password: string) => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await authApi.login(email, password)\r\n\r\n      localStorage.setItem('auth_token', response.token)\r\n      setUser(response.user)\r\n      setupTokenRefresh(response.token)\r\n\r\n      toast.success('Welcome back!', {\r\n        description: `Logged in as ${response.user.full_name}`,\r\n      })\r\n\r\n      // Redirect based on role\r\n      if (response.user.role === 'admin') {\r\n        router.push('/admin/dashboard')\r\n      } else {\r\n        router.push('/agent/dashboard')\r\n      }\r\n    } catch (error: any) {\r\n      toast.error('Login failed', {\r\n        description: error.message || 'Please check your credentials and try again',\r\n      })\r\n      throw error\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [router])\r\n\r\n  const logout = useCallback(async () => {\r\n    try {\r\n      await authApi.logout()\r\n    } catch (error) {\r\n      console.error('Logout error:', error)\r\n    } finally {\r\n      // Clear token refresh timer\r\n      if (tokenRefreshTimer) {\r\n        clearTimeout(tokenRefreshTimer)\r\n        setTokenRefreshTimer(null)\r\n      }\r\n\r\n      localStorage.removeItem('auth_token')\r\n      setUser(null)\r\n      router.push('/auth/login')\r\n      toast.success('Logged out successfully', {\r\n        description: 'You have been securely logged out',\r\n      })\r\n    }\r\n  }, [router, tokenRefreshTimer])\r\n\r\n  const refreshUser = useCallback(async () => {\r\n    try {\r\n      const userData = await authApi.getCurrentUser()\r\n      setUser(userData)\r\n    } catch (error) {\r\n      console.error('Failed to refresh user:', error)\r\n      logout()\r\n    }\r\n  }, [logout])\r\n\r\n  const hasPermission = useCallback((permission: string): boolean => {\r\n    if (!user) return false\r\n    return user.permissions.includes(permission) || user.role === 'admin'\r\n  }, [user])\r\n\r\n  const value: AuthContextType = useMemo(() => ({\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    refreshUser,\r\n    isAuthenticated: !!user,\r\n    hasPermission,\r\n    isAgent: user?.role === 'agent',\r\n    isAdmin: user?.role === 'admin',\r\n  }), [user, loading, login, logout, refreshUser, hasPermission])\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 883, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/socket/SocketContext.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { createContext, useContext, useEffect, useState, type ReactNode } from 'react'\r\nimport { io, Socket } from 'socket.io-client'\r\nimport { useAuth } from '@/lib/auth/AuthContext'\r\nimport { toast } from 'sonner'\r\n\r\ninterface SocketContextType {\r\n  socket: Socket | null\r\n  connected: boolean\r\n  joinRoom: (room: string) => void\r\n  leaveRoom: (room: string) => void\r\n  emit: (event: string, data: any) => void\r\n}\r\n\r\nconst SocketContext = createContext<SocketContextType | undefined>(undefined)\r\n\r\nexport function useSocket() {\r\n  const context = useContext(SocketContext)\r\n  if (context === undefined) {\r\n    throw new Error('useSocket must be used within a SocketProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface SocketProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport function SocketProvider({ children }: SocketProviderProps) {\r\n  const [socket, setSocket] = useState<Socket | null>(null)\r\n  const [connected, setConnected] = useState(false)\r\n  const [mounted, setMounted] = useState(false)\r\n  const { user, isAuthenticated } = useAuth()\r\n\r\n  useEffect(() => {\r\n    setMounted(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // Only initialize socket on client side\r\n    if (!mounted || typeof window === 'undefined') return\r\n\r\n    if (!isAuthenticated || !user) {\r\n      if (socket) {\r\n        socket.disconnect()\r\n        setSocket(null)\r\n        setConnected(false)\r\n      }\r\n      return\r\n    }\r\n\r\n    // Initialize socket connection\r\n    const WS_URL = process.env.NEXT_PUBLIC_WS_URL || 'ws://localhost:8080'\r\n    const token = localStorage.getItem('auth_token')\r\n\r\n    const newSocket = io(WS_URL, {\r\n      auth: {\r\n        token,\r\n        userId: user.id,\r\n        role: user.role,\r\n      },\r\n      transports: ['websocket', 'polling'],\r\n      timeout: 20000,\r\n    })\r\n\r\n    // Connection event handlers\r\n    newSocket.on('connect', () => {\r\n      console.log('Socket connected:', newSocket.id)\r\n      setConnected(true)\r\n      \r\n      // Join user-specific room\r\n      newSocket.emit('join_user_room', user.id)\r\n      \r\n      // Join role-specific room\r\n      if (user.role === 'agent') {\r\n        newSocket.emit('join_agent_room', user.id)\r\n      } else if (user.role === 'admin') {\r\n        newSocket.emit('join_admin_room', user.organization_id)\r\n      }\r\n    })\r\n\r\n    newSocket.on('disconnect', (reason) => {\r\n      console.log('Socket disconnected:', reason)\r\n      setConnected(false)\r\n    })\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error)\r\n      setConnected(false)\r\n    })\r\n\r\n    // Real-time event handlers\r\n    newSocket.on('new_message', (data) => {\r\n      // Handle new message notifications\r\n      if (data.agentId === user.id || user.role === 'admin') {\r\n        toast.success(`New message from ${data.leadName || data.phoneNumber}`)\r\n      }\r\n    })\r\n\r\n    newSocket.on('lead_status_changed', (data) => {\r\n      // Handle lead status changes\r\n      if (data.agentId === user.id || user.role === 'admin') {\r\n        toast.success(`Lead ${data.leadName} status changed to ${data.status}`)\r\n      }\r\n    })\r\n\r\n    newSocket.on('appointment_booked', (data) => {\r\n      // Handle appointment bookings\r\n      if (data.agentId === user.id || user.role === 'admin') {\r\n        toast.success(`New appointment booked with ${data.leadName}`)\r\n      }\r\n    })\r\n\r\n    newSocket.on('system_notification', (data) => {\r\n      // Handle system-wide notifications\r\n      switch (data.type) {\r\n        case 'info':\r\n          toast.success(data.message)\r\n          break\r\n        case 'warning':\r\n          toast.error(data.message)\r\n          break\r\n        case 'error':\r\n          toast.error(data.message)\r\n          break\r\n        default:\r\n          toast(data.message)\r\n      }\r\n    })\r\n\r\n    newSocket.on('agent_status_changed', (data) => {\r\n      // Handle agent status changes (for admin)\r\n      if (user.role === 'admin') {\r\n        toast(`Agent ${data.agentName} is now ${data.status}`)\r\n      }\r\n    })\r\n\r\n    setSocket(newSocket)\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      newSocket.disconnect()\r\n      setSocket(null)\r\n      setConnected(false)\r\n    }\r\n  }, [isAuthenticated, user])\r\n\r\n  const joinRoom = (room: string) => {\r\n    if (socket && connected) {\r\n      socket.emit('join_room', room)\r\n    }\r\n  }\r\n\r\n  const leaveRoom = (room: string) => {\r\n    if (socket && connected) {\r\n      socket.emit('leave_room', room)\r\n    }\r\n  }\r\n\r\n  const emit = (event: string, data: any) => {\r\n    if (socket && connected) {\r\n      socket.emit(event, data)\r\n    }\r\n  }\r\n\r\n  const value: SocketContextType = {\r\n    socket,\r\n    connected,\r\n    joinRoom,\r\n    leaveRoom,\r\n    emit,\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;;;AALA;;;;;;AAeA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAiC;AAE5D,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAMO,SAAS,eAAe,EAAE,QAAQ,EAAuB;IAC9D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAwC;QACxC,wCAA+C;;;QAW/C,+BAA+B;QAC/B,MAAM;QACN,MAAM;QAEN,MAAM;IA0FR,GAAG;QAAC;QAAiB;KAAK;IAE1B,MAAM,WAAW,CAAC;QAChB,IAAI,UAAU,WAAW;YACvB,OAAO,IAAI,CAAC,aAAa;QAC3B;IACF;IAEA,MAAM,YAAY,CAAC;QACjB,IAAI,UAAU,WAAW;YACvB,OAAO,IAAI,CAAC,cAAc;QAC5B;IACF;IAEA,MAAM,OAAO,CAAC,OAAe;QAC3B,IAAI,UAAU,WAAW;YACvB,OAAO,IAAI,CAAC,OAAO;QACrB;IACF;IAEA,MAAM,QAA2B;QAC/B;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;kBAC5B;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 967, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/api/services/integrationsApi.ts"],"sourcesContent":["import { apiClient } from '../client'\n\nexport interface WABAIntegration {\n  phoneNumber?: string\n  displayName?: string\n  status: 'connected' | 'disconnected' | 'error' | 'pending'\n  apiKey?: string\n  appId?: string\n  lastSync?: string\n  errorMessage?: string\n  qrCode?: string\n  webhookUrl?: string\n  templates: Array<{\n    id: string\n    name: string\n    category: string\n    status: 'approved' | 'pending' | 'rejected'\n    language: string\n  }>\n}\n\nexport interface GoogleIntegration {\n  email?: string\n  status: 'connected' | 'disconnected' | 'error'\n  calendarId?: string\n  lastSync?: string\n  errorMessage?: string\n  permissions: string[]\n}\n\nexport interface ZoomIntegration {\n  userId?: string\n  email?: string\n  personalMeetingId?: string\n  status: 'connected' | 'disconnected' | 'error'\n  lastSync?: string\n  errorMessage?: string\n  meetingSettings?: {\n    autoRecord: boolean\n    waitingRoom: boolean\n    joinBeforeHost: boolean\n  }\n}\n\nexport interface MetaBusinessIntegration {\n  businessId?: string\n  businessName?: string\n  status: 'connected' | 'disconnected' | 'error'\n  adAccountId?: string\n  pageId?: string\n  lastSync?: string\n  errorMessage?: string\n  permissions: string[]\n}\n\nexport interface IntegrationStatus {\n  waba: WABAIntegration\n  google: GoogleIntegration\n  zoom: ZoomIntegration\n  metaBusiness: MetaBusinessIntegration\n}\n\nexport interface ConnectWABARequest {\n  phoneNumber: string\n  displayName?: string\n  apiKey: string\n  appId: string\n}\n\nexport interface UpdateWABARequest {\n  displayName?: string\n  apiKey?: string\n  appId?: string\n}\n\nclass IntegrationsApi {\n  /**\n   * Get all integration statuses for an agent\n   */\n  async getIntegrationStatus(agentId?: string): Promise<IntegrationStatus> {\n    const response = await apiClient.get('/api/dashboard/integrations/status', {\n      params: { agentId }\n    })\n    return response.data.data\n  }\n\n  /**\n   * Get WABA integration details\n   */\n  async getWABAIntegration(agentId?: string): Promise<WABAIntegration> {\n    const response = await apiClient.get('/api/dashboard/integrations/waba', {\n      params: { agentId }\n    })\n    return response.data.data\n  }\n\n  /**\n   * Connect WABA integration\n   */\n  async connectWABA(request: ConnectWABARequest): Promise<WABAIntegration> {\n    const response = await apiClient.post('/api/integrations/waba/connect', request)\n    return response.data.data\n  }\n\n  /**\n   * Update WABA integration\n   */\n  async updateWABA(request: UpdateWABARequest): Promise<WABAIntegration> {\n    const response = await apiClient.patch('/api/integrations/waba', request)\n    return response.data.data\n  }\n\n  /**\n   * Disconnect WABA integration\n   */\n  async disconnectWABA(): Promise<void> {\n    await apiClient.post('/api/integrations/waba/disconnect')\n  }\n\n  /**\n   * Test WABA connection\n   */\n  async testWABAConnection(agentId?: string): Promise<{\n    success: boolean\n    message: string\n    details?: any\n  }> {\n    const response = await apiClient.post('/api/integrations/waba/test', {\n      agentId\n    })\n    return response.data.data\n  }\n\n  /**\n   * Get WABA QR code for setup\n   */\n  async getWABAQRCode(): Promise<{\n    qrCode: string\n    setupUrl: string\n    expiresAt: string\n  }> {\n    const response = await apiClient.get('/api/integrations/waba/qr-code')\n    return response.data.data\n  }\n\n  /**\n   * Get Google Calendar integration\n   */\n  async getGoogleIntegration(agentId?: string): Promise<GoogleIntegration> {\n    const response = await apiClient.get('/api/integrations/google', {\n      params: { agentId }\n    })\n    return response.data.data\n  }\n\n  /**\n   * Get Google OAuth URL\n   */\n  async getGoogleAuthUrl(agentId?: string): Promise<{\n    authUrl: string\n    state: string\n  }> {\n    const response = await apiClient.get('/api/auth/google', {\n      params: { agentId }\n    })\n    return response.data\n  }\n\n  /**\n   * Disconnect Google integration\n   */\n  async disconnectGoogle(): Promise<void> {\n    await apiClient.post('/api/integrations/google/disconnect')\n  }\n\n  /**\n   * Test Google Calendar connection\n   */\n  async testGoogleConnection(agentId?: string): Promise<{\n    success: boolean\n    message: string\n    calendarCount?: number\n    lastEvent?: string\n  }> {\n    const response = await apiClient.post('/api/integrations/google/test', {\n      agentId\n    })\n    return response.data.data\n  }\n\n  /**\n   * Get Zoom integration\n   */\n  async getZoomIntegration(agentId?: string): Promise<ZoomIntegration> {\n    const response = await apiClient.get('/api/integrations/zoom', {\n      params: { agentId }\n    })\n    return response.data.data\n  }\n\n  /**\n   * Get Zoom OAuth URL\n   */\n  async getZoomAuthUrl(agentId?: string): Promise<{\n    authUrl: string\n    state: string\n  }> {\n    const response = await apiClient.get('/api/auth/zoom', {\n      params: { agentId }\n    })\n    return response.data\n  }\n\n  /**\n   * Disconnect Zoom integration\n   */\n  async disconnectZoom(): Promise<void> {\n    await apiClient.post('/api/integrations/zoom/disconnect')\n  }\n\n  /**\n   * Test Zoom connection\n   */\n  async testZoomConnection(agentId?: string): Promise<{\n    success: boolean\n    message: string\n    meetingCapability?: boolean\n    personalMeetingId?: string\n  }> {\n    const response = await apiClient.post('/api/integrations/zoom/test', {\n      agentId\n    })\n    return response.data.data\n  }\n\n  /**\n   * Update Zoom meeting settings\n   */\n  async updateZoomSettings(settings: {\n    autoRecord?: boolean\n    waitingRoom?: boolean\n    joinBeforeHost?: boolean\n  }): Promise<ZoomIntegration> {\n    const response = await apiClient.patch('/api/integrations/zoom/settings', settings)\n    return response.data.data\n  }\n\n  /**\n   * Get Meta Business integration\n   */\n  async getMetaBusinessIntegration(agentId?: string): Promise<MetaBusinessIntegration> {\n    const response = await apiClient.get('/api/integrations/meta', {\n      params: { agentId }\n    })\n    return response.data.data\n  }\n\n  /**\n   * Get Meta Business OAuth URL\n   */\n  async getMetaAuthUrl(): Promise<{\n    authUrl: string\n    state: string\n  }> {\n    const response = await apiClient.get('/api/integrations/meta/auth-url')\n    return response.data\n  }\n\n  /**\n   * Disconnect Meta Business integration\n   */\n  async disconnectMeta(): Promise<void> {\n    await apiClient.post('/api/integrations/meta/disconnect')\n  }\n\n  /**\n   * Sync all integrations\n   */\n  async syncAllIntegrations(agentId?: string): Promise<{\n    waba: { success: boolean; message: string }\n    google: { success: boolean; message: string }\n    zoom: { success: boolean; message: string }\n    meta: { success: boolean; message: string }\n  }> {\n    const response = await apiClient.post('/api/integrations/sync-all', {\n      agentId\n    })\n    return response.data.data\n  }\n\n  /**\n   * Get integration health check\n   */\n  async getHealthCheck(agentId?: string): Promise<{\n    overall: 'healthy' | 'warning' | 'error'\n    integrations: {\n      waba: { status: string; issues?: string[] }\n      google: { status: string; issues?: string[] }\n      zoom: { status: string; issues?: string[] }\n      meta: { status: string; issues?: string[] }\n    }\n    recommendations: string[]\n  }> {\n    const response = await apiClient.get('/api/integrations/health', {\n      params: { agentId }\n    })\n    return response.data.data\n  }\n}\n\nexport const integrationsApi = new IntegrationsApi()\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/contexts/WABAContext.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { createContext, useContext, useEffect, useState, useCallback, type ReactNode } from 'react'\r\nimport { useAuth } from '@/lib/auth/AuthContext'\r\nimport { integrationsApi, type WABAIntegration } from '@/lib/api/services/integrationsApi'\r\nimport { toast } from 'sonner'\r\n\r\ninterface WABATemplate {\r\n  id: string\r\n  name: string\r\n  category: 'MARKETING' | 'UTILITY' | 'AUTHENTICATION'\r\n  status: 'approved' | 'pending' | 'rejected'\r\n  language: string\r\n  content: string\r\n  parameters?: Array<{\r\n    name: string\r\n    type: string\r\n    required: boolean\r\n  }>\r\n}\r\n\r\ninterface WABAContextType {\r\n  wabaConfig: WABAIntegration | null\r\n  templates: WABATemplate[]\r\n  loading: boolean\r\n  error: string | null\r\n  \r\n  // WABA Management\r\n  connectWABA: (config: {\r\n    phoneNumber: string\r\n    displayName?: string\r\n    apiKey: string\r\n    appId: string\r\n  }) => Promise<void>\r\n  updateWABA: (config: {\r\n    displayName?: string\r\n    apiKey?: string\r\n    appId?: string\r\n  }) => Promise<void>\r\n  disconnectWABA: () => Promise<void>\r\n  testConnection: () => Promise<boolean>\r\n  \r\n  // Template Management\r\n  refreshTemplates: () => Promise<void>\r\n  getTemplate: (templateId: string) => WABATemplate | undefined\r\n  \r\n  // Status Monitoring\r\n  refreshStatus: () => Promise<void>\r\n  isConnected: boolean\r\n  hasError: boolean\r\n}\r\n\r\nconst WABAContext = createContext<WABAContextType | undefined>(undefined)\r\n\r\nexport function useWABA() {\r\n  const context = useContext(WABAContext)\r\n  if (context === undefined) {\r\n    throw new Error('useWABA must be used within a WABAProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface WABAProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport function WABAProvider({ children }: WABAProviderProps) {\r\n  const [wabaConfig, setWabaConfig] = useState<WABAIntegration | null>(null)\r\n  const [templates, setTemplates] = useState<WABATemplate[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const { user, isAuthenticated } = useAuth()\r\n\r\n  // Load WABA configuration when user changes\r\n  useEffect(() => {\r\n    if (isAuthenticated && user) {\r\n      loadWABAConfig()\r\n    } else {\r\n      setWabaConfig(null)\r\n      setTemplates([])\r\n      setLoading(false)\r\n    }\r\n  }, [isAuthenticated, user])\r\n\r\n  const loadWABAConfig = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const config = await integrationsApi.getWABAIntegration(user?.id)\r\n      setWabaConfig(config)\r\n      \r\n      // Load templates if WABA is connected\r\n      if (config.status === 'connected' && config.templates) {\r\n        setTemplates(config.templates.map(t => ({\r\n          id: t.id,\r\n          name: t.name,\r\n          category: t.category as 'MARKETING' | 'UTILITY' | 'AUTHENTICATION',\r\n          status: t.status as 'approved' | 'pending' | 'rejected',\r\n          language: t.language,\r\n          content: '', // Will be loaded separately if needed\r\n        })))\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Failed to load WABA config:', err)\r\n      setError(err.message || 'Failed to load WABA configuration')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const connectWABA = useCallback(async (config: {\r\n    phoneNumber: string\r\n    displayName?: string\r\n    apiKey: string\r\n    appId: string\r\n  }) => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const result = await integrationsApi.connectWABA(config)\r\n      setWabaConfig(result)\r\n      \r\n      toast.success('WABA Connected', {\r\n        description: `Successfully connected WhatsApp Business API for ${config.phoneNumber}`,\r\n      })\r\n      \r\n      // Refresh templates after connection\r\n      await refreshTemplates()\r\n    } catch (err: any) {\r\n      const errorMessage = err.message || 'Failed to connect WABA'\r\n      setError(errorMessage)\r\n      toast.error('WABA Connection Failed', {\r\n        description: errorMessage,\r\n      })\r\n      throw err\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const updateWABA = useCallback(async (config: {\r\n    displayName?: string\r\n    apiKey?: string\r\n    appId?: string\r\n  }) => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const result = await integrationsApi.updateWABA(config)\r\n      setWabaConfig(result)\r\n      \r\n      toast.success('WABA Updated', {\r\n        description: 'WhatsApp Business API configuration updated successfully',\r\n      })\r\n    } catch (err: any) {\r\n      const errorMessage = err.message || 'Failed to update WABA'\r\n      setError(errorMessage)\r\n      toast.error('WABA Update Failed', {\r\n        description: errorMessage,\r\n      })\r\n      throw err\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const disconnectWABA = useCallback(async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      await integrationsApi.disconnectWABA()\r\n      setWabaConfig(null)\r\n      setTemplates([])\r\n      \r\n      toast.success('WABA Disconnected', {\r\n        description: 'WhatsApp Business API has been disconnected',\r\n      })\r\n    } catch (err: any) {\r\n      const errorMessage = err.message || 'Failed to disconnect WABA'\r\n      setError(errorMessage)\r\n      toast.error('WABA Disconnect Failed', {\r\n        description: errorMessage,\r\n      })\r\n      throw err\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const testConnection = useCallback(async (): Promise<boolean> => {\r\n    try {\r\n      const result = await integrationsApi.testWABAConnection(user?.id)\r\n      \r\n      if (result.success) {\r\n        toast.success('WABA Connection Test', {\r\n          description: result.message,\r\n        })\r\n        return true\r\n      } else {\r\n        toast.error('WABA Connection Test Failed', {\r\n          description: result.message,\r\n        })\r\n        return false\r\n      }\r\n    } catch (err: any) {\r\n      toast.error('WABA Connection Test Failed', {\r\n        description: err.message || 'Failed to test WABA connection',\r\n      })\r\n      return false\r\n    }\r\n  }, [user?.id])\r\n\r\n  const refreshTemplates = useCallback(async () => {\r\n    try {\r\n      if (!wabaConfig || wabaConfig.status !== 'connected') {\r\n        return\r\n      }\r\n      \r\n      const config = await integrationsApi.getWABAIntegration(user?.id)\r\n      if (config.templates) {\r\n        setTemplates(config.templates.map(t => ({\r\n          id: t.id,\r\n          name: t.name,\r\n          category: t.category as 'MARKETING' | 'UTILITY' | 'AUTHENTICATION',\r\n          status: t.status as 'approved' | 'pending' | 'rejected',\r\n          language: t.language,\r\n          content: '',\r\n        })))\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Failed to refresh templates:', err)\r\n      toast.error('Failed to refresh templates', {\r\n        description: err.message,\r\n      })\r\n    }\r\n  }, [wabaConfig, user?.id])\r\n\r\n  const getTemplate = useCallback((templateId: string): WABATemplate | undefined => {\r\n    return templates.find(t => t.id === templateId)\r\n  }, [templates])\r\n\r\n  const refreshStatus = useCallback(async () => {\r\n    await loadWABAConfig()\r\n  }, [])\r\n\r\n  const value: WABAContextType = {\r\n    wabaConfig,\r\n    templates,\r\n    loading,\r\n    error,\r\n    connectWABA,\r\n    updateWABA,\r\n    disconnectWABA,\r\n    testConnection,\r\n    refreshTemplates,\r\n    getTemplate,\r\n    refreshStatus,\r\n    isConnected: wabaConfig?.status === 'connected',\r\n    hasError: !!error || wabaConfig?.status === 'error',\r\n  }\r\n\r\n  return (\r\n    <WABAContext.Provider value={value}>\r\n      {children}\r\n    </WABAContext.Provider>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1355, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/contexts/AgentContext.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { createContext, useContext, useEffect, useState, useCallback, type ReactNode } from 'react'\r\nimport { useAuth } from '@/lib/auth/AuthContext'\r\nimport { apiClient } from '@/lib/api/client'\r\n\r\nexport interface AgentConfig {\r\n  id: string\r\n  fullName: string\r\n  email: string\r\n  organizationId: string\r\n  \r\n  // WABA Configuration\r\n  wabaPhoneNumber?: string\r\n  wabaDisplayName?: string\r\n  botName: string\r\n  \r\n  // Integration Status\r\n  googleConnected: boolean\r\n  zoomConnected: boolean\r\n  wabaConnected: boolean\r\n  \r\n  // Working Configuration\r\n  workingHours: {\r\n    start: number\r\n    end: number\r\n    days: number[]\r\n  }\r\n  timezone: string\r\n  \r\n  // Bot Customization\r\n  botPersonalityConfig: Record<string, any>\r\n  customResponses: Record<string, any>\r\n  \r\n  // Performance Metrics\r\n  totalLeads: number\r\n  activeConversations: number\r\n  conversionRate: number\r\n  averageResponseTime: number\r\n}\r\n\r\nexport interface OrganizationConfig {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  subscriptionTier: 'basic' | 'pro' | 'enterprise'\r\n  settings: Record<string, any>\r\n  \r\n  // Multi-tenant settings\r\n  maxAgents: number\r\n  currentAgents: number\r\n  features: string[]\r\n}\r\n\r\ninterface AgentContextType {\r\n  agentConfig: AgentConfig | null\r\n  organizationConfig: OrganizationConfig | null\r\n  loading: boolean\r\n  error: string | null\r\n  \r\n  // Agent Management\r\n  updateAgentConfig: (updates: Partial<AgentConfig>) => Promise<void>\r\n  refreshAgentConfig: () => Promise<void>\r\n  \r\n  // Bot Customization\r\n  updateBotPersonality: (config: Record<string, any>) => Promise<void>\r\n  updateCustomResponses: (responses: Record<string, any>) => Promise<void>\r\n  \r\n  // Working Hours\r\n  updateWorkingHours: (hours: {\r\n    start: number\r\n    end: number\r\n    days: number[]\r\n  }) => Promise<void>\r\n  \r\n  // Utility functions\r\n  isWithinWorkingHours: (date?: Date) => boolean\r\n  getNextAvailableSlot: () => Date | null\r\n  canCreateNewConversation: () => boolean\r\n}\r\n\r\nconst AgentContext = createContext<AgentContextType | undefined>(undefined)\r\n\r\nexport function useAgent() {\r\n  const context = useContext(AgentContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAgent must be used within an AgentProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface AgentProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport function AgentProvider({ children }: AgentProviderProps) {\r\n  const [agentConfig, setAgentConfig] = useState<AgentConfig | null>(null)\r\n  const [organizationConfig, setOrganizationConfig] = useState<OrganizationConfig | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const { user, isAuthenticated } = useAuth()\r\n\r\n  // Load agent configuration when user changes\r\n  useEffect(() => {\r\n    if (isAuthenticated && user) {\r\n      loadAgentConfig()\r\n    } else {\r\n      setAgentConfig(null)\r\n      setOrganizationConfig(null)\r\n      setLoading(false)\r\n    }\r\n  }, [isAuthenticated, user])\r\n\r\n  const loadAgentConfig = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      // Load agent configuration\r\n      const agentResponse = await apiClient.get(`/api/agents/${user?.id}`)\r\n      const agentData = agentResponse.data.data\r\n      \r\n      setAgentConfig({\r\n        id: agentData.id,\r\n        fullName: agentData.full_name,\r\n        email: agentData.email,\r\n        organizationId: agentData.organization_id,\r\n        wabaPhoneNumber: agentData.waba_phone_number,\r\n        wabaDisplayName: agentData.waba_display_name,\r\n        botName: agentData.bot_name || 'Doro',\r\n        googleConnected: !!agentData.google_email,\r\n        zoomConnected: !!agentData.zoom_user_id,\r\n        wabaConnected: !!agentData.waba_phone_number,\r\n        workingHours: agentData.working_hours || {\r\n          start: 9,\r\n          end: 18,\r\n          days: [1, 2, 3, 4, 5]\r\n        },\r\n        timezone: agentData.timezone || 'Asia/Singapore',\r\n        botPersonalityConfig: agentData.bot_personality_config || {},\r\n        customResponses: agentData.custom_responses || {},\r\n        totalLeads: agentData.total_leads || 0,\r\n        activeConversations: agentData.active_conversations || 0,\r\n        conversionRate: agentData.conversion_rate || 0,\r\n        averageResponseTime: agentData.average_response_time || 0,\r\n      })\r\n      \r\n      // Set organization configuration from agent data (if available)\r\n      if (user?.role === 'admin' && agentData.organization_id) {\r\n        // For now, set basic organization config from agent data\r\n        // In the future, we can add a dedicated organization endpoint if needed\r\n        setOrganizationConfig({\r\n          id: agentData.organization_id,\r\n          name: 'Default Organization', // Could be enhanced with actual org name\r\n          slug: 'default',\r\n          subscriptionTier: 'basic',\r\n          settings: {},\r\n          maxAgents: 10,\r\n          currentAgents: 1,\r\n          features: [],\r\n        })\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Failed to load agent config:', err)\r\n      setError(err.message || 'Failed to load agent configuration')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateAgentConfig = useCallback(async (updates: Partial<AgentConfig>) => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const response = await apiClient.patch(`/api/agents/${user?.id}`, updates)\r\n      const updatedConfig = response.data.data\r\n      \r\n      setAgentConfig(prev => prev ? { ...prev, ...updatedConfig } : null)\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to update agent configuration')\r\n      throw err\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [user?.id])\r\n\r\n  const refreshAgentConfig = useCallback(async () => {\r\n    await loadAgentConfig()\r\n  }, [])\r\n\r\n  const updateBotPersonality = useCallback(async (config: Record<string, any>) => {\r\n    await updateAgentConfig({ botPersonalityConfig: config })\r\n  }, [updateAgentConfig])\r\n\r\n  const updateCustomResponses = useCallback(async (responses: Record<string, any>) => {\r\n    await updateAgentConfig({ customResponses: responses })\r\n  }, [updateAgentConfig])\r\n\r\n  const updateWorkingHours = useCallback(async (hours: {\r\n    start: number\r\n    end: number\r\n    days: number[]\r\n  }) => {\r\n    await updateAgentConfig({ workingHours: hours })\r\n  }, [updateAgentConfig])\r\n\r\n  const isWithinWorkingHours = useCallback((date: Date = new Date()): boolean => {\r\n    if (!agentConfig) return false\r\n    \r\n    const { workingHours, timezone } = agentConfig\r\n    \r\n    // Convert to agent's timezone\r\n    const agentTime = new Date(date.toLocaleString('en-US', { timeZone: timezone }))\r\n    const dayOfWeek = agentTime.getDay()\r\n    const hour = agentTime.getHours()\r\n    \r\n    return workingHours.days.includes(dayOfWeek) && \r\n           hour >= workingHours.start && \r\n           hour < workingHours.end\r\n  }, [agentConfig])\r\n\r\n  const getNextAvailableSlot = useCallback((): Date | null => {\r\n    if (!agentConfig) return null\r\n    \r\n    const { workingHours, timezone } = agentConfig\r\n    const now = new Date()\r\n    \r\n    // Find next available slot within the next 7 days\r\n    for (let i = 0; i < 7; i++) {\r\n      const checkDate = new Date(now)\r\n      checkDate.setDate(now.getDate() + i)\r\n      \r\n      const agentTime = new Date(checkDate.toLocaleString('en-US', { timeZone: timezone }))\r\n      const dayOfWeek = agentTime.getDay()\r\n      \r\n      if (workingHours.days.includes(dayOfWeek)) {\r\n        agentTime.setHours(workingHours.start, 0, 0, 0)\r\n        \r\n        // If it's today and we're past start time, use current time + 1 hour\r\n        if (i === 0 && now.getHours() >= workingHours.start) {\r\n          agentTime.setTime(now.getTime() + 60 * 60 * 1000) // Add 1 hour\r\n        }\r\n        \r\n        // Make sure it's within working hours\r\n        if (agentTime.getHours() < workingHours.end) {\r\n          return agentTime\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null\r\n  }, [agentConfig])\r\n\r\n  const canCreateNewConversation = useCallback((): boolean => {\r\n    if (!agentConfig || !organizationConfig) return false\r\n    \r\n    // Check subscription limits\r\n    const maxConversations = organizationConfig.subscriptionTier === 'basic' ? 50 :\r\n                            organizationConfig.subscriptionTier === 'pro' ? 200 : 1000\r\n    \r\n    return agentConfig.activeConversations < maxConversations\r\n  }, [agentConfig, organizationConfig])\r\n\r\n  const value: AgentContextType = {\r\n    agentConfig,\r\n    organizationConfig,\r\n    loading,\r\n    error,\r\n    updateAgentConfig,\r\n    refreshAgentConfig,\r\n    updateBotPersonality,\r\n    updateCustomResponses,\r\n    updateWorkingHours,\r\n    isWithinWorkingHours,\r\n    getNextAvailableSlot,\r\n    canCreateNewConversation,\r\n  }\r\n\r\n  return (\r\n    <AgentContext.Provider value={value}>\r\n      {children}\r\n    </AgentContext.Provider>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1576, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/app/providers.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react'\r\nimport { AuthProvider } from '@/lib/auth/AuthContext'\r\nimport { SocketProvider } from '@/lib/socket/SocketContext'\r\nimport { WABAProvider } from '@/lib/contexts/WABAContext'\r\nimport { AgentProvider } from '@/lib/contexts/AgentContext'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\r\nimport { ThemeProvider as NextThemesProvider } from 'next-themes'\r\nimport { TooltipProvider } from '@radix-ui/react-tooltip'\r\nimport dynamic from 'next/dynamic'\r\n\r\n// Create a client with modern React Query v5 configuration\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000, // 5 minutes\r\n      gcTime: 10 * 60 * 1000, // 10 minutes (renamed from cacheTime)\r\n      retry: (failureCount, error: any) => {\r\n        // Don't retry on 401/403 errors\r\n        if (error?.status === 401 || error?.status === 403) {\r\n          return false\r\n        }\r\n        return failureCount < 3\r\n      },\r\n      refetchOnWindowFocus: false,\r\n      refetchOnReconnect: 'always',\r\n    },\r\n    mutations: {\r\n      retry: 1,\r\n    },\r\n  },\r\n})\r\n\r\n// Theme context for dark/light mode\r\ninterface ThemeContextType {\r\n  theme: 'light' | 'dark'\r\n  toggleTheme: () => void\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\r\n\r\nexport function useTheme() {\r\n  const context = useContext(ThemeContext)\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nfunction ThemeProvider({ children }: { children: React.ReactNode }) {\r\n  const [theme, setTheme] = useState<'light' | 'dark'>('light')\r\n  const [mounted, setMounted] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    // Check for saved theme preference or default to light\r\n    const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null\r\n    if (savedTheme) {\r\n      setTheme(savedTheme)\r\n    } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n      setTheme('dark')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!mounted) return\r\n    localStorage.setItem('theme', theme)\r\n    if (theme === 'dark') {\r\n      document.documentElement.classList.add('dark')\r\n    } else {\r\n      document.documentElement.classList.remove('dark')\r\n    }\r\n  }, [theme, mounted])\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(prev => prev === 'light' ? 'dark' : 'light')\r\n  }\r\n\r\n  // Prevent hydration mismatch by not rendering until mounted\r\n  if (!mounted) {\r\n    return <div style={{ visibility: 'hidden' }}>{children}</div>\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\n// Temporarily disable ReactQueryDevtools production import to fix deployment\r\n// const ReactQueryDevtoolsProduction = dynamic(\r\n//   () =>\r\n//     import('@tanstack/react-query-devtools/build/modern/production.js').then(\r\n//       (d) => ({\r\n//         default: d.ReactQueryDevtools,\r\n//       }),\r\n//     ),\r\n//   {\r\n//     ssr: false,\r\n//   },\r\n// )\r\n\r\nexport function Providers({ children }: { children: React.ReactNode }) {\r\n  const [mounted, setMounted] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setMounted(true)\r\n  }, [])\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <NextThemesProvider\r\n        attribute=\"class\"\r\n        defaultTheme=\"light\"\r\n        enableSystem\r\n        disableTransitionOnChange\r\n      >\r\n        <TooltipProvider delayDuration={300}>\r\n          <AuthProvider>\r\n            <AgentProvider>\r\n              <WABAProvider>\r\n                <SocketProvider>\r\n                  {children}\r\n                  {mounted && process.env.NODE_ENV === 'development' && (\r\n                    <ReactQueryDevtools\r\n                      initialIsOpen={false}\r\n                      buttonPosition=\"bottom-left\"\r\n                      position=\"bottom\"\r\n                    />\r\n                  )}\r\n                </SocketProvider>\r\n              </WABAProvider>\r\n            </AgentProvider>\r\n          </AuthProvider>\r\n        </TooltipProvider>\r\n      </NextThemesProvider>\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAVA;;;;;;;;;;;AAaA,2DAA2D;AAC3D,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW,CAAC;IAClC,gBAAgB;QACd,SAAS;YACP,WAAW,IAAI,KAAK;YACpB,QAAQ,KAAK,KAAK;YAClB,OAAO,CAAC,cAAc;gBACpB,gCAAgC;gBAChC,IAAI,OAAO,WAAW,OAAO,OAAO,WAAW,KAAK;oBAClD,OAAO;gBACT;gBACA,OAAO,eAAe;YACxB;YACA,sBAAsB;YACtB,oBAAoB;QACtB;QACA,WAAW;YACT,OAAO;QACT;IACF;AACF;AAQA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAEA,SAAS,cAAc,EAAE,QAAQ,EAAiC;IAChE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;QACX,uDAAuD;QACvD,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,SAAS;QACX,OAAO,IAAI,OAAO,UAAU,CAAC,gCAAgC,OAAO,EAAE;YACpE,SAAS;QACX;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,SAAS;QACd,aAAa,OAAO,CAAC,SAAS;QAC9B,IAAI,UAAU,QAAQ;YACpB,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;IACF,GAAG;QAAC;QAAO;KAAQ;IAEnB,MAAM,cAAc;QAClB,SAAS,CAAA,OAAQ,SAAS,UAAU,SAAS;IAC/C;IAEA,4DAA4D;IAC5D,IAAI,CAAC,SAAS;QACZ,qBAAO,8OAAC;YAAI,OAAO;gBAAE,YAAY;YAAS;sBAAI;;;;;;IAChD;IAEA,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAY;kBAChD;;;;;;AAGP;AAeO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,qBACE,8OAAC,sLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC3B,cAAA,8OAAC,gJAAA,CAAA,gBAAkB;YACjB,WAAU;YACV,cAAa;YACb,YAAY;YACZ,yBAAyB;sBAEzB,cAAA,8OAAC,mKAAA,CAAA,kBAAe;gBAAC,eAAe;0BAC9B,cAAA,8OAAC,2HAAA,CAAA,eAAY;8BACX,cAAA,8OAAC,gIAAA,CAAA,gBAAa;kCACZ,cAAA,8OAAC,+HAAA,CAAA,eAAY;sCACX,cAAA,8OAAC,+HAAA,CAAA,iBAAc;;oCACZ;oCACA,WAAW,oDAAyB,+BACnC,8OAAC,oLAAA,CAAA,qBAAkB;wCACjB,eAAe;wCACf,gBAAe;wCACf,UAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW/B","debugId":null}},
    {"offset": {"line": 1759, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\n/**\n * Utility function to merge Tailwind CSS classes with proper precedence\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Format a number as currency\n */\nexport function formatCurrency(\n  amount: number,\n  currency: string = 'SGD',\n  locale: string = 'en-SG'\n): string {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(amount)\n}\n\n/**\n * Format a number with proper thousand separators\n */\nexport function formatNumber(\n  num: number,\n  locale: string = 'en-SG'\n): string {\n  return new Intl.NumberFormat(locale).format(num)\n}\n\n/**\n * Format a percentage with proper decimal places\n */\nexport function formatPercentage(\n  value: number,\n  decimals: number = 1\n): string {\n  return `${value.toFixed(decimals)}%`\n}\n\n/**\n * Truncate text to a specified length with ellipsis\n */\nexport function truncateText(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text\n  return text.slice(0, maxLength).trim() + '...'\n}\n\n/**\n * Generate initials from a full name\n */\nexport function getInitials(name: string): string {\n  return name\n    .split(' ')\n    .map(word => word.charAt(0))\n    .join('')\n    .toUpperCase()\n    .slice(0, 2)\n}\n\n/**\n * Debounce function to limit the rate of function calls\n */\nexport function debounce<T extends (...args: never[]) => unknown>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout | null = null\n\n  return (...args: Parameters<T>) => {\n    if (timeout) clearTimeout(timeout)\n    timeout = setTimeout(() => func(...args), wait)\n  }\n}\n\n/**\n * Throttle function to limit function calls to once per interval\n */\nexport function throttle<T extends (...args: never[]) => unknown>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean = false\n\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args)\n      inThrottle = true\n      setTimeout(() => inThrottle = false, limit)\n    }\n  }\n}\n\n/**\n * Sleep function for async delays\n */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * Generate a random ID\n */\nexport function generateId(length: number = 8): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  let result = ''\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length))\n  }\n  return result\n}\n\n/**\n * Check if a value is empty (null, undefined, empty string, empty array, empty object)\n */\nexport function isEmpty(value: unknown): boolean {\n  if (value == null) return true\n  if (typeof value === 'string') return value.trim().length === 0\n  if (Array.isArray(value)) return value.length === 0\n  if (typeof value === 'object' && value !== null) return Object.keys(value).length === 0\n  return false\n}\n\n/**\n * Deep clone an object\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') return obj\n  if (obj instanceof Date) return new Date(obj.getTime()) as unknown as T\n  if (obj instanceof Array) return obj.map(item => deepClone(item)) as unknown as T\n  if (typeof obj === 'object') {\n    const clonedObj = {} as Record<string, unknown>\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        clonedObj[key] = deepClone((obj as Record<string, unknown>)[key])\n      }\n    }\n    return clonedObj as T\n  }\n  return obj\n}\n\n/**\n * Capitalize the first letter of a string\n */\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n}\n\n/**\n * Convert camelCase to kebab-case\n */\nexport function camelToKebab(str: string): string {\n  return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * Convert kebab-case to camelCase\n */\nexport function kebabToCamel(str: string): string {\n  return str.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())\n}\n\n/**\n * Get a nested object property safely\n */\nexport function getNestedProperty<T = unknown>(obj: Record<string, unknown>, path: string): T | undefined {\n  return path.split('.').reduce((current: unknown, key: string) => {\n    if (current && typeof current === 'object' && key in current) {\n      return (current as Record<string, unknown>)[key]\n    }\n    return undefined\n  }, obj) as T | undefined\n}\n\n/**\n * Set a nested object property safely\n */\nexport function setNestedProperty(obj: Record<string, unknown>, path: string, value: unknown): void {\n  const keys = path.split('.')\n  const lastKey = keys.pop()!\n  const target = keys.reduce((current: Record<string, unknown>, key: string) => {\n    if (!(key in current)) current[key] = {}\n    return current[key] as Record<string, unknown>\n  }, obj)\n  target[lastKey] = value\n}\n\n/**\n * Remove duplicates from an array\n */\nexport function removeDuplicates<T>(array: T[], key?: keyof T): T[] {\n  if (!key) {\n    return [...new Set(array)]\n  }\n  \n  const seen = new Set()\n  return array.filter(item => {\n    const value = item[key]\n    if (seen.has(value)) return false\n    seen.add(value)\n    return true\n  })\n}\n\n/**\n * Group array items by a key\n */\nexport function groupBy<T>(array: T[], key: keyof T): Record<string, T[]> {\n  return array.reduce((groups, item) => {\n    const group = String(item[key])\n    groups[group] = groups[group] || []\n    groups[group].push(item)\n    return groups\n  }, {} as Record<string, T[]>)\n}\n\n/**\n * Sort array by multiple criteria\n */\nexport function sortBy<T>(\n  array: T[],\n  ...criteria: Array<keyof T | ((item: T) => any)>\n): T[] {\n  return [...array].sort((a, b) => {\n    for (const criterion of criteria) {\n      let aVal: unknown, bVal: unknown\n\n      if (typeof criterion === 'function') {\n        aVal = criterion(a)\n        bVal = criterion(b)\n      } else {\n        aVal = a[criterion]\n        bVal = b[criterion]\n      }\n\n      // Type-safe comparison\n      if (aVal == null && bVal != null) return -1\n      if (aVal != null && bVal == null) return 1\n      if (aVal == null && bVal == null) return 0\n\n      // Compare primitive values\n      if (typeof aVal === 'string' && typeof bVal === 'string') {\n        const comp = aVal.localeCompare(bVal)\n        if (comp !== 0) return comp\n      } else if (typeof aVal === 'number' && typeof bVal === 'number') {\n        if (aVal < bVal) return -1\n        if (aVal > bVal) return 1\n      } else if (typeof aVal === 'boolean' && typeof bVal === 'boolean') {\n        if (aVal < bVal) return -1\n        if (aVal > bVal) return 1\n      }\n    }\n    return 0\n  })\n}\n\n/**\n * Check if the current environment is development\n */\nexport const isDevelopment = process.env.NODE_ENV === 'development'\n\n/**\n * Check if the current environment is production\n */\nexport const isProduction = process.env.NODE_ENV === 'production'\n\n/**\n * Check if code is running on the client side\n */\nexport const isClient = typeof window !== 'undefined'\n\n/**\n * Check if code is running on the server side\n */\nexport const isServer = typeof window === 'undefined'\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1951, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground shadow hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-9 px-4 py-2',\n        sm: 'h-8 rounded-md px-3 text-xs',\n        lg: 'h-10 rounded-md px-8',\n        icon: 'h-9 w-9',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,qMAAA,CAAA,aAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2009, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react'\nimport { cn } from '@/lib/utils'\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-xl border bg-card text-card-foreground shadow',\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = 'Card'\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n))\nCardHeader.displayName = 'CardHeader'\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn('font-semibold leading-none tracking-tight', className)}\n    {...props}\n  />\n))\nCardTitle.displayName = 'CardTitle'\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n))\nCardDescription.displayName = 'CardDescription'\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n))\nCardContent.displayName = 'CardContent'\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n))\nCardFooter.displayName = 'CardFooter'\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,qMAAA,CAAA,aAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAErF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,qMAAA,CAAA,aAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,qMAAA,CAAA,aAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAAa,GAAG,KAAK;;;;;;AAElF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2088, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Imperial/Desktop/realestate-bot-backend/frontend/components/error-boundary.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { AlertTriangle, RefreshCw } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\n\ninterface ErrorBoundaryState {\n  hasError: boolean\n  error?: Error | null\n  errorInfo?: React.ErrorInfo | null\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode\n  fallback?: React.ComponentType<ErrorFallbackProps>\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\ninterface ErrorFallbackProps {\n  error: Error\n  resetError: () => void\n}\n\nconst DefaultErrorFallback: React.FC<ErrorFallbackProps> = ({ error, resetError }) => {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto mb-4 h-12 w-12 rounded-full bg-destructive/10 flex items-center justify-center\">\n            <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n          </div>\n          <CardTitle className=\"text-xl\">Something went wrong</CardTitle>\n          <CardDescription>\n            An unexpected error occurred. Please try refreshing the page.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {process.env.NODE_ENV === 'development' && (\n            <details className=\"text-sm\">\n              <summary className=\"cursor-pointer font-medium text-muted-foreground hover:text-foreground\">\n                Error details\n              </summary>\n              <pre className=\"mt-2 whitespace-pre-wrap break-words text-xs bg-muted p-3 rounded-md overflow-auto max-h-32\">\n                {error.message}\n                {error.stack && `\\n\\n${error.stack}`}\n              </pre>\n            </details>\n          )}\n          <div className=\"flex gap-2\">\n            <Button onClick={resetError} className=\"flex-1\">\n              <RefreshCw className=\"mr-2 h-4 w-4\" />\n              Try again\n            </Button>\n            <Button \n              variant=\"outline\" \n              onClick={() => window.location.reload()}\n              className=\"flex-1\"\n            >\n              Reload page\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return {\n      hasError: true,\n      error,\n    }\n  }\n\n  override componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo)\n    \n    // Log to error reporting service\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo)\n    }\n\n    this.setState({\n      error,\n      errorInfo,\n    })\n  }\n\n  resetError = () => {\n    this.setState({ hasError: false, error: null, errorInfo: null })\n  }\n\n  override render() {\n    if (this.state.hasError && this.state.error) {\n      const FallbackComponent = this.props.fallback || DefaultErrorFallback\n      return <FallbackComponent error={this.state.error} resetError={this.resetError} />\n    }\n\n    return this.props.children\n  }\n}\n\n// Hook for functional components to handle errors\nexport function useErrorHandler() {\n  return (error: Error, errorInfo?: React.ErrorInfo) => {\n    console.error('Error caught by useErrorHandler:', error, errorInfo)\n    \n    // In a real app, you would send this to your error reporting service\n    if (process.env.NODE_ENV === 'production') {\n      // Example: Sentry.captureException(error, { extra: errorInfo })\n    }\n  }\n}\n\n// Higher-order component for wrapping components with error boundary\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps?: Omit<ErrorBoundaryProps, 'children'>\n) {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundary>\n  )\n\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`\n  \n  return WrappedComponent\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAAA;AACA;AACA;AALA;;;;;;AAwBA,MAAM,uBAAqD,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE;IAC/E,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,yHAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,yHAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,wNAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;;;;;;sCAE3B,8OAAC,yHAAA,CAAA,YAAS;4BAAC,WAAU;sCAAU;;;;;;sCAC/B,8OAAC,yHAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;8BAInB,8OAAC,yHAAA,CAAA,cAAW;oBAAC,WAAU;;wBACpB,oDAAyB,+BACxB,8OAAC;4BAAQ,WAAU;;8CACjB,8OAAC;oCAAQ,WAAU;8CAAyE;;;;;;8CAG5F,8OAAC;oCAAI,WAAU;;wCACZ,MAAM,OAAO;wCACb,MAAM,KAAK,IAAI,CAAC,IAAI,EAAE,MAAM,KAAK,EAAE;;;;;;;;;;;;;sCAI1C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,2HAAA,CAAA,SAAM;oCAAC,SAAS;oCAAY,WAAU;;sDACrC,8OAAC,gNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;8CAGxC,8OAAC,2HAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;oCACrC,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;AAEO,MAAM,sBAAsB,qMAAA,CAAA,UAAK,CAAC,SAAS;IAChD,YAAY,KAAyB,CAAE;QACrC,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;IAEA,OAAO,yBAAyB,KAAY,EAAsB;QAChE,OAAO;YACL,UAAU;YACV;QACF;IACF;IAES,kBAAkB,KAAY,EAAE,SAA0B,EAAE;QACnE,QAAQ,KAAK,CAAC,kCAAkC,OAAO;QAEvD,iCAAiC;QACjC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;QAC5B;QAEA,IAAI,CAAC,QAAQ,CAAC;YACZ;YACA;QACF;IACF;IAEA,aAAa;QACX,IAAI,CAAC,QAAQ,CAAC;YAAE,UAAU;YAAO,OAAO;YAAM,WAAW;QAAK;IAChE,EAAC;IAEQ,SAAS;QAChB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAC3C,MAAM,oBAAoB,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI;YACjD,qBAAO,8OAAC;gBAAkB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;gBAAE,YAAY,IAAI,CAAC,UAAU;;;;;;QAChF;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;AAGO,SAAS;IACd,OAAO,CAAC,OAAc;QACpB,QAAQ,KAAK,CAAC,oCAAoC,OAAO;QAEzD,qEAAqE;QACrE,IAAI,oDAAyB,cAAc;QACzC,gEAAgE;QAClE;IACF;AACF;AAGO,SAAS,kBACd,SAAiC,EACjC,kBAAyD;IAEzD,MAAM,mBAAmB,CAAC,sBACxB,8OAAC;YAAe,GAAG,kBAAkB;sBACnC,cAAA,8OAAC;gBAAW,GAAG,KAAK;;;;;;;;;;;IAIxB,iBAAiB,WAAW,GAAG,CAAC,kBAAkB,EAAE,UAAU,WAAW,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC;IAE9F,OAAO;AACT","debugId":null}}]
}